//
// File generated by rootcint at Thu Dec 30 19:53:14 2021

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIOnlToolsdIJevpdIJevp_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Jevp_Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void PlotHisto_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PlotHisto(void *p = 0);
   static void *newArray_PlotHisto(Long_t size, void *p);
   static void delete_PlotHisto(void *p);
   static void deleteArray_PlotHisto(void *p);
   static void destruct_PlotHisto(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PlotHisto*)
   {
      ::PlotHisto *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PlotHisto >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PlotHisto", ::PlotHisto::Class_Version(), "OnlTools/Jevp/StJevpPlot/JevpPlot.h", 14,
                  typeid(::PlotHisto), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PlotHisto::Dictionary, isa_proxy, 4,
                  sizeof(::PlotHisto) );
      instance.SetNew(&new_PlotHisto);
      instance.SetNewArray(&newArray_PlotHisto);
      instance.SetDelete(&delete_PlotHisto);
      instance.SetDeleteArray(&deleteArray_PlotHisto);
      instance.SetDestructor(&destruct_PlotHisto);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PlotHisto*)
   {
      return GenerateInitInstanceLocal((::PlotHisto*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PlotHisto*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void JevpPlot_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JevpPlot(void *p = 0);
   static void *newArray_JevpPlot(Long_t size, void *p);
   static void delete_JevpPlot(void *p);
   static void deleteArray_JevpPlot(void *p);
   static void destruct_JevpPlot(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::JevpPlot*)
   {
      ::JevpPlot *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JevpPlot >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JevpPlot", ::JevpPlot::Class_Version(), "OnlTools/Jevp/StJevpPlot/JevpPlot.h", 40,
                  typeid(::JevpPlot), ::ROOT::DefineBehavior(ptr, ptr),
                  &::JevpPlot::Dictionary, isa_proxy, 4,
                  sizeof(::JevpPlot) );
      instance.SetNew(&new_JevpPlot);
      instance.SetNewArray(&newArray_JevpPlot);
      instance.SetDelete(&delete_JevpPlot);
      instance.SetDeleteArray(&deleteArray_JevpPlot);
      instance.SetDestructor(&destruct_JevpPlot);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::JevpPlot*)
   {
      return GenerateInitInstanceLocal((::JevpPlot*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JevpPlot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BuilderStatus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BuilderStatus(void *p = 0);
   static void *newArray_BuilderStatus(Long_t size, void *p);
   static void delete_BuilderStatus(void *p);
   static void deleteArray_BuilderStatus(void *p);
   static void destruct_BuilderStatus(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BuilderStatus*)
   {
      ::BuilderStatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BuilderStatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BuilderStatus", ::BuilderStatus::Class_Version(), "OnlTools/Jevp/StJevpPlot/BuilderStatus.h", 12,
                  typeid(::BuilderStatus), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BuilderStatus::Dictionary, isa_proxy, 4,
                  sizeof(::BuilderStatus) );
      instance.SetNew(&new_BuilderStatus);
      instance.SetNewArray(&newArray_BuilderStatus);
      instance.SetDelete(&delete_BuilderStatus);
      instance.SetDeleteArray(&deleteArray_BuilderStatus);
      instance.SetDestructor(&destruct_BuilderStatus);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BuilderStatus*)
   {
      return GenerateInitInstanceLocal((::BuilderStatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BuilderStatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void JLatex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JLatex(void *p = 0);
   static void *newArray_JLatex(Long_t size, void *p);
   static void delete_JLatex(void *p);
   static void deleteArray_JLatex(void *p);
   static void destruct_JLatex(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::JLatex*)
   {
      ::JLatex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JLatex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JLatex", ::JLatex::Class_Version(), "OnlTools/Jevp/StJevpPlot/JLatex.h", 9,
                  typeid(::JLatex), ::ROOT::DefineBehavior(ptr, ptr),
                  &::JLatex::Dictionary, isa_proxy, 4,
                  sizeof(::JLatex) );
      instance.SetNew(&new_JLatex);
      instance.SetNewArray(&newArray_JLatex);
      instance.SetDelete(&delete_JLatex);
      instance.SetDeleteArray(&deleteArray_JLatex);
      instance.SetDestructor(&destruct_JLatex);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::JLatex*)
   {
      return GenerateInitInstanceLocal((::JLatex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JLatex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void JLine_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JLine(void *p = 0);
   static void *newArray_JLine(Long_t size, void *p);
   static void delete_JLine(void *p);
   static void deleteArray_JLine(void *p);
   static void destruct_JLine(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::JLine*)
   {
      ::JLine *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JLine >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JLine", ::JLine::Class_Version(), "OnlTools/Jevp/StJevpPlot/JLine.h", 8,
                  typeid(::JLine), ::ROOT::DefineBehavior(ptr, ptr),
                  &::JLine::Dictionary, isa_proxy, 4,
                  sizeof(::JLine) );
      instance.SetNew(&new_JLine);
      instance.SetNewArray(&newArray_JLine);
      instance.SetDelete(&delete_JLine);
      instance.SetDeleteArray(&deleteArray_JLine);
      instance.SetDestructor(&destruct_JLine);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::JLine*)
   {
      return GenerateInitInstanceLocal((::JLine*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JLine*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EvpMessage_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EvpMessage(void *p = 0);
   static void *newArray_EvpMessage(Long_t size, void *p);
   static void delete_EvpMessage(void *p);
   static void deleteArray_EvpMessage(void *p);
   static void destruct_EvpMessage(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EvpMessage*)
   {
      ::EvpMessage *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EvpMessage >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EvpMessage", ::EvpMessage::Class_Version(), "OnlTools/Jevp/StJevpPlot/EvpMessage.h", 6,
                  typeid(::EvpMessage), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EvpMessage::Dictionary, isa_proxy, 4,
                  sizeof(::EvpMessage) );
      instance.SetNew(&new_EvpMessage);
      instance.SetNewArray(&newArray_EvpMessage);
      instance.SetDelete(&delete_EvpMessage);
      instance.SetDeleteArray(&deleteArray_EvpMessage);
      instance.SetDestructor(&destruct_EvpMessage);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EvpMessage*)
   {
      return GenerateInitInstanceLocal((::EvpMessage*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EvpMessage*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RunStatus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RunStatus(void *p = 0);
   static void *newArray_RunStatus(Long_t size, void *p);
   static void delete_RunStatus(void *p);
   static void deleteArray_RunStatus(void *p);
   static void destruct_RunStatus(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RunStatus*)
   {
      ::RunStatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RunStatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RunStatus", ::RunStatus::Class_Version(), "OnlTools/Jevp/StJevpPlot/RunStatus.h", 12,
                  typeid(::RunStatus), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RunStatus::Dictionary, isa_proxy, 4,
                  sizeof(::RunStatus) );
      instance.SetNew(&new_RunStatus);
      instance.SetNewArray(&newArray_RunStatus);
      instance.SetDelete(&delete_RunStatus);
      instance.SetDeleteArray(&deleteArray_RunStatus);
      instance.SetDestructor(&destruct_RunStatus);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RunStatus*)
   {
      return GenerateInitInstanceLocal((::RunStatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RunStatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void JevpPlotSet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JevpPlotSet(void *p = 0);
   static void *newArray_JevpPlotSet(Long_t size, void *p);
   static void delete_JevpPlotSet(void *p);
   static void deleteArray_JevpPlotSet(void *p);
   static void destruct_JevpPlotSet(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::JevpPlotSet*)
   {
      ::JevpPlotSet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JevpPlotSet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JevpPlotSet", ::JevpPlotSet::Class_Version(), "OnlTools/Jevp/StJevpPlot/JevpPlotSet.h", 36,
                  typeid(::JevpPlotSet), ::ROOT::DefineBehavior(ptr, ptr),
                  &::JevpPlotSet::Dictionary, isa_proxy, 4,
                  sizeof(::JevpPlotSet) );
      instance.SetNew(&new_JevpPlotSet);
      instance.SetNewArray(&newArray_JevpPlotSet);
      instance.SetDelete(&delete_JevpPlotSet);
      instance.SetDeleteArray(&deleteArray_JevpPlotSet);
      instance.SetDestructor(&destruct_JevpPlotSet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::JevpPlotSet*)
   {
      return GenerateInitInstanceLocal((::JevpPlotSet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JevpPlotSet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void JevpBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JevpBuilder(void *p = 0);
   static void *newArray_JevpBuilder(Long_t size, void *p);
   static void delete_JevpBuilder(void *p);
   static void deleteArray_JevpBuilder(void *p);
   static void destruct_JevpBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::JevpBuilder*)
   {
      ::JevpBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JevpBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JevpBuilder", ::JevpBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/JevpBuilder.h", 21,
                  typeid(::JevpBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::JevpBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::JevpBuilder) );
      instance.SetNew(&new_JevpBuilder);
      instance.SetNewArray(&newArray_JevpBuilder);
      instance.SetDelete(&delete_JevpBuilder);
      instance.SetDeleteArray(&deleteArray_JevpBuilder);
      instance.SetDestructor(&destruct_JevpBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::JevpBuilder*)
   {
      return GenerateInitInstanceLocal((::JevpBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JevpBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void baseBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_baseBuilder(void *p = 0);
   static void *newArray_baseBuilder(Long_t size, void *p);
   static void delete_baseBuilder(void *p);
   static void deleteArray_baseBuilder(void *p);
   static void destruct_baseBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::baseBuilder*)
   {
      ::baseBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::baseBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("baseBuilder", ::baseBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/baseBuilder.h", 21,
                  typeid(::baseBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::baseBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::baseBuilder) );
      instance.SetNew(&new_baseBuilder);
      instance.SetNewArray(&newArray_baseBuilder);
      instance.SetDelete(&delete_baseBuilder);
      instance.SetDeleteArray(&deleteArray_baseBuilder);
      instance.SetDestructor(&destruct_baseBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::baseBuilder*)
   {
      return GenerateInitInstanceLocal((::baseBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::baseBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void bbcBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_bbcBuilder(void *p = 0);
   static void *newArray_bbcBuilder(Long_t size, void *p);
   static void delete_bbcBuilder(void *p);
   static void deleteArray_bbcBuilder(void *p);
   static void destruct_bbcBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::bbcBuilder*)
   {
      ::bbcBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::bbcBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("bbcBuilder", ::bbcBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/bbcBuilder.h", 11,
                  typeid(::bbcBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::bbcBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::bbcBuilder) );
      instance.SetNew(&new_bbcBuilder);
      instance.SetNewArray(&newArray_bbcBuilder);
      instance.SetDelete(&delete_bbcBuilder);
      instance.SetDeleteArray(&deleteArray_bbcBuilder);
      instance.SetDestructor(&destruct_bbcBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::bbcBuilder*)
   {
      return GenerateInitInstanceLocal((::bbcBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::bbcBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void bemcBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_bemcBuilder(void *p = 0);
   static void *newArray_bemcBuilder(Long_t size, void *p);
   static void delete_bemcBuilder(void *p);
   static void deleteArray_bemcBuilder(void *p);
   static void destruct_bemcBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::bemcBuilder*)
   {
      ::bemcBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::bemcBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("bemcBuilder", ::bemcBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/bemcBuilder.h", 13,
                  typeid(::bemcBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::bemcBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::bemcBuilder) );
      instance.SetNew(&new_bemcBuilder);
      instance.SetNewArray(&newArray_bemcBuilder);
      instance.SetDelete(&delete_bemcBuilder);
      instance.SetDeleteArray(&deleteArray_bemcBuilder);
      instance.SetDestructor(&destruct_bemcBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::bemcBuilder*)
   {
      return GenerateInitInstanceLocal((::bemcBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::bemcBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void daqBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_daqBuilder(void *p = 0);
   static void *newArray_daqBuilder(Long_t size, void *p);
   static void delete_daqBuilder(void *p);
   static void deleteArray_daqBuilder(void *p);
   static void destruct_daqBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::daqBuilder*)
   {
      ::daqBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::daqBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("daqBuilder", ::daqBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/daqBuilder.h", 11,
                  typeid(::daqBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::daqBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::daqBuilder) );
      instance.SetNew(&new_daqBuilder);
      instance.SetNewArray(&newArray_daqBuilder);
      instance.SetDelete(&delete_daqBuilder);
      instance.SetDeleteArray(&deleteArray_daqBuilder);
      instance.SetDestructor(&destruct_daqBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::daqBuilder*)
   {
      return GenerateInitInstanceLocal((::daqBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::daqBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void eemcBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_eemcBuilder(void *p = 0);
   static void *newArray_eemcBuilder(Long_t size, void *p);
   static void delete_eemcBuilder(void *p);
   static void deleteArray_eemcBuilder(void *p);
   static void destruct_eemcBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::eemcBuilder*)
   {
      ::eemcBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::eemcBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("eemcBuilder", ::eemcBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/eemcBuilder.h", 22,
                  typeid(::eemcBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::eemcBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::eemcBuilder) );
      instance.SetNew(&new_eemcBuilder);
      instance.SetNewArray(&newArray_eemcBuilder);
      instance.SetDelete(&delete_eemcBuilder);
      instance.SetDeleteArray(&deleteArray_eemcBuilder);
      instance.SetDestructor(&destruct_eemcBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::eemcBuilder*)
   {
      return GenerateInitInstanceLocal((::eemcBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::eemcBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void epdBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_epdBuilder(void *p = 0);
   static void *newArray_epdBuilder(Long_t size, void *p);
   static void delete_epdBuilder(void *p);
   static void deleteArray_epdBuilder(void *p);
   static void destruct_epdBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::epdBuilder*)
   {
      ::epdBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::epdBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("epdBuilder", ::epdBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/epdBuilder.h", 14,
                  typeid(::epdBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::epdBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::epdBuilder) );
      instance.SetNew(&new_epdBuilder);
      instance.SetNewArray(&newArray_epdBuilder);
      instance.SetDelete(&delete_epdBuilder);
      instance.SetDeleteArray(&deleteArray_epdBuilder);
      instance.SetDestructor(&destruct_epdBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::epdBuilder*)
   {
      return GenerateInitInstanceLocal((::epdBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::epdBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void etofBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_etofBuilder(void *p = 0);
   static void *newArray_etofBuilder(Long_t size, void *p);
   static void delete_etofBuilder(void *p);
   static void deleteArray_etofBuilder(void *p);
   static void destruct_etofBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::etofBuilder*)
   {
      ::etofBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::etofBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("etofBuilder", ::etofBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/etofBuilder.h", 18,
                  typeid(::etofBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::etofBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::etofBuilder) );
      instance.SetNew(&new_etofBuilder);
      instance.SetNewArray(&newArray_etofBuilder);
      instance.SetDelete(&delete_etofBuilder);
      instance.SetDeleteArray(&deleteArray_etofBuilder);
      instance.SetDestructor(&destruct_etofBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::etofBuilder*)
   {
      return GenerateInitInstanceLocal((::etofBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::etofBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void fgtBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_fgtBuilder(void *p = 0);
   static void *newArray_fgtBuilder(Long_t size, void *p);
   static void delete_fgtBuilder(void *p);
   static void deleteArray_fgtBuilder(void *p);
   static void destruct_fgtBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::fgtBuilder*)
   {
      ::fgtBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::fgtBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("fgtBuilder", ::fgtBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/fgtBuilder.h", 15,
                  typeid(::fgtBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::fgtBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::fgtBuilder) );
      instance.SetNew(&new_fgtBuilder);
      instance.SetNewArray(&newArray_fgtBuilder);
      instance.SetDelete(&delete_fgtBuilder);
      instance.SetDeleteArray(&deleteArray_fgtBuilder);
      instance.SetDestructor(&destruct_fgtBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::fgtBuilder*)
   {
      return GenerateInitInstanceLocal((::fgtBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::fgtBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void fmsBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_fmsBuilder(void *p = 0);
   static void *newArray_fmsBuilder(Long_t size, void *p);
   static void delete_fmsBuilder(void *p);
   static void deleteArray_fmsBuilder(void *p);
   static void destruct_fmsBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::fmsBuilder*)
   {
      ::fmsBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::fmsBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("fmsBuilder", ::fmsBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/fmsBuilder.h", 41,
                  typeid(::fmsBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::fmsBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::fmsBuilder) );
      instance.SetNew(&new_fmsBuilder);
      instance.SetNewArray(&newArray_fmsBuilder);
      instance.SetDelete(&delete_fmsBuilder);
      instance.SetDeleteArray(&deleteArray_fmsBuilder);
      instance.SetDestructor(&destruct_fmsBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::fmsBuilder*)
   {
      return GenerateInitInstanceLocal((::fmsBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::fmsBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void fpdBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_fpdBuilder(void *p = 0);
   static void *newArray_fpdBuilder(Long_t size, void *p);
   static void delete_fpdBuilder(void *p);
   static void deleteArray_fpdBuilder(void *p);
   static void destruct_fpdBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::fpdBuilder*)
   {
      ::fpdBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::fpdBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("fpdBuilder", ::fpdBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/fpdBuilder.h", 11,
                  typeid(::fpdBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::fpdBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::fpdBuilder) );
      instance.SetNew(&new_fpdBuilder);
      instance.SetNewArray(&newArray_fpdBuilder);
      instance.SetDelete(&delete_fpdBuilder);
      instance.SetDeleteArray(&deleteArray_fpdBuilder);
      instance.SetDestructor(&destruct_fpdBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::fpdBuilder*)
   {
      return GenerateInitInstanceLocal((::fpdBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::fpdBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void fpsBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_fpsBuilder(void *p = 0);
   static void *newArray_fpsBuilder(Long_t size, void *p);
   static void delete_fpsBuilder(void *p);
   static void deleteArray_fpsBuilder(void *p);
   static void destruct_fpsBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::fpsBuilder*)
   {
      ::fpsBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::fpsBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("fpsBuilder", ::fpsBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/fpsBuilder.h", 13,
                  typeid(::fpsBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::fpsBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::fpsBuilder) );
      instance.SetNew(&new_fpsBuilder);
      instance.SetNewArray(&newArray_fpsBuilder);
      instance.SetDelete(&delete_fpsBuilder);
      instance.SetDeleteArray(&deleteArray_fpsBuilder);
      instance.SetDestructor(&destruct_fpsBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::fpsBuilder*)
   {
      return GenerateInitInstanceLocal((::fpsBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::fpsBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void fstBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_fstBuilder(void *p = 0);
   static void *newArray_fstBuilder(Long_t size, void *p);
   static void delete_fstBuilder(void *p);
   static void deleteArray_fstBuilder(void *p);
   static void destruct_fstBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::fstBuilder*)
   {
      ::fstBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::fstBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("fstBuilder", ::fstBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/fstBuilder.h", 23,
                  typeid(::fstBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::fstBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::fstBuilder) );
      instance.SetNew(&new_fstBuilder);
      instance.SetNewArray(&newArray_fstBuilder);
      instance.SetDelete(&delete_fstBuilder);
      instance.SetDeleteArray(&deleteArray_fstBuilder);
      instance.SetDestructor(&destruct_fstBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::fstBuilder*)
   {
      return GenerateInitInstanceLocal((::fstBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::fstBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void gmtBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_gmtBuilder(void *p = 0);
   static void *newArray_gmtBuilder(Long_t size, void *p);
   static void delete_gmtBuilder(void *p);
   static void deleteArray_gmtBuilder(void *p);
   static void destruct_gmtBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::gmtBuilder*)
   {
      ::gmtBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::gmtBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("gmtBuilder", ::gmtBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/gmtBuilder.h", 12,
                  typeid(::gmtBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::gmtBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::gmtBuilder) );
      instance.SetNew(&new_gmtBuilder);
      instance.SetNewArray(&newArray_gmtBuilder);
      instance.SetDelete(&delete_gmtBuilder);
      instance.SetDeleteArray(&deleteArray_gmtBuilder);
      instance.SetDestructor(&destruct_gmtBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::gmtBuilder*)
   {
      return GenerateInitInstanceLocal((::gmtBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::gmtBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void hltBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_hltBuilder(void *p = 0);
   static void *newArray_hltBuilder(Long_t size, void *p);
   static void delete_hltBuilder(void *p);
   static void deleteArray_hltBuilder(void *p);
   static void destruct_hltBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::hltBuilder*)
   {
      ::hltBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::hltBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("hltBuilder", ::hltBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/hltBuilder.h", 37,
                  typeid(::hltBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::hltBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::hltBuilder) );
      instance.SetNew(&new_hltBuilder);
      instance.SetNewArray(&newArray_hltBuilder);
      instance.SetDelete(&delete_hltBuilder);
      instance.SetDeleteArray(&deleteArray_hltBuilder);
      instance.SetDestructor(&destruct_hltBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::hltBuilder*)
   {
      return GenerateInitInstanceLocal((::hltBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::hltBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HltphiBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HltphiBuilder(void *p = 0);
   static void *newArray_HltphiBuilder(Long_t size, void *p);
   static void delete_HltphiBuilder(void *p);
   static void deleteArray_HltphiBuilder(void *p);
   static void destruct_HltphiBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HltphiBuilder*)
   {
      ::HltphiBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HltphiBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HltphiBuilder", ::HltphiBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/hltphiBuilder.h", 37,
                  typeid(::HltphiBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HltphiBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::HltphiBuilder) );
      instance.SetNew(&new_HltphiBuilder);
      instance.SetNewArray(&newArray_HltphiBuilder);
      instance.SetDelete(&delete_HltphiBuilder);
      instance.SetDeleteArray(&deleteArray_HltphiBuilder);
      instance.SetDestructor(&destruct_HltphiBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HltphiBuilder*)
   {
      return GenerateInitInstanceLocal((::HltphiBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HltphiBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void istBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_istBuilder(void *p = 0);
   static void *newArray_istBuilder(Long_t size, void *p);
   static void delete_istBuilder(void *p);
   static void deleteArray_istBuilder(void *p);
   static void destruct_istBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::istBuilder*)
   {
      ::istBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::istBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("istBuilder", ::istBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/istBuilder.h", 22,
                  typeid(::istBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::istBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::istBuilder) );
      instance.SetNew(&new_istBuilder);
      instance.SetNewArray(&newArray_istBuilder);
      instance.SetDelete(&delete_istBuilder);
      instance.SetDeleteArray(&deleteArray_istBuilder);
      instance.SetDestructor(&destruct_istBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::istBuilder*)
   {
      return GenerateInitInstanceLocal((::istBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::istBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void itpcBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_itpcBuilder(void *p = 0);
   static void *newArray_itpcBuilder(Long_t size, void *p);
   static void delete_itpcBuilder(void *p);
   static void deleteArray_itpcBuilder(void *p);
   static void destruct_itpcBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::itpcBuilder*)
   {
      ::itpcBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::itpcBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("itpcBuilder", ::itpcBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/itpcBuilder.h", 13,
                  typeid(::itpcBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::itpcBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::itpcBuilder) );
      instance.SetNew(&new_itpcBuilder);
      instance.SetNewArray(&newArray_itpcBuilder);
      instance.SetDelete(&delete_itpcBuilder);
      instance.SetDeleteArray(&deleteArray_itpcBuilder);
      instance.SetDestructor(&destruct_itpcBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::itpcBuilder*)
   {
      return GenerateInitInstanceLocal((::itpcBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::itpcBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void l3Builder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_l3Builder(void *p = 0);
   static void *newArray_l3Builder(Long_t size, void *p);
   static void delete_l3Builder(void *p);
   static void deleteArray_l3Builder(void *p);
   static void destruct_l3Builder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::l3Builder*)
   {
      ::l3Builder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::l3Builder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("l3Builder", ::l3Builder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/l3Builder.h", 11,
                  typeid(::l3Builder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::l3Builder::Dictionary, isa_proxy, 4,
                  sizeof(::l3Builder) );
      instance.SetNew(&new_l3Builder);
      instance.SetNewArray(&newArray_l3Builder);
      instance.SetDelete(&delete_l3Builder);
      instance.SetDeleteArray(&deleteArray_l3Builder);
      instance.SetDestructor(&destruct_l3Builder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::l3Builder*)
   {
      return GenerateInitInstanceLocal((::l3Builder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::l3Builder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void l4Builder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_l4Builder(void *p = 0);
   static void *newArray_l4Builder(Long_t size, void *p);
   static void delete_l4Builder(void *p);
   static void deleteArray_l4Builder(void *p);
   static void destruct_l4Builder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::l4Builder*)
   {
      ::l4Builder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::l4Builder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("l4Builder", ::l4Builder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/l4Builder.h", 36,
                  typeid(::l4Builder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::l4Builder::Dictionary, isa_proxy, 4,
                  sizeof(::l4Builder) );
      instance.SetNew(&new_l4Builder);
      instance.SetNewArray(&newArray_l4Builder);
      instance.SetDelete(&delete_l4Builder);
      instance.SetDeleteArray(&deleteArray_l4Builder);
      instance.SetDestructor(&destruct_l4Builder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::l4Builder*)
   {
      return GenerateInitInstanceLocal((::l4Builder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::l4Builder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void mtdBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_mtdBuilder(void *p = 0);
   static void *newArray_mtdBuilder(Long_t size, void *p);
   static void delete_mtdBuilder(void *p);
   static void deleteArray_mtdBuilder(void *p);
   static void destruct_mtdBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::mtdBuilder*)
   {
      ::mtdBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::mtdBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("mtdBuilder", ::mtdBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/mtdBuilder.h", 17,
                  typeid(::mtdBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::mtdBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::mtdBuilder) );
      instance.SetNew(&new_mtdBuilder);
      instance.SetNewArray(&newArray_mtdBuilder);
      instance.SetDelete(&delete_mtdBuilder);
      instance.SetDeleteArray(&deleteArray_mtdBuilder);
      instance.SetDestructor(&destruct_mtdBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::mtdBuilder*)
   {
      return GenerateInitInstanceLocal((::mtdBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::mtdBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ppBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ppBuilder(void *p = 0);
   static void *newArray_ppBuilder(Long_t size, void *p);
   static void delete_ppBuilder(void *p);
   static void deleteArray_ppBuilder(void *p);
   static void destruct_ppBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ppBuilder*)
   {
      ::ppBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ppBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ppBuilder", ::ppBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/ppBuilder.h", 12,
                  typeid(::ppBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ppBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::ppBuilder) );
      instance.SetNew(&new_ppBuilder);
      instance.SetNewArray(&newArray_ppBuilder);
      instance.SetDelete(&delete_ppBuilder);
      instance.SetDeleteArray(&deleteArray_ppBuilder);
      instance.SetDestructor(&destruct_ppBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ppBuilder*)
   {
      return GenerateInitInstanceLocal((::ppBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ppBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void pxlBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_pxlBuilder(void *p = 0);
   static void *newArray_pxlBuilder(Long_t size, void *p);
   static void delete_pxlBuilder(void *p);
   static void deleteArray_pxlBuilder(void *p);
   static void destruct_pxlBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::pxlBuilder*)
   {
      ::pxlBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::pxlBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("pxlBuilder", ::pxlBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/pxlBuilder.h", 18,
                  typeid(::pxlBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::pxlBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::pxlBuilder) );
      instance.SetNew(&new_pxlBuilder);
      instance.SetNewArray(&newArray_pxlBuilder);
      instance.SetDelete(&delete_pxlBuilder);
      instance.SetDeleteArray(&deleteArray_pxlBuilder);
      instance.SetDestructor(&destruct_pxlBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::pxlBuilder*)
   {
      return GenerateInitInstanceLocal((::pxlBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::pxlBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ssdBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ssdBuilder(void *p = 0);
   static void *newArray_ssdBuilder(Long_t size, void *p);
   static void delete_ssdBuilder(void *p);
   static void deleteArray_ssdBuilder(void *p);
   static void destruct_ssdBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ssdBuilder*)
   {
      ::ssdBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ssdBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ssdBuilder", ::ssdBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/ssdBuilder.h", 16,
                  typeid(::ssdBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ssdBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::ssdBuilder) );
      instance.SetNew(&new_ssdBuilder);
      instance.SetNewArray(&newArray_ssdBuilder);
      instance.SetDelete(&delete_ssdBuilder);
      instance.SetDeleteArray(&deleteArray_ssdBuilder);
      instance.SetDestructor(&destruct_ssdBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ssdBuilder*)
   {
      return GenerateInitInstanceLocal((::ssdBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ssdBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void tofBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_tofBuilder(void *p = 0);
   static void *newArray_tofBuilder(Long_t size, void *p);
   static void delete_tofBuilder(void *p);
   static void deleteArray_tofBuilder(void *p);
   static void destruct_tofBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::tofBuilder*)
   {
      ::tofBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::tofBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("tofBuilder", ::tofBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/tofBuilder.h", 16,
                  typeid(::tofBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::tofBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::tofBuilder) );
      instance.SetNew(&new_tofBuilder);
      instance.SetNewArray(&newArray_tofBuilder);
      instance.SetDelete(&delete_tofBuilder);
      instance.SetDeleteArray(&deleteArray_tofBuilder);
      instance.SetDestructor(&destruct_tofBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::tofBuilder*)
   {
      return GenerateInitInstanceLocal((::tofBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::tofBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void tpcBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_tpcBuilder(void *p = 0);
   static void *newArray_tpcBuilder(Long_t size, void *p);
   static void delete_tpcBuilder(void *p);
   static void deleteArray_tpcBuilder(void *p);
   static void destruct_tpcBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::tpcBuilder*)
   {
      ::tpcBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::tpcBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("tpcBuilder", ::tpcBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/tpcBuilder.h", 13,
                  typeid(::tpcBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::tpcBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::tpcBuilder) );
      instance.SetNew(&new_tpcBuilder);
      instance.SetNewArray(&newArray_tpcBuilder);
      instance.SetDelete(&delete_tpcBuilder);
      instance.SetDeleteArray(&deleteArray_tpcBuilder);
      instance.SetDestructor(&destruct_tpcBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::tpcBuilder*)
   {
      return GenerateInitInstanceLocal((::tpcBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::tpcBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void tpxBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_tpxBuilder(void *p = 0);
   static void *newArray_tpxBuilder(Long_t size, void *p);
   static void delete_tpxBuilder(void *p);
   static void deleteArray_tpxBuilder(void *p);
   static void destruct_tpxBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::tpxBuilder*)
   {
      ::tpxBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::tpxBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("tpxBuilder", ::tpxBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/tpxBuilder.h", 13,
                  typeid(::tpxBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::tpxBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::tpxBuilder) );
      instance.SetNew(&new_tpxBuilder);
      instance.SetNewArray(&newArray_tpxBuilder);
      instance.SetDelete(&delete_tpxBuilder);
      instance.SetDeleteArray(&deleteArray_tpxBuilder);
      instance.SetDestructor(&destruct_tpxBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::tpxBuilder*)
   {
      return GenerateInitInstanceLocal((::tpxBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::tpxBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void trgBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_trgBuilder(void *p = 0);
   static void *newArray_trgBuilder(Long_t size, void *p);
   static void delete_trgBuilder(void *p);
   static void deleteArray_trgBuilder(void *p);
   static void destruct_trgBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::trgBuilder*)
   {
      ::trgBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::trgBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("trgBuilder", ::trgBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/trgBuilder.h", 22,
                  typeid(::trgBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::trgBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::trgBuilder) );
      instance.SetNew(&new_trgBuilder);
      instance.SetNewArray(&newArray_trgBuilder);
      instance.SetDelete(&delete_trgBuilder);
      instance.SetDeleteArray(&deleteArray_trgBuilder);
      instance.SetDestructor(&destruct_trgBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::trgBuilder*)
   {
      return GenerateInitInstanceLocal((::trgBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::trgBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void upcBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_upcBuilder(void *p = 0);
   static void *newArray_upcBuilder(Long_t size, void *p);
   static void delete_upcBuilder(void *p);
   static void deleteArray_upcBuilder(void *p);
   static void destruct_upcBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::upcBuilder*)
   {
      ::upcBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::upcBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("upcBuilder", ::upcBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/upcBuilder.h", 11,
                  typeid(::upcBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::upcBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::upcBuilder) );
      instance.SetNew(&new_upcBuilder);
      instance.SetNewArray(&newArray_upcBuilder);
      instance.SetDelete(&delete_upcBuilder);
      instance.SetDeleteArray(&deleteArray_upcBuilder);
      instance.SetDestructor(&destruct_upcBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::upcBuilder*)
   {
      return GenerateInitInstanceLocal((::upcBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::upcBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void vpdBuilder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_vpdBuilder(void *p = 0);
   static void *newArray_vpdBuilder(Long_t size, void *p);
   static void delete_vpdBuilder(void *p);
   static void deleteArray_vpdBuilder(void *p);
   static void destruct_vpdBuilder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::vpdBuilder*)
   {
      ::vpdBuilder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::vpdBuilder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("vpdBuilder", ::vpdBuilder::Class_Version(), "OnlTools/Jevp/StJevpBuilders/vpdBuilder.h", 24,
                  typeid(::vpdBuilder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::vpdBuilder::Dictionary, isa_proxy, 4,
                  sizeof(::vpdBuilder) );
      instance.SetNew(&new_vpdBuilder);
      instance.SetNewArray(&newArray_vpdBuilder);
      instance.SetDelete(&delete_vpdBuilder);
      instance.SetDeleteArray(&deleteArray_vpdBuilder);
      instance.SetDestructor(&destruct_vpdBuilder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::vpdBuilder*)
   {
      return GenerateInitInstanceLocal((::vpdBuilder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vpdBuilder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void JevpServerMain_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JevpServerMain(void *p = 0);
   static void *newArray_JevpServerMain(Long_t size, void *p);
   static void delete_JevpServerMain(void *p);
   static void deleteArray_JevpServerMain(void *p);
   static void destruct_JevpServerMain(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::JevpServerMain*)
   {
      ::JevpServerMain *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JevpServerMain >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JevpServerMain", ::JevpServerMain::Class_Version(), "OnlTools/Jevp/StJevpServer/JevpServerMain.h", 3,
                  typeid(::JevpServerMain), ::ROOT::DefineBehavior(ptr, ptr),
                  &::JevpServerMain::Dictionary, isa_proxy, 4,
                  sizeof(::JevpServerMain) );
      instance.SetNew(&new_JevpServerMain);
      instance.SetNewArray(&newArray_JevpServerMain);
      instance.SetDelete(&delete_JevpServerMain);
      instance.SetDeleteArray(&deleteArray_JevpServerMain);
      instance.SetDestructor(&destruct_JevpServerMain);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::JevpServerMain*)
   {
      return GenerateInitInstanceLocal((::JevpServerMain*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JevpServerMain*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TGTabElement2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TGTabElement2(void *p = 0);
   static void *newArray_TGTabElement2(Long_t size, void *p);
   static void delete_TGTabElement2(void *p);
   static void deleteArray_TGTabElement2(void *p);
   static void destruct_TGTabElement2(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TGTabElement2*)
   {
      ::TGTabElement2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGTabElement2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGTabElement2", ::TGTabElement2::Class_Version(), "OnlTools/Jevp/StJevpViewer/TGTab2.h", 149,
                  typeid(::TGTabElement2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TGTabElement2::Dictionary, isa_proxy, 4,
                  sizeof(::TGTabElement2) );
      instance.SetNew(&new_TGTabElement2);
      instance.SetNewArray(&newArray_TGTabElement2);
      instance.SetDelete(&delete_TGTabElement2);
      instance.SetDeleteArray(&deleteArray_TGTabElement2);
      instance.SetDestructor(&destruct_TGTabElement2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TGTabElement2*)
   {
      return GenerateInitInstanceLocal((::TGTabElement2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGTabElement2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TGTab2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TGTab2(void *p = 0);
   static void *newArray_TGTab2(Long_t size, void *p);
   static void delete_TGTab2(void *p);
   static void deleteArray_TGTab2(void *p);
   static void destruct_TGTab2(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TGTab2*)
   {
      ::TGTab2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGTab2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGTab2", ::TGTab2::Class_Version(), "OnlTools/Jevp/StJevpViewer/TGTab2.h", 71,
                  typeid(::TGTab2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TGTab2::Dictionary, isa_proxy, 4,
                  sizeof(::TGTab2) );
      instance.SetNew(&new_TGTab2);
      instance.SetNewArray(&newArray_TGTab2);
      instance.SetDelete(&delete_TGTab2);
      instance.SetDeleteArray(&deleteArray_TGTab2);
      instance.SetDestructor(&destruct_TGTab2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TGTab2*)
   {
      return GenerateInitInstanceLocal((::TGTab2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGTab2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TGTabLayout2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TGTabLayout2(void *p);
   static void deleteArray_TGTabLayout2(void *p);
   static void destruct_TGTabLayout2(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TGTabLayout2*)
   {
      ::TGTabLayout2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGTabLayout2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGTabLayout2", ::TGTabLayout2::Class_Version(), "OnlTools/Jevp/StJevpViewer/TGTab2.h", 47,
                  typeid(::TGTabLayout2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TGTabLayout2::Dictionary, isa_proxy, 4,
                  sizeof(::TGTabLayout2) );
      instance.SetDelete(&delete_TGTabLayout2);
      instance.SetDeleteArray(&deleteArray_TGTabLayout2);
      instance.SetDestructor(&destruct_TGTabLayout2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TGTabLayout2*)
   {
      return GenerateInitInstanceLocal((::TGTabLayout2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGTabLayout2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void JevpViewer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_JevpViewer(void *p);
   static void deleteArray_JevpViewer(void *p);
   static void destruct_JevpViewer(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::JevpViewer*)
   {
      ::JevpViewer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JevpViewer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JevpViewer", ::JevpViewer::Class_Version(), "OnlTools/Jevp/StJevpViewer/JevpViewer.h", 79,
                  typeid(::JevpViewer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::JevpViewer::Dictionary, isa_proxy, 4,
                  sizeof(::JevpViewer) );
      instance.SetDelete(&delete_JevpViewer);
      instance.SetDeleteArray(&deleteArray_JevpViewer);
      instance.SetDestructor(&destruct_JevpViewer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::JevpViewer*)
   {
      return GenerateInitInstanceLocal((::JevpViewer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JevpViewer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CanvasFrame_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_CanvasFrame(void *p);
   static void deleteArray_CanvasFrame(void *p);
   static void destruct_CanvasFrame(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CanvasFrame*)
   {
      ::CanvasFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CanvasFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CanvasFrame", ::CanvasFrame::Class_Version(), "OnlTools/Jevp/StJevpViewer/JevpViewer.h", 179,
                  typeid(::CanvasFrame), ::ROOT::DefineBehavior(ptr, ptr),
                  &::CanvasFrame::Dictionary, isa_proxy, 4,
                  sizeof(::CanvasFrame) );
      instance.SetDelete(&delete_CanvasFrame);
      instance.SetDeleteArray(&deleteArray_CanvasFrame);
      instance.SetDestructor(&destruct_CanvasFrame);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CanvasFrame*)
   {
      return GenerateInitInstanceLocal((::CanvasFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CanvasFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TabHelper_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TabHelper(void *p);
   static void deleteArray_TabHelper(void *p);
   static void destruct_TabHelper(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TabHelper*)
   {
      ::TabHelper *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TabHelper >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TabHelper", ::TabHelper::Class_Version(), "OnlTools/Jevp/StJevpViewer/JevpViewer.h", 48,
                  typeid(::TabHelper), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TabHelper::Dictionary, isa_proxy, 4,
                  sizeof(::TabHelper) );
      instance.SetDelete(&delete_TabHelper);
      instance.SetDeleteArray(&deleteArray_TabHelper);
      instance.SetDestructor(&destruct_TabHelper);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TabHelper*)
   {
      return GenerateInitInstanceLocal((::TabHelper*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TabHelper*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void JevpPlotInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_JevpPlotInfo(void *p);
   static void deleteArray_JevpPlotInfo(void *p);
   static void destruct_JevpPlotInfo(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::JevpPlotInfo*)
   {
      ::JevpPlotInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JevpPlotInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JevpPlotInfo", ::JevpPlotInfo::Class_Version(), "OnlTools/Jevp/StJevpViewer/JevpViewer.h", 121,
                  typeid(::JevpPlotInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::JevpPlotInfo::Dictionary, isa_proxy, 4,
                  sizeof(::JevpPlotInfo) );
      instance.SetDelete(&delete_JevpPlotInfo);
      instance.SetDeleteArray(&deleteArray_JevpPlotInfo);
      instance.SetDestructor(&destruct_JevpPlotInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::JevpPlotInfo*)
   {
      return GenerateInitInstanceLocal((::JevpPlotInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JevpPlotInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DummyFrame_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_DummyFrame(void *p);
   static void deleteArray_DummyFrame(void *p);
   static void destruct_DummyFrame(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DummyFrame*)
   {
      ::DummyFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DummyFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DummyFrame", ::DummyFrame::Class_Version(), "OnlTools/Jevp/StJevpViewer/JevpViewer.h", 197,
                  typeid(::DummyFrame), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DummyFrame::Dictionary, isa_proxy, 4,
                  sizeof(::DummyFrame) );
      instance.SetDelete(&delete_DummyFrame);
      instance.SetDeleteArray(&deleteArray_DummyFrame);
      instance.SetDestructor(&destruct_DummyFrame);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DummyFrame*)
   {
      return GenerateInitInstanceLocal((::DummyFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DummyFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ZoomFrame_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_ZoomFrame(void *p);
   static void deleteArray_ZoomFrame(void *p);
   static void destruct_ZoomFrame(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ZoomFrame*)
   {
      ::ZoomFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ZoomFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ZoomFrame", ::ZoomFrame::Class_Version(), "OnlTools/Jevp/StJevpViewer/ZoomFrame.h", 14,
                  typeid(::ZoomFrame), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ZoomFrame::Dictionary, isa_proxy, 4,
                  sizeof(::ZoomFrame) );
      instance.SetDelete(&delete_ZoomFrame);
      instance.SetDeleteArray(&deleteArray_ZoomFrame);
      instance.SetDestructor(&destruct_ZoomFrame);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ZoomFrame*)
   {
      return GenerateInitInstanceLocal((::ZoomFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ZoomFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyMainFrame_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_MyMainFrame(void *p);
   static void deleteArray_MyMainFrame(void *p);
   static void destruct_MyMainFrame(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyMainFrame*)
   {
      ::MyMainFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MyMainFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MyMainFrame", ::MyMainFrame::Class_Version(), "OnlTools/Jevp/StJevpViewer/example.h", 15,
                  typeid(::MyMainFrame), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MyMainFrame::Dictionary, isa_proxy, 4,
                  sizeof(::MyMainFrame) );
      instance.SetDelete(&delete_MyMainFrame);
      instance.SetDeleteArray(&deleteArray_MyMainFrame);
      instance.SetDestructor(&destruct_MyMainFrame);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyMainFrame*)
   {
      return GenerateInitInstanceLocal((::MyMainFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyMainFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DrawFrame_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_DrawFrame(void *p);
   static void deleteArray_DrawFrame(void *p);
   static void destruct_DrawFrame(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DrawFrame*)
   {
      ::DrawFrame *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DrawFrame >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DrawFrame", ::DrawFrame::Class_Version(), "OnlTools/Jevp/StJevpViewer/example.h", 45,
                  typeid(::DrawFrame), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DrawFrame::Dictionary, isa_proxy, 4,
                  sizeof(::DrawFrame) );
      instance.SetDelete(&delete_DrawFrame);
      instance.SetDeleteArray(&deleteArray_DrawFrame);
      instance.SetDestructor(&destruct_DrawFrame);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DrawFrame*)
   {
      return GenerateInitInstanceLocal((::DrawFrame*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DrawFrame*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr PlotHisto::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PlotHisto::Class_Name()
{
   return "PlotHisto";
}

//______________________________________________________________________________
const char *PlotHisto::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PlotHisto*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PlotHisto::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PlotHisto*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PlotHisto::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PlotHisto*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PlotHisto::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PlotHisto*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr JevpPlot::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *JevpPlot::Class_Name()
{
   return "JevpPlot";
}

//______________________________________________________________________________
const char *JevpPlot::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JevpPlot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int JevpPlot::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JevpPlot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void JevpPlot::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JevpPlot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *JevpPlot::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JevpPlot*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BuilderStatus::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BuilderStatus::Class_Name()
{
   return "BuilderStatus";
}

//______________________________________________________________________________
const char *BuilderStatus::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BuilderStatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BuilderStatus::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BuilderStatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BuilderStatus::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BuilderStatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BuilderStatus::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BuilderStatus*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr JLatex::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *JLatex::Class_Name()
{
   return "JLatex";
}

//______________________________________________________________________________
const char *JLatex::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JLatex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int JLatex::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JLatex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void JLatex::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JLatex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *JLatex::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JLatex*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr JLine::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *JLine::Class_Name()
{
   return "JLine";
}

//______________________________________________________________________________
const char *JLine::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JLine*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int JLine::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JLine*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void JLine::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JLine*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *JLine::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JLine*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EvpMessage::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EvpMessage::Class_Name()
{
   return "EvpMessage";
}

//______________________________________________________________________________
const char *EvpMessage::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EvpMessage*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EvpMessage::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EvpMessage*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EvpMessage::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EvpMessage*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EvpMessage::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EvpMessage*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RunStatus::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RunStatus::Class_Name()
{
   return "RunStatus";
}

//______________________________________________________________________________
const char *RunStatus::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RunStatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RunStatus::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RunStatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RunStatus::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RunStatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RunStatus::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RunStatus*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr JevpPlotSet::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *JevpPlotSet::Class_Name()
{
   return "JevpPlotSet";
}

//______________________________________________________________________________
const char *JevpPlotSet::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JevpPlotSet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int JevpPlotSet::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JevpPlotSet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void JevpPlotSet::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JevpPlotSet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *JevpPlotSet::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JevpPlotSet*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr JevpBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *JevpBuilder::Class_Name()
{
   return "JevpBuilder";
}

//______________________________________________________________________________
const char *JevpBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JevpBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int JevpBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JevpBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void JevpBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JevpBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *JevpBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JevpBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr baseBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *baseBuilder::Class_Name()
{
   return "baseBuilder";
}

//______________________________________________________________________________
const char *baseBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::baseBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int baseBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::baseBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void baseBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::baseBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *baseBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::baseBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr bbcBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *bbcBuilder::Class_Name()
{
   return "bbcBuilder";
}

//______________________________________________________________________________
const char *bbcBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bbcBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int bbcBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bbcBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void bbcBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bbcBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *bbcBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bbcBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr bemcBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *bemcBuilder::Class_Name()
{
   return "bemcBuilder";
}

//______________________________________________________________________________
const char *bemcBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bemcBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int bemcBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::bemcBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void bemcBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bemcBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *bemcBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::bemcBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr daqBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *daqBuilder::Class_Name()
{
   return "daqBuilder";
}

//______________________________________________________________________________
const char *daqBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::daqBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int daqBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::daqBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void daqBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::daqBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *daqBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::daqBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr eemcBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *eemcBuilder::Class_Name()
{
   return "eemcBuilder";
}

//______________________________________________________________________________
const char *eemcBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::eemcBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int eemcBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::eemcBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void eemcBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::eemcBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *eemcBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::eemcBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr epdBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *epdBuilder::Class_Name()
{
   return "epdBuilder";
}

//______________________________________________________________________________
const char *epdBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::epdBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int epdBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::epdBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void epdBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::epdBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *epdBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::epdBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr etofBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *etofBuilder::Class_Name()
{
   return "etofBuilder";
}

//______________________________________________________________________________
const char *etofBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::etofBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int etofBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::etofBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void etofBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::etofBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *etofBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::etofBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr fgtBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *fgtBuilder::Class_Name()
{
   return "fgtBuilder";
}

//______________________________________________________________________________
const char *fgtBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::fgtBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int fgtBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::fgtBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void fgtBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::fgtBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *fgtBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::fgtBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr fmsBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *fmsBuilder::Class_Name()
{
   return "fmsBuilder";
}

//______________________________________________________________________________
const char *fmsBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::fmsBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int fmsBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::fmsBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void fmsBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::fmsBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *fmsBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::fmsBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr fpdBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *fpdBuilder::Class_Name()
{
   return "fpdBuilder";
}

//______________________________________________________________________________
const char *fpdBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::fpdBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int fpdBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::fpdBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void fpdBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::fpdBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *fpdBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::fpdBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr fpsBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *fpsBuilder::Class_Name()
{
   return "fpsBuilder";
}

//______________________________________________________________________________
const char *fpsBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::fpsBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int fpsBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::fpsBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void fpsBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::fpsBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *fpsBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::fpsBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr fstBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *fstBuilder::Class_Name()
{
   return "fstBuilder";
}

//______________________________________________________________________________
const char *fstBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::fstBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int fstBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::fstBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void fstBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::fstBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *fstBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::fstBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr gmtBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *gmtBuilder::Class_Name()
{
   return "gmtBuilder";
}

//______________________________________________________________________________
const char *gmtBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::gmtBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int gmtBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::gmtBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void gmtBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::gmtBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *gmtBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::gmtBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr hltBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *hltBuilder::Class_Name()
{
   return "hltBuilder";
}

//______________________________________________________________________________
const char *hltBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::hltBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int hltBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::hltBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void hltBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::hltBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *hltBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::hltBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HltphiBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HltphiBuilder::Class_Name()
{
   return "HltphiBuilder";
}

//______________________________________________________________________________
const char *HltphiBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HltphiBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HltphiBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HltphiBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HltphiBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HltphiBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HltphiBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HltphiBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr istBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *istBuilder::Class_Name()
{
   return "istBuilder";
}

//______________________________________________________________________________
const char *istBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::istBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int istBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::istBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void istBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::istBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *istBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::istBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr itpcBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *itpcBuilder::Class_Name()
{
   return "itpcBuilder";
}

//______________________________________________________________________________
const char *itpcBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::itpcBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int itpcBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::itpcBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void itpcBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::itpcBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *itpcBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::itpcBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr l3Builder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *l3Builder::Class_Name()
{
   return "l3Builder";
}

//______________________________________________________________________________
const char *l3Builder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::l3Builder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int l3Builder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::l3Builder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void l3Builder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::l3Builder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *l3Builder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::l3Builder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr l4Builder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *l4Builder::Class_Name()
{
   return "l4Builder";
}

//______________________________________________________________________________
const char *l4Builder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::l4Builder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int l4Builder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::l4Builder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void l4Builder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::l4Builder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *l4Builder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::l4Builder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr mtdBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *mtdBuilder::Class_Name()
{
   return "mtdBuilder";
}

//______________________________________________________________________________
const char *mtdBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::mtdBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int mtdBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::mtdBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void mtdBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::mtdBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *mtdBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::mtdBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ppBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ppBuilder::Class_Name()
{
   return "ppBuilder";
}

//______________________________________________________________________________
const char *ppBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ppBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ppBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ppBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ppBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ppBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ppBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ppBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr pxlBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *pxlBuilder::Class_Name()
{
   return "pxlBuilder";
}

//______________________________________________________________________________
const char *pxlBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::pxlBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int pxlBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::pxlBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void pxlBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::pxlBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *pxlBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::pxlBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ssdBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ssdBuilder::Class_Name()
{
   return "ssdBuilder";
}

//______________________________________________________________________________
const char *ssdBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ssdBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ssdBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ssdBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ssdBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ssdBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ssdBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ssdBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr tofBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *tofBuilder::Class_Name()
{
   return "tofBuilder";
}

//______________________________________________________________________________
const char *tofBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::tofBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int tofBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::tofBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void tofBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::tofBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *tofBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::tofBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr tpcBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *tpcBuilder::Class_Name()
{
   return "tpcBuilder";
}

//______________________________________________________________________________
const char *tpcBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::tpcBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int tpcBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::tpcBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void tpcBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::tpcBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *tpcBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::tpcBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr tpxBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *tpxBuilder::Class_Name()
{
   return "tpxBuilder";
}

//______________________________________________________________________________
const char *tpxBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::tpxBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int tpxBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::tpxBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void tpxBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::tpxBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *tpxBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::tpxBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr trgBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *trgBuilder::Class_Name()
{
   return "trgBuilder";
}

//______________________________________________________________________________
const char *trgBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::trgBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int trgBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::trgBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void trgBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::trgBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *trgBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::trgBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr upcBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *upcBuilder::Class_Name()
{
   return "upcBuilder";
}

//______________________________________________________________________________
const char *upcBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::upcBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int upcBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::upcBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void upcBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::upcBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *upcBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::upcBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr vpdBuilder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *vpdBuilder::Class_Name()
{
   return "vpdBuilder";
}

//______________________________________________________________________________
const char *vpdBuilder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vpdBuilder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int vpdBuilder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vpdBuilder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void vpdBuilder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vpdBuilder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *vpdBuilder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vpdBuilder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr JevpServerMain::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *JevpServerMain::Class_Name()
{
   return "JevpServerMain";
}

//______________________________________________________________________________
const char *JevpServerMain::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JevpServerMain*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int JevpServerMain::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JevpServerMain*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void JevpServerMain::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JevpServerMain*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *JevpServerMain::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JevpServerMain*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TGTabElement2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TGTabElement2::Class_Name()
{
   return "TGTabElement2";
}

//______________________________________________________________________________
const char *TGTabElement2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TGTabElement2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGTabElement2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TGTabElement2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGTabElement2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TGTabElement2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGTabElement2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TGTabElement2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TGTab2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TGTab2::Class_Name()
{
   return "TGTab2";
}

//______________________________________________________________________________
const char *TGTab2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TGTab2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGTab2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TGTab2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGTab2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TGTab2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGTab2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TGTab2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TGTabLayout2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TGTabLayout2::Class_Name()
{
   return "TGTabLayout2";
}

//______________________________________________________________________________
const char *TGTabLayout2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TGTabLayout2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGTabLayout2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TGTabLayout2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGTabLayout2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TGTabLayout2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGTabLayout2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TGTabLayout2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr JevpViewer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *JevpViewer::Class_Name()
{
   return "JevpViewer";
}

//______________________________________________________________________________
const char *JevpViewer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JevpViewer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int JevpViewer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JevpViewer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void JevpViewer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JevpViewer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *JevpViewer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JevpViewer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr CanvasFrame::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CanvasFrame::Class_Name()
{
   return "CanvasFrame";
}

//______________________________________________________________________________
const char *CanvasFrame::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CanvasFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CanvasFrame::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::CanvasFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CanvasFrame::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CanvasFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CanvasFrame::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::CanvasFrame*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TabHelper::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TabHelper::Class_Name()
{
   return "TabHelper";
}

//______________________________________________________________________________
const char *TabHelper::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TabHelper*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TabHelper::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TabHelper*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TabHelper::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TabHelper*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TabHelper::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TabHelper*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr JevpPlotInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *JevpPlotInfo::Class_Name()
{
   return "JevpPlotInfo";
}

//______________________________________________________________________________
const char *JevpPlotInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JevpPlotInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int JevpPlotInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::JevpPlotInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void JevpPlotInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JevpPlotInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *JevpPlotInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::JevpPlotInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DummyFrame::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DummyFrame::Class_Name()
{
   return "DummyFrame";
}

//______________________________________________________________________________
const char *DummyFrame::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DummyFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DummyFrame::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DummyFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DummyFrame::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DummyFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DummyFrame::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DummyFrame*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ZoomFrame::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ZoomFrame::Class_Name()
{
   return "ZoomFrame";
}

//______________________________________________________________________________
const char *ZoomFrame::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ZoomFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ZoomFrame::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ZoomFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ZoomFrame::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ZoomFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ZoomFrame::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ZoomFrame*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MyMainFrame::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MyMainFrame::Class_Name()
{
   return "MyMainFrame";
}

//______________________________________________________________________________
const char *MyMainFrame::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyMainFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MyMainFrame::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MyMainFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MyMainFrame::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyMainFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MyMainFrame::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MyMainFrame*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DrawFrame::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DrawFrame::Class_Name()
{
   return "DrawFrame";
}

//______________________________________________________________________________
const char *DrawFrame::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DrawFrame*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DrawFrame::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DrawFrame*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DrawFrame::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DrawFrame*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DrawFrame::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DrawFrame*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void JevpBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class JevpBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JevpBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(JevpBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void JevpBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JevpBuilder.
      TClass *R__cl = ::JevpBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      JevpPlotSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_JevpBuilder(void *p) {
      return  p ? new(p) ::JevpBuilder : new ::JevpBuilder;
   }
   static void *newArray_JevpBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::JevpBuilder[nElements] : new ::JevpBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_JevpBuilder(void *p) {
      delete ((::JevpBuilder*)p);
   }
   static void deleteArray_JevpBuilder(void *p) {
      delete [] ((::JevpBuilder*)p);
   }
   static void destruct_JevpBuilder(void *p) {
      typedef ::JevpBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::JevpBuilder

//______________________________________________________________________________
void baseBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class baseBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(baseBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(baseBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void baseBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class baseBuilder.
      TClass *R__cl = ::baseBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first_event", &first_event);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_baseBuilder(void *p) {
      return  p ? new(p) ::baseBuilder : new ::baseBuilder;
   }
   static void *newArray_baseBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::baseBuilder[nElements] : new ::baseBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_baseBuilder(void *p) {
      delete ((::baseBuilder*)p);
   }
   static void deleteArray_baseBuilder(void *p) {
      delete [] ((::baseBuilder*)p);
   }
   static void destruct_baseBuilder(void *p) {
      typedef ::baseBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::baseBuilder

//______________________________________________________________________________
void bbcBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class bbcBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(bbcBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(bbcBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void bbcBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class bbcBuilder.
      TClass *R__cl = ::bbcBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plots", &plots);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_bbcBuilder(void *p) {
      return  p ? new(p) ::bbcBuilder : new ::bbcBuilder;
   }
   static void *newArray_bbcBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::bbcBuilder[nElements] : new ::bbcBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_bbcBuilder(void *p) {
      delete ((::bbcBuilder*)p);
   }
   static void deleteArray_bbcBuilder(void *p) {
      delete [] ((::bbcBuilder*)p);
   }
   static void destruct_bbcBuilder(void *p) {
      typedef ::bbcBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::bbcBuilder

//______________________________________________________________________________
void bemcBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class bemcBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(bemcBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(bemcBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void bemcBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class bemcBuilder.
      TClass *R__cl = ::bemcBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "statusfile[255]", statusfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numPmtBoxes", &numPmtBoxes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numBoxes", &numBoxes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMCDecoderPresenter", &BEMCDecoderPresenter);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_bemcBuilder(void *p) {
      return  p ? new(p) ::bemcBuilder : new ::bemcBuilder;
   }
   static void *newArray_bemcBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::bemcBuilder[nElements] : new ::bemcBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_bemcBuilder(void *p) {
      delete ((::bemcBuilder*)p);
   }
   static void deleteArray_bemcBuilder(void *p) {
      delete [] ((::bemcBuilder*)p);
   }
   static void destruct_bemcBuilder(void *p) {
      typedef ::bemcBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::bemcBuilder

//______________________________________________________________________________
void daqBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class daqBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(daqBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(daqBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void daqBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class daqBuilder.
      TClass *R__cl = ::daqBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_2min", &t_2min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_10min", &t_10min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_120min", &t_120min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_daqBuilder(void *p) {
      return  p ? new(p) ::daqBuilder : new ::daqBuilder;
   }
   static void *newArray_daqBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::daqBuilder[nElements] : new ::daqBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_daqBuilder(void *p) {
      delete ((::daqBuilder*)p);
   }
   static void deleteArray_daqBuilder(void *p) {
      delete [] ((::daqBuilder*)p);
   }
   static void destruct_daqBuilder(void *p) {
      typedef ::daqBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::daqBuilder

//______________________________________________________________________________
void eemcBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class eemcBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(eemcBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(eemcBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void eemcBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class eemcBuilder.
      TClass *R__cl = ::eemcBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "statusfile[255]", statusfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MAPMHits", &MAPMHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MAPMHitsCopy", &MAPMHitsCopy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plots[400]", &plots);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_eemcBuilder(void *p) {
      return  p ? new(p) ::eemcBuilder : new ::eemcBuilder;
   }
   static void *newArray_eemcBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::eemcBuilder[nElements] : new ::eemcBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_eemcBuilder(void *p) {
      delete ((::eemcBuilder*)p);
   }
   static void deleteArray_eemcBuilder(void *p) {
      delete [] ((::eemcBuilder*)p);
   }
   static void destruct_eemcBuilder(void *p) {
      typedef ::eemcBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::eemcBuilder

//______________________________________________________________________________
void epdBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class epdBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(epdBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(epdBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void epdBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class epdBuilder.
      TClass *R__cl = ::epdBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "disable_builder", &disable_builder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plots", &plots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEPDMap[2][12][32]", mEPDMap);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_epdBuilder(void *p) {
      return  p ? new(p) ::epdBuilder : new ::epdBuilder;
   }
   static void *newArray_epdBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::epdBuilder[nElements] : new ::epdBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_epdBuilder(void *p) {
      delete ((::epdBuilder*)p);
   }
   static void deleteArray_epdBuilder(void *p) {
      delete [] ((::epdBuilder*)p);
   }
   static void destruct_epdBuilder(void *p) {
      typedef ::epdBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::epdBuilder

//______________________________________________________________________________
void etofBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class etofBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(etofBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(etofBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void etofBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class etofBuilder.
      TClass *R__cl = ::etofBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "disable_builder", &disable_builder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "extras", (void*)&extras);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plots", &plots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*resetTimeLabel1", &resetTimeLabel1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*resetTimeLabel2", &resetTimeLabel2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*multCorrLabel1", &multCorrLabel1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*multCorrLabel2", &multCorrLabel2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*digiDensityLabel1", &digiDensityLabel1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*digiDensityLabel2", &digiDensityLabel2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "resetTimeLabel1Text", (void*)&resetTimeLabel1Text);
      R__insp.InspectMember("string", (void*)&resetTimeLabel1Text, "resetTimeLabel1Text.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "resetTimeLabel2Text", (void*)&resetTimeLabel2Text);
      R__insp.InspectMember("string", (void*)&resetTimeLabel2Text, "resetTimeLabel2Text.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nrOfGdpbInSys", &nrOfGdpbInSys);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nrOfGbtxPerGdpb", &nrOfGbtxPerGdpb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nrOfFeePerGbtx", &nrOfFeePerGbtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nrOfGet4PerFee", &nrOfGet4PerFee);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nrOfChannelsPerGet4", &nrOfChannelsPerGet4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nrOfChannelsPerFee", &nrOfChannelsPerFee);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nrOfChannelsPerGbtx", &nrOfChannelsPerGbtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nrOfGet4PerGbtx", &nrOfGet4PerGbtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nrOfChannelsPerGdpb", &nrOfChannelsPerGdpb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "year", &year);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEtofEvents", &nEtofEvents);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_etofBuilder(void *p) {
      return  p ? new(p) ::etofBuilder : new ::etofBuilder;
   }
   static void *newArray_etofBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::etofBuilder[nElements] : new ::etofBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_etofBuilder(void *p) {
      delete ((::etofBuilder*)p);
   }
   static void deleteArray_etofBuilder(void *p) {
      delete [] ((::etofBuilder*)p);
   }
   static void destruct_etofBuilder(void *p) {
      typedef ::etofBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::etofBuilder

//______________________________________________________________________________
void fgtBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class fgtBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(fgtBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(fgtBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void fgtBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class fgtBuilder.
      TClass *R__cl = ::fgtBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*projX", &projX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tRnd", &tRnd);
      R__insp.InspectMember(tRnd, "tRnd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtCt", &evtCt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_2min", &t_2min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_10min", &t_10min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_120min", &t_120min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tbVsAdcContents", (void*)&tbVsAdcContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hContents", (void*)&hContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hSumContents", (void*)&hSumContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "np", &np);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTbVsAdc", &nTbVsAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hNp", &hNp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hSNp", &hSNp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plots", &plots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dd", &dd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "meanVals[33600]", meanVals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "oldStdDevs[33600]", oldStdDevs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "aVals[33600]", aVals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numVals[33600]", numVals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numOverOneSig[33600]", numOverOneSig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isChannelBad[33600]", isChannelBad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runningAvg[33600]", runningAvg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runningStdDevSq[33600]", runningStdDevSq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chCntDaq[2][6][24]", chCntDaq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumHistogramsFilled", &sumHistogramsFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*errorMsg", &errorMsg);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_fgtBuilder(void *p) {
      return  p ? new(p) ::fgtBuilder : new ::fgtBuilder;
   }
   static void *newArray_fgtBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::fgtBuilder[nElements] : new ::fgtBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_fgtBuilder(void *p) {
      delete ((::fgtBuilder*)p);
   }
   static void deleteArray_fgtBuilder(void *p) {
      delete [] ((::fgtBuilder*)p);
   }
   static void destruct_fgtBuilder(void *p) {
      typedef ::fgtBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::fgtBuilder

//______________________________________________________________________________
void fmsBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class fmsBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(fmsBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(fmsBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void fmsBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class fmsBuilder.
      TClass *R__cl = ::fmsBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPlots", (void*)&mPlots);
      R__insp.InspectMember("fmsBuilder::JevpPlotPtrList", (void*)&mPlots, "mPlots.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHists", (void*)&mHists);
      R__insp.InspectMember("fmsBuilder::TH1PtrMap", (void*)&mHists, "mHists.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nstb_map[5][353]", nstb_map);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chan_map[5][353]", chan_map);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "row_map[5][353]", row_map);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "col_map[5][353]", col_map);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hitmap[2][2]", &hitmap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crate", &crate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "index", &index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc", &adc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detid", &detid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nstb", &nstb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cellchan", &cellchan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "row", &row);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "col", &col);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_fmsBuilder(void *p) {
      return  p ? new(p) ::fmsBuilder : new ::fmsBuilder;
   }
   static void *newArray_fmsBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::fmsBuilder[nElements] : new ::fmsBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_fmsBuilder(void *p) {
      delete ((::fmsBuilder*)p);
   }
   static void deleteArray_fmsBuilder(void *p) {
      delete [] ((::fmsBuilder*)p);
   }
   static void destruct_fmsBuilder(void *p) {
      typedef ::fmsBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::fmsBuilder

//______________________________________________________________________________
void fpdBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class fpdBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(fpdBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(fpdBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void fpdBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class fpdBuilder.
      TClass *R__cl = ::fpdBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plots", &plots);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_fpdBuilder(void *p) {
      return  p ? new(p) ::fpdBuilder : new ::fpdBuilder;
   }
   static void *newArray_fpdBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::fpdBuilder[nElements] : new ::fpdBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_fpdBuilder(void *p) {
      delete ((::fpdBuilder*)p);
   }
   static void deleteArray_fpdBuilder(void *p) {
      delete [] ((::fpdBuilder*)p);
   }
   static void destruct_fpdBuilder(void *p) {
      typedef ::fpdBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::fpdBuilder

//______________________________________________________________________________
void fpsBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class fpsBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(fpsBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(fpsBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void fpsBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class fpsBuilder.
      TClass *R__cl = ::fpsBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dd", &dd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_2min", &t_2min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pre_trig", &pre_trig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evt", &evt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xypos[23]", xypos);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_fpsBuilder(void *p) {
      return  p ? new(p) ::fpsBuilder : new ::fpsBuilder;
   }
   static void *newArray_fpsBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::fpsBuilder[nElements] : new ::fpsBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_fpsBuilder(void *p) {
      delete ((::fpsBuilder*)p);
   }
   static void deleteArray_fpsBuilder(void *p) {
      delete [] ((::fpsBuilder*)p);
   }
   static void destruct_fpsBuilder(void *p) {
      typedef ::fpsBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::fpsBuilder

//______________________________________________________________________________
void fstBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class fstBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(fstBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(fstBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void fstBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class fstBuilder.
      TClass *R__cl = ::fstBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*projX", &projX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tRnd", &tRnd);
      R__insp.InspectMember(tRnd, "tRnd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtCt", &evtCt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtCt_nonZS", &evtCt_nonZS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtCt_ZS", &evtCt_ZS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_2min", &t_2min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_10min", &t_10min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_120min", &t_120min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fstGeomMapping[36864]", fstGeomMapping);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fstElecMapping[36864]", fstElecMapping);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tableFound", &tableFound);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fstPedestal[3][36864]", fstPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fstRmsNoise[3][36864]", fstRmsNoise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fstRanNoise[3][36864]", fstRanNoise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hAdcContents", (void*)&hAdcContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hMultContents", (void*)&hMultContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hHitMapContents", (void*)&hHitMapContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hTbVsAdcContents", (void*)&hTbVsAdcContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hEventSumContents", (void*)&hEventSumContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hMipContents", (void*)&hMipContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hMaxTimeBinContents", (void*)&hMaxTimeBinContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hSumContents", (void*)&hSumContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hCmnTemp", (void*)&hCmnTemp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAdcHist", &mAdcHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMultHist", &mMultHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHitMapHist", &mHitMapHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTbVsAdcHist", &mTbVsAdcHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEventSumHist", &mEventSumHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMipHist", &mMipHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMaxTimeBinHist", &mMaxTimeBinHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSumHist", &mSumHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plots", &plots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dd", &dd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numVals[36864]", numVals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "aVals[36864]", aVals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numOverOneSig[36864]", numOverOneSig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxAdc[36864]", maxAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxTimeBin[36864]", maxTimeBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxAdc_zs[36864]", maxAdc_zs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxTimeBin_zs[36864]", maxTimeBin_zs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runningAvg[36864]", runningAvg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runningStdDevSq[36864]", runningStdDevSq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumAdc[36864]", sumAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sum2Adc[36864]", sum2Adc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "couAdc[36864]", couAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "oldStdDevs[36864]", oldStdDevs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ranStdDevs[36864]", ranStdDevs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cmNoise[288][4]", cmNoise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isChannelBad[36864]", isChannelBad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isNoisyApv[288]", isNoisyApv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chCntDaq[6][3][16]", chCntDaq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "apvCntDaq[72]", apvCntDaq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nExpectedChip_Sec[72]", nExpectedChip_Sec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumHistogramsFilled", &sumHistogramsFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numTb", &numTb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*errorMsg", &errorMsg);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_fstBuilder(void *p) {
      return  p ? new(p) ::fstBuilder : new ::fstBuilder;
   }
   static void *newArray_fstBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::fstBuilder[nElements] : new ::fstBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_fstBuilder(void *p) {
      delete ((::fstBuilder*)p);
   }
   static void deleteArray_fstBuilder(void *p) {
      delete [] ((::fstBuilder*)p);
   }
   static void destruct_fstBuilder(void *p) {
      typedef ::fstBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::fstBuilder

//______________________________________________________________________________
void gmtBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class gmtBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(gmtBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(gmtBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void gmtBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class gmtBuilder.
      TClass *R__cl = ::gmtBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtCount", &evtCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hPedContents", (void*)&hPedContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hSignalContents", (void*)&hSignalContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hTimebinContents", (void*)&hTimebinContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hSumContents", (void*)&hSumContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hSigtbContents", (void*)&hSigtbContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nped", &nped);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nsig", &nsig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntb", &ntb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nsum", &nsum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel", &channel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timebin", &timebin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ch_seq", &ch_seq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc", &adc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plots", &plots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dd", &dd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SignalPedCorrected[2][2][16][128][15]", SignalPedCorrected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SumSignalPedCorrected[15][8]", SumSignalPedCorrected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumSignal_AllChambers[15]", sumSignal_AllChambers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumSignal_AllTimebins[8]", sumSignal_AllTimebins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*errorMsg", &errorMsg);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_gmtBuilder(void *p) {
      return  p ? new(p) ::gmtBuilder : new ::gmtBuilder;
   }
   static void *newArray_gmtBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::gmtBuilder[nElements] : new ::gmtBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_gmtBuilder(void *p) {
      delete ((::gmtBuilder*)p);
   }
   static void deleteArray_gmtBuilder(void *p) {
      delete [] ((::gmtBuilder*)p);
   }
   static void destruct_gmtBuilder(void *p) {
      typedef ::gmtBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::gmtBuilder

//______________________________________________________________________________
void hltBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class hltBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(hltBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(hltBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void hltBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class hltBuilder.
      TClass *R__cl = ::hltBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "last_time", &last_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHours", &nHours);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HltPlots[156]", &HltPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cVz1", &cVz1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cVz2", &cVz2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cVz3", &cVz3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cVz4", &cVz4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cVx1", &cVx1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cVx2", &cVx2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cVx3", &cVx3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cVy1", &cVy1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cVy2", &cVy2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cVy3", &cVy3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cVr1", &cVr1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cVr2", &cVr2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cVr3", &cVr3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cVr4", &cVr4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_Vxy1", &tot_Vxy1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_Vxy2", &tot_Vxy2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_Vxy3", &tot_Vxy3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_Vxy4", &tot_Vxy4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cM1", &cM1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cM2", &cM2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cM3", &cM3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cM4", &cM4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vz1", &Vz1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vz2", &Vz2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vz3", &Vz3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vz4", &Vz4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vx1", &Vx1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vx2", &Vx2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vx3", &Vx3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vx4", &Vx4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vy1", &Vy1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vy2", &Vy2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vy3", &Vy3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vy4", &Vy4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vr1", &Vr1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vr2", &Vr2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vr3", &Vr3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vr4", &Vr4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vxy1", &Vxy1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vxy2", &Vxy2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vxy3", &Vxy3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vxy4", &Vxy4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Mult1", &Mult1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Mult2", &Mult2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Mult3", &Mult3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Mult4", &Mult4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Eta1", &Eta1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Eta2", &Eta2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Eta3", &Eta3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Eta4", &Eta4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Timevsmultiplicity", &Timevsmultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Ratevsmultiplicity", &Ratevsmultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*v2_pt", &v2_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*v2ptCounter", &v2ptCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*resolution", &resolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*corrected_v2_pt", &corrected_v2_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*corrected_v2ptCounter", &corrected_v2ptCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dedx", &dedx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*piplus", &piplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*piminus", &piminus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*kplus", &kplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*kminus", &kminus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pplus", &pplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pminus", &pminus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Yield", &Yield);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*corrected_Yield", &corrected_Yield);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hbtnum", &hbtnum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hbtden", &hbtden);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hbtCF_qinv", &hbtCF_qinv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMC_1a", &BEMC_1a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMC_2a", &BEMC_2a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMC_3a", &BEMC_3a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMC_4a", &BEMC_4a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMC_1b", &BEMC_1b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMC_2b", &BEMC_2b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMC_3b", &BEMC_3b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMC_4b", &BEMC_4b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMC_1c", &BEMC_1c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMC_2c", &BEMC_2c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMC_3c", &BEMC_3c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMC_4c", &BEMC_4c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMC_1d", &BEMC_1d);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMC_2d", &BEMC_2d);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMC_3d", &BEMC_3d);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BEMC_4d", &BEMC_4d);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cVz1", &tot_cVz1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cVz2", &tot_cVz2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cVz3", &tot_cVz3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cVz4", &tot_cVz4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cVx1", &tot_cVx1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cVx2", &tot_cVx2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cVx3", &tot_cVx3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cVy1", &tot_cVy1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cVy2", &tot_cVy2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cVy3", &tot_cVy3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cVr1", &tot_cVr1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cVr2", &tot_cVr2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cVr3", &tot_cVr3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cVr4", &tot_cVr4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cM1", &tot_cM1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cM2", &tot_cM2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cM3", &tot_cM3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_cM4", &tot_cM4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_Timevsmultiplicity", &tot_Timevsmultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_Ratevsmultiplicity", &tot_Ratevsmultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_v2_pt", &tot_v2_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_v2ptCounter", &tot_v2ptCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_resolution", &tot_resolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_corrected_v2_pt", &tot_corrected_v2_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_corrected_v2ptCounter", &tot_corrected_v2ptCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_dedx", &tot_dedx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_piplus", &tot_piplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_piminus", &tot_piminus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_kplus", &tot_kplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_kminus", &tot_kminus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_pplus", &tot_pplus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_pminus", &tot_pminus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_Yield", &tot_Yield);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_corrected_Yield", &tot_corrected_Yield);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_hbtnum", &tot_hbtnum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_hbtden", &tot_hbtden);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tot_hbtCF_qinv", &tot_hbtCF_qinv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVz1", &periodic_cVz1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVz2", &periodic_cVz2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVz3", &periodic_cVz3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVz4", &periodic_cVz4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVx1", &periodic_cVx1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVx2", &periodic_cVx2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVx3", &periodic_cVx3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVy1", &periodic_cVy1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVy2", &periodic_cVy2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVy3", &periodic_cVy3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVr1", &periodic_cVr1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVr2", &periodic_cVr2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVr3", &periodic_cVr3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVr4", &periodic_cVr4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVxy1", &periodic_cVxy1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVxy2", &periodic_cVxy2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVxy3", &periodic_cVxy3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cVxy4", &periodic_cVxy4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cM1", &periodic_cM1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cM2", &periodic_cM2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cM3", &periodic_cM3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*periodic_cM4", &periodic_cM4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setD_singlerun_cVz1", &setD_singlerun_cVz1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setD_singlerun_cVz2", &setD_singlerun_cVz2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setD_singlerun_cVz3", &setD_singlerun_cVz3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setD_singlerun_cVz4", &setD_singlerun_cVz4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setD_periodic_cVz1", &setD_periodic_cVz1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setD_periodic_cVz2", &setD_periodic_cVz2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setD_periodic_cVz3", &setD_periodic_cVz3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setD_periodic_cVz4", &setD_periodic_cVz4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setD_accumulated_cVz1", &setD_accumulated_cVz1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setD_accumulated_cVz2", &setD_accumulated_cVz2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setD_accumulated_cVz3", &setD_accumulated_cVz3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setD_accumulated_cVz4", &setD_accumulated_cVz4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FILL_VPD_HISTOS", &FILL_VPD_HISTOS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setE_singlerun_cVz1", &setE_singlerun_cVz1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setE_singlerun_cVz2", &setE_singlerun_cVz2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setE_singlerun_cVz3", &setE_singlerun_cVz3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setE_singlerun_cVz4", &setE_singlerun_cVz4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setE_periodic_cVz1", &setE_periodic_cVz1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setE_periodic_cVz2", &setE_periodic_cVz2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setE_periodic_cVz3", &setE_periodic_cVz3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setE_periodic_cVz4", &setE_periodic_cVz4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setE_accumulated_cVz1", &setE_accumulated_cVz1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setE_accumulated_cVz2", &setE_accumulated_cVz2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setE_accumulated_cVz3", &setE_accumulated_cVz3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setE_accumulated_cVz4", &setE_accumulated_cVz4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NO_CUTS_VERTEX", &NO_CUTS_VERTEX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VzLT200_VxLT2_VyLT2_VERTEX", &VzLT200_VxLT2_VyLT2_VERTEX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VxLT2_VyLT2_VERTEX", &VxLT2_VyLT2_VERTEX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VzLT70_VxLT2_VyLT2_VERTEX", &VzLT70_VxLT2_VyLT2_VERTEX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VzLT70_VxGT2_VyGT2_VERTEX", &VzLT70_VxGT2_VyGT2_VERTEX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VrLT2_VERTEX", &VrLT2_VERTEX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VzLT70_VERTEX", &VzLT70_VERTEX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PRIM_TRACK_GT5_MULT", &PRIM_TRACK_GT5_MULT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NO_CUTS_BEMC", &NO_CUTS_BEMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eGT20_wGT20_BEMC", &eGT20_wGT20_BEMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eGT20_wGT20_diffLT6_BEMC", &eGT20_wGT20_diffLT6_BEMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eGT1_wGT1_BEMC", &eGT1_wGT1_BEMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eGT20_wGT20_diffLT6_bbcGT100_BEMC", &eGT20_wGT20_diffLT6_bbcGT100_BEMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPion", &mPion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mKaon", &mKaon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mProton", &mProton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nhbtmixing", &Nhbtmixing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NmultMixingBins", &NmultMixingBins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NvertexMixingBins", &NvertexMixingBins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vmb", &vmb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mmb", &mmb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UPDATE_SWITCH", &UPDATE_SWITCH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "multRange", &multRange);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vertRange", &vertRange);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hbt_buffer[1][3][3]", hbt_buffer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hbt_current", (void*)&hbt_current);
      R__insp.InspectMember("hltBuilder::hbt_event_info", (void*)&hbt_current, "hbt_current.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventCuts", (void*)&eventCuts);
      R__insp.InspectMember("hltBuilder::eventCut_info", (void*)&eventCuts, "eventCuts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "multTrackCuts", (void*)&multTrackCuts);
      R__insp.InspectMember("hltBuilder::trackCut_info", (void*)&multTrackCuts, "multTrackCuts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "v2ptTrackCuts", (void*)&v2ptTrackCuts);
      R__insp.InspectMember("hltBuilder::trackCut_info", (void*)&v2ptTrackCuts, "v2ptTrackCuts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptSpectraTrackCuts", (void*)&ptSpectraTrackCuts);
      R__insp.InspectMember("hltBuilder::trackCut_info", (void*)&ptSpectraTrackCuts, "ptSpectraTrackCuts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hbtTrackCuts", (void*)&hbtTrackCuts);
      R__insp.InspectMember("hltBuilder::trackCut_info", (void*)&hbtTrackCuts, "hbtTrackCuts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventCounter", &eventCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HBTCALC", &HBTCALC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "V2CALC", &V2CALC);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_hltBuilder(void *p) {
      return  p ? new(p) ::hltBuilder : new ::hltBuilder;
   }
   static void *newArray_hltBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::hltBuilder[nElements] : new ::hltBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_hltBuilder(void *p) {
      delete ((::hltBuilder*)p);
   }
   static void deleteArray_hltBuilder(void *p) {
      delete [] ((::hltBuilder*)p);
   }
   static void destruct_hltBuilder(void *p) {
      typedef ::hltBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::hltBuilder

//______________________________________________________________________________
void HltphiBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class HltphiBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HltphiBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(HltphiBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void HltphiBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HltphiBuilder.
      TClass *R__cl = ::HltphiBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "current_day", &current_day);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "twopi", &twopi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pi", &pi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "res2", &res2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "res2error", &res2error);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Currentrun[256]", Currentrun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "label[60]", label);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "str[60]", str);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*flowphi", &flowphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TempFlowPhi", &TempFlowPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TempFlowPhiWgt", &TempFlowPhiWgt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*InvMassv2", &InvMassv2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*InvMassv2_Sin", &InvMassv2_Sin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DenInvMass", &DenInvMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*run[46]", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*day[10]", &day);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*all[31]", &all);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nbin", &nbin);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HltphiBuilder(void *p) {
      return  p ? new(p) ::HltphiBuilder : new ::HltphiBuilder;
   }
   static void *newArray_HltphiBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::HltphiBuilder[nElements] : new ::HltphiBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_HltphiBuilder(void *p) {
      delete ((::HltphiBuilder*)p);
   }
   static void deleteArray_HltphiBuilder(void *p) {
      delete [] ((::HltphiBuilder*)p);
   }
   static void destruct_HltphiBuilder(void *p) {
      typedef ::HltphiBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::HltphiBuilder

//______________________________________________________________________________
void istBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class istBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(istBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(istBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void istBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class istBuilder.
      TClass *R__cl = ::istBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*projX", &projX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tRnd", &tRnd);
      R__insp.InspectMember(tRnd, "tRnd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtCt", &evtCt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_2min", &t_2min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_10min", &t_10min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_120min", &t_120min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "istMapping[110592]", istMapping);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "istElecMapping[110592]", istElecMapping);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tableFound", &tableFound);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "istPedestal[110592]", istPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "istRmsNoise[110592]", istRmsNoise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hAdcContents", (void*)&hAdcContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hMultContents", (void*)&hMultContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hHitMapContents", (void*)&hHitMapContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hTbVsAdcContents", (void*)&hTbVsAdcContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hEventSumContents", (void*)&hEventSumContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hMipContents", (void*)&hMipContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hMaxTimeBinContents", (void*)&hMaxTimeBinContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hSumContents", (void*)&hSumContents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hCmnTemp", (void*)&hCmnTemp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAdcHist", &mAdcHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMultHist", &mMultHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHitMapHist", &mHitMapHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTbVsAdcHist", &mTbVsAdcHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEventSumHist", &mEventSumHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMipHist", &mMipHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMaxTimeBinHist", &mMaxTimeBinHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSumHist", &mSumHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plots", &plots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dd", &dd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numVals[110592]", numVals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "aVals[110592]", aVals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numOverOneSig[110592]", numOverOneSig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxAdc[110592]", maxAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxTimeBin[110592]", maxTimeBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxAdc_zs[110592]", maxAdc_zs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxTimeBin_zs[110592]", maxTimeBin_zs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runningAvg[110592]", runningAvg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runningStdDevSq[110592]", runningStdDevSq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "oldStdDevs[110592]", oldStdDevs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "meanVals[110592]", meanVals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cmNoise[864]", cmNoise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isChannelBad[110592]", isChannelBad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isNoisyApv[864]", isNoisyApv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chCntDaq[6][6][24]", chCntDaq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "apvCntDaq[72]", apvCntDaq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nExpectedChip_Sec[72]", nExpectedChip_Sec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumHistogramsFilled", &sumHistogramsFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numTb", &numTb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*errorMsg", &errorMsg);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_istBuilder(void *p) {
      return  p ? new(p) ::istBuilder : new ::istBuilder;
   }
   static void *newArray_istBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::istBuilder[nElements] : new ::istBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_istBuilder(void *p) {
      delete ((::istBuilder*)p);
   }
   static void deleteArray_istBuilder(void *p) {
      delete [] ((::istBuilder*)p);
   }
   static void destruct_istBuilder(void *p) {
      typedef ::istBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::istBuilder

//______________________________________________________________________________
void itpcBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class itpcBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(itpcBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(itpcBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void itpcBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class itpcBuilder.
      TClass *R__cl = ::itpcBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nlasers", &nlasers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "drift_vel", &drift_vel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n_cld", &n_cld);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n_adc", &n_adc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_no", &event_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "extras", (void*)&extras);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPhiAngleMap[24][45][182]", mPhiAngleMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*laserReader", &laserReader);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_itpcBuilder(void *p) {
      return  p ? new(p) ::itpcBuilder : new ::itpcBuilder;
   }
   static void *newArray_itpcBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::itpcBuilder[nElements] : new ::itpcBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_itpcBuilder(void *p) {
      delete ((::itpcBuilder*)p);
   }
   static void deleteArray_itpcBuilder(void *p) {
      delete [] ((::itpcBuilder*)p);
   }
   static void destruct_itpcBuilder(void *p) {
      typedef ::itpcBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::itpcBuilder

//______________________________________________________________________________
void l3Builder::Streamer(TBuffer &R__b)
{
   // Stream an object of class l3Builder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(l3Builder::Class(),this);
   } else {
      R__b.WriteClassBuffer(l3Builder::Class(),this);
   }
}

//______________________________________________________________________________
void l3Builder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class l3Builder.
      TClass *R__cl = ::l3Builder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_l3Builder(void *p) {
      return  p ? new(p) ::l3Builder : new ::l3Builder;
   }
   static void *newArray_l3Builder(Long_t nElements, void *p) {
      return p ? new(p) ::l3Builder[nElements] : new ::l3Builder[nElements];
   }
   // Wrapper around operator delete
   static void delete_l3Builder(void *p) {
      delete ((::l3Builder*)p);
   }
   static void deleteArray_l3Builder(void *p) {
      delete [] ((::l3Builder*)p);
   }
   static void destruct_l3Builder(void *p) {
      typedef ::l3Builder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::l3Builder

//______________________________________________________________________________
void l4Builder::Streamer(TBuffer &R__b)
{
   // Stream an object of class l4Builder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(l4Builder::Class(),this);
   } else {
      R__b.WriteClassBuffer(l4Builder::Class(),this);
   }
}

//______________________________________________________________________________
void l4Builder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class l4Builder.
      TClass *R__cl = ::l4Builder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HltPlots[61]", &HltPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BeamPlots[3]", &BeamPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BesGoodPlots[10]", &BesGoodPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HLTGood2Plots[6]", &HLTGood2Plots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BesMonitorPlots[4]", &BesMonitorPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FixedTargetPlots[12]", &FixedTargetPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FixedTargetMonitorPlots[6]", &FixedTargetMonitorPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HeavyFragmentPlots[1]", &HeavyFragmentPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DiElectronPlots[10]", &DiElectronPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DiElectron2TwrPlots[10]", &DiElectron2TwrPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DiPionPlots[2]", &DiPionPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DiMuonPlots[14]", &DiMuonPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UPCDiElectronPlots[10]", &UPCDiElectronPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HltPlots_UPC[30]", &HltPlots_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ph", &ph);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventCounter", &eventCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Currentrun[256]", Currentrun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CurrentNtuple[256]", CurrentNtuple);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Currentdir[256]", Currentdir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Destindir_dat[256]", Destindir_dat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Destindir[256]", Destindir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxTheoDir[256]", dEdxTheoDir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEdxMeanFiles[8][256]", dEdxMeanFiles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timer", &timer);
      R__insp.InspectMember(timer, "timer.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*entry", &entry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheoDedx_e_pos", &fTheoDedx_e_pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheoDedx_e_neg", &fTheoDedx_e_neg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheoDedx_Pi_pos", &fTheoDedx_Pi_pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheoDedx_Pi_neg", &fTheoDedx_Pi_neg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheoDedx_K_pos", &fTheoDedx_K_pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheoDedx_K_neg", &fTheoDedx_K_neg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheoDedx_P_pos", &fTheoDedx_P_pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheoDedx_P_neg", &fTheoDedx_P_neg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheoDedx_D_pos", &fTheoDedx_D_pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheoDedx_D_neg", &fTheoDedx_D_neg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheoDedx_T_pos", &fTheoDedx_T_pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheoDedx_T_neg", &fTheoDedx_T_neg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheoDedx_He3_pos", &fTheoDedx_He3_pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheoDedx_He3_neg", &fTheoDedx_He3_neg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheoDedx_He4_pos", &fTheoDedx_He4_pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTheoDedx_He4_neg", &fTheoDedx_He4_neg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "index", &index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "primaryTracks", &primaryTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "primaryTracks_UPC", &primaryTracks_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runnumber", &runnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iBin", &iBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TriggerFilled", &TriggerFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventFilled", &EventFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GlobalTracksFilled", &GlobalTracksFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrimaryTracksFilled", &PrimaryTracksFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EMCFilled", &EMCFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TOFFilled", &TOFFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BESGoodFilled", &BESGoodFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HLTGood2Filled", &HLTGood2Filled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BESMonitorFilled", &BESMonitorFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FixedTargetFilled", &FixedTargetFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FixedTargetMonitorFilled", &FixedTargetMonitorFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UPCFilled", &UPCFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DiMuonFilled", &DiMuonFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UPCDiElectronFilled", &UPCDiElectronFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DiElectronFilled", &DiElectronFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HeavyFragmentFilled", &HeavyFragmentFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MTDQuarkoniumFilled", &MTDQuarkoniumFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DiElectron2TwrFilled", &DiElectron2TwrFilled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "switch_BesGood", &switch_BesGood);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "switch_HLTGood2", &switch_HLTGood2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "switch_BesMonitor", &switch_BesMonitor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "switch_FixedTarget", &switch_FixedTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "switch_FixedTargetMonitor", &switch_FixedTargetMonitor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "switch_HeavyFragment", &switch_HeavyFragment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "switch_jpsi", &switch_jpsi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "switch_upc", &switch_upc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "innerGainPara", &innerGainPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outerGainPara", &outerGainPara);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamX", &BeamX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BeamY", &BeamY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pi", &pi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "twopi", &twopi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "A", &A);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hEvtsAccpt", &hEvtsAccpt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hnhits", &hnhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hnDedx", &hnDedx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDcaXy", &hDcaXy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDcaZ", &hDcaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDcaXy_TofMatch", &hDcaXy_TofMatch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDcaZ_TofMatch", &hDcaZ_TofMatch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDcaXy_EMCMatch", &hDcaXy_EMCMatch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDcaZ_EMCMatch", &hDcaZ_EMCMatch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLn_dEdx", &hLn_dEdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hGlob_Pt", &hGlob_Pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hGlob_Phi", &hGlob_Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hGlob_Eta", &hGlob_Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hGlob_dEdx", &hGlob_dEdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPrim_Pt", &hPrim_Pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPrim_Phi", &hPrim_Phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPrim_Eta", &hPrim_Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPrim_dEdx", &hPrim_dEdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hnhits_UPC", &hnhits_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hnDedx_UPC", &hnDedx_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDcaXy_UPC", &hDcaXy_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDcaZ_UPC", &hDcaZ_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLn_dEdx_UPC", &hLn_dEdx_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hGlob_Pt_UPC", &hGlob_Pt_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hGlob_Phi_UPC", &hGlob_Phi_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hGlob_Eta_UPC", &hGlob_Eta_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hGlob_dEdx_UPC", &hGlob_dEdx_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPrim_Pt_UPC", &hPrim_Pt_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPrim_Phi_UPC", &hPrim_Phi_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPrim_Eta_UPC", &hPrim_Eta_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPrim_dEdx_UPC", &hPrim_dEdx_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVertexX", &hVertexX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVertexY", &hVertexY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVertexZ", &hVertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVertexXY", &hVertexXY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVertexR", &hVertexR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLm_VertexX", &hLm_VertexX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLm_VertexY", &hLm_VertexY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLm_VertexZ", &hLm_VertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hglobalMult", &hglobalMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hprimaryMult", &hprimaryMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hltSummaryLine1", &hltSummaryLine1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hltSummaryLine2", &hltSummaryLine2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVertexX_UPC", &hVertexX_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVertexY_UPC", &hVertexY_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVertexZ_UPC", &hVertexZ_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLm_VertexX_UPC", &hLm_VertexX_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLm_VertexY_UPC", &hLm_VertexY_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLm_VertexZ_UPC", &hLm_VertexZ_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hglobalMult_UPC", &hglobalMult_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hprimaryMult_UPC", &hprimaryMult_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMatchPhi_Diff", &hMatchPhi_Diff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTowerEnergy", &hTowerEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTowerDaqId", &hTowerDaqId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTowerSoftId", &hTowerSoftId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hzEdge", &hzEdge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTowerEtaPhi", &hTowerEtaPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMatchPhi_Diff_UPC", &hMatchPhi_Diff_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTowerEnergy_UPC", &hTowerEnergy_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTowerDaqId_UPC", &hTowerDaqId_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTowerSoftId_UPC", &hTowerSoftId_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hzEdge_UPC", &hzEdge_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTowerEtaPhi_UPC", &hTowerEtaPhi_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiElectronInvMassTpxEmc", &hDiElectronInvMassTpxEmc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiElectronInvMassTpxEmcBG", &hDiElectronInvMassTpxEmcBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiElectronInvMassFullRange", &hDiElectronInvMassFullRange);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiElectronInvMassFullRangeBG", &hDiElectronInvMassFullRangeBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiElectronInvMassCut", &hDiElectronInvMassCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiElectronInvMassCutBG", &hDiElectronInvMassCutBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdEdx_P1", &hdEdx_P1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDaughter1P_TowerEnergy", &hDaughter1P_TowerEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDaughter1TpxEmcInverseBeta", &hDaughter1TpxEmcInverseBeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdEdx_P2", &hdEdx_P2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDaughter2P_TowerEnergy", &hDaughter2P_TowerEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDaughter2TpxEmcInverseBeta", &hDaughter2TpxEmcInverseBeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiLeptonRapidity", &hDiLeptonRapidity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiElectronInvMassTpxEmc_Twr", &hDiElectronInvMassTpxEmc_Twr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiElectronInvMassTpxEmcBG_Twr", &hDiElectronInvMassTpxEmcBG_Twr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiElectronInvMassFullRange_Twr", &hDiElectronInvMassFullRange_Twr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiElectronInvMassFullRangeBG_Twr", &hDiElectronInvMassFullRangeBG_Twr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiElectronInvMassCut_Twr", &hDiElectronInvMassCut_Twr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiElectronInvMassCutBG_Twr", &hDiElectronInvMassCutBG_Twr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdEdx_P1_Twr", &hdEdx_P1_Twr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDaughter1P_TowerEnergy_Twr", &hDaughter1P_TowerEnergy_Twr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDaughter1TpxEmcInverseBeta_Twr", &hDaughter1TpxEmcInverseBeta_Twr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdEdx_P2_Twr", &hdEdx_P2_Twr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDaughter2P_TowerEnergy_Twr", &hDaughter2P_TowerEnergy_Twr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDaughter2TpxEmcInverseBeta_Twr", &hDaughter2TpxEmcInverseBeta_Twr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiLeptonRapidity_Twr", &hDiLeptonRapidity_Twr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiElectronInvMassFullRange_UPC", &hDiElectronInvMassFullRange_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiElectronInvMassFullRangeBG_UPC", &hDiElectronInvMassFullRangeBG_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdEdx_P1_UPC", &hdEdx_P1_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDaughter1P_TowerEnergy_UPC", &hDaughter1P_TowerEnergy_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdEdx_P2_UPC", &hdEdx_P2_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDaughter2P_TowerEnergy_UPC", &hDaughter2P_TowerEnergy_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiLeptonRapidity_UPC", &hDiLeptonRapidity_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMTDDiMuonJpsiMassUS", &hMTDDiMuonJpsiMassUS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMTDDiMuonJpsiMassLS", &hMTDDiMuonJpsiMassLS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMTDDiMuonUpsilonMassUS", &hMTDDiMuonUpsilonMassUS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMTDDiMuonUpsilonMassLS", &hMTDDiMuonUpsilonMassLS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hInvMassUS", &hInvMassUS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hInvMassLS", &hInvMassLS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMtdHitMap", &hMtdHitMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMtdMatchHitMap", &hMtdMatchHitMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMtdDeltaZvsModule", &hMtdDeltaZvsModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMtdDeltaZ", &hMtdDeltaZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMtdDeltaYvsModule", &hMtdDeltaYvsModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMtdDeltaY", &hMtdDeltaY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMTDQmInvMassUS", &hMTDQmInvMassUS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMTDQmInvMassLS", &hMTDQmInvMassLS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMTDQmJpsiMass_ptcut0_US", &hMTDQmJpsiMass_ptcut0_US);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMTDQmJpsiMass_ptcut0_LS", &hMTDQmJpsiMass_ptcut0_LS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMTDQmJpsiMass_ptcut2_US", &hMTDQmJpsiMass_ptcut2_US);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMTDQmJpsiMass_ptcut2_LS", &hMTDQmJpsiMass_ptcut2_LS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMTDQmJpsiMass_ptcut4_US", &hMTDQmJpsiMass_ptcut4_US);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMTDQmJpsiMass_ptcut4_LS", &hMTDQmJpsiMass_ptcut4_LS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "US8", &US8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LS8", &LS8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tlx8_us", &tlx8_us);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tlx8_ls", &tlx8_ls);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "US9", &US9);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LS9", &LS9);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tlx9_us", &tlx9_us);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tlx9_ls", &tlx9_ls);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "US10", &US10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LS10", &LS10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tlx10_us", &tlx10_us);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tlx10_ls", &tlx10_ls);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "US11", &US11);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LS11", &LS11);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tlx11_us", &tlx11_us);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tlx11_ls", &tlx11_ls);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "US12", &US12);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LS12", &LS12);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tlx12_us", &tlx12_us);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tlx12_ls", &tlx12_ls);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tlxmass12", &tlxmass12);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "US13", &US13);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LS13", &LS13);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tlx13_us", &tlx13_us);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tlx13_ls", &tlx13_ls);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tlxmass13", &tlxmass13);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMTDQmUpsilonMassUS", &hMTDQmUpsilonMassUS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMTDQmUpsilonMassLS", &hMTDQmUpsilonMassLS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiPionInvMassFullRange", &hDiPionInvMassFullRange);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiPionInvMassFullRangeBG", &hDiPionInvMassFullRangeBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDiPionDeltphi", &hDiPionDeltphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLocalZ", &hLocalZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLocalY", &hLocalY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hInverseBeta", &hInverseBeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMatchId_fiberId", &hMatchId_fiberId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMatchId_fiberId_copy", &hMatchId_fiberId_copy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMatchId_fiberId_copy2", &hMatchId_fiberId_copy2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTrayID_TrgTime", &hTrayID_TrgTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hchannelID", &hchannelID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVzvpd_lmVz", &hVzvpd_lmVz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLmVzDiff", &hLmVzDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVzvpd", &hVzvpd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVzDiff", &hVzDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVertexRZ", &hVertexRZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVertexXZ", &hVertexXZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVertexYZ", &hVertexYZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBunchId", &hBunchId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBbceTAC", &hBbceTAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBbcwTAC", &hBbcwTAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVpdeTAC", &hVpdeTAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVpdwTAC", &hVpdwTAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hEpdeTAC", &hEpdeTAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hEpdwTAC", &hEpdwTAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hEtofHitsXY", &hEtofHitsXY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hEtofInvBeta", &hEtofInvBeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hEtofLocalYMrpc", &hEtofLocalYMrpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pEtofNhitsPerEvent", &pEtofNhitsPerEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hEtofDeltaT", &hEtofDeltaT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T0", &T0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVzvpd_Vz_UPC", &hVzvpd_Vz_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVzDiff_UPC", &hVzDiff_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdEdx", &hdEdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdEdx_HeavyFragment", &hdEdx_HeavyFragment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hHFM_dEdx", &hHFM_dEdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdEdx_UPC", &hdEdx_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hHFM_dEdx_UPC", &hHFM_dEdx_UPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hUpc", &hUpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMtd", &hMtd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNpeHt_25_NoZdc", &hNpeHt_25_NoZdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVpdMb", &hVpdMb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCentral", &hCentral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNpeHt_25", &hNpeHt_25);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNpe", &hNpe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hAtomcule", &hAtomcule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBeamX", &hBeamX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBeamY", &hBeamY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hInnerGain", &hInnerGain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hOuterGain", &hOuterGain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMeanDcaXy", &hMeanDcaXy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBesGoodVertexXY", &hBesGoodVertexXY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBesGoodVrVsVz", &hBesGoodVrVsVz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBesGoodVr", &hBesGoodVr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBesGoodVertexZ", &hBesGoodVertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBesGoodprimaryMult", &hBesGoodprimaryMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBesGoodBunchId", &hBesGoodBunchId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBesGoodVxT", &hBesGoodVxT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBesGoodVxT_2", &hBesGoodVxT_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBesGoodVyT", &hBesGoodVyT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBesGoodVyT_2", &hBesGoodVyT_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hHLTGood2VertexXY", &hHLTGood2VertexXY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hHLTGood2Vr", &hHLTGood2Vr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hHLTGood2VertexZ", &hHLTGood2VertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hHLTGood2primaryMult", &hHLTGood2primaryMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hHLTGood2VzT", &hHLTGood2VzT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hHLTGood2VzT_2", &hHLTGood2VzT_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBesMonitorVertexXY", &hBesMonitorVertexXY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBesMonitorVr", &hBesMonitorVr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBesMonitorVz", &hBesMonitorVz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBesMonitorVertexRZ", &hBesMonitorVertexRZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTargetVertexXY", &hFixedTargetVertexXY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTargetVertexYZ", &hFixedTargetVertexYZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTargetVr", &hFixedTargetVr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTarget_VertexZ", &hFixedTarget_VertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTarget_Prim_Eta", &hFixedTarget_Prim_Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTarget_Glob_Eta", &hFixedTarget_Glob_Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTargetBbceTAC", &hFixedTargetBbceTAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTargetBbcwTAC", &hFixedTargetBbcwTAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTargetVpdeTAC", &hFixedTargetVpdeTAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTargetVpdwTAC", &hFixedTargetVpdwTAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTargetEpdeTAC", &hFixedTargetEpdeTAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTargetEpdwTAC", &hFixedTargetEpdwTAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTargetMonitorVertexXY", &hFixedTargetMonitorVertexXY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTargetMonitorVertexYZ", &hFixedTargetMonitorVertexYZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTargetMonitorVr", &hFixedTargetMonitorVr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTargetMonitor_VertexZ", &hFixedTargetMonitor_VertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTargetMonitor_Prim_Eta", &hFixedTargetMonitor_Prim_Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFixedTargetMonitor_Glob_Eta", &hFixedTargetMonitor_Glob_Eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first_evt_time", &first_evt_time);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_l4Builder(void *p) {
      return  p ? new(p) ::l4Builder : new ::l4Builder;
   }
   static void *newArray_l4Builder(Long_t nElements, void *p) {
      return p ? new(p) ::l4Builder[nElements] : new ::l4Builder[nElements];
   }
   // Wrapper around operator delete
   static void delete_l4Builder(void *p) {
      delete ((::l4Builder*)p);
   }
   static void deleteArray_l4Builder(void *p) {
      delete [] ((::l4Builder*)p);
   }
   static void destruct_l4Builder(void *p) {
      typedef ::l4Builder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::l4Builder

//______________________________________________________________________________
void mtdBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class mtdBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(mtdBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(mtdBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void mtdBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class mtdBuilder.
      TClass *R__cl = ::mtdBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mReferenceTray", &mReferenceTray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mValidShiftTray[2][2]", mValidShiftTray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaskoutTray[30]", MaskoutTray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isADC[128]", isADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isTAC[128]", isTAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QTslot[128]", QTslot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QTslothex[128]", QTslothex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QTboard[128]", QTboard);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QTchanname[128]", QTchanname);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QTchanno[128]", QTchanno);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QTchanstring[128]", QTchanstring);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QTcable[128]", QTcable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QTtpcsector[128]", QTtpcsector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberforsort", &numberforsort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leadinghits", (void*)&leadinghits);
      R__insp.InspectMember("vector<double>", (void*)&leadinghits, "leadinghits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trailinghits", (void*)&trailinghits);
      R__insp.InspectMember("vector<double>", (void*)&trailinghits, "trailinghits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MTD_Error1_label", &MTD_Error1_label);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MTD_Error2_label", &MTD_Error2_label);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MTD_Error3_label", &MTD_Error3_label);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MTD_BL_label[30]", &MTD_BL_label);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plots", &plots);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_mtdBuilder(void *p) {
      return  p ? new(p) ::mtdBuilder : new ::mtdBuilder;
   }
   static void *newArray_mtdBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::mtdBuilder[nElements] : new ::mtdBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_mtdBuilder(void *p) {
      delete ((::mtdBuilder*)p);
   }
   static void deleteArray_mtdBuilder(void *p) {
      delete [] ((::mtdBuilder*)p);
   }
   static void destruct_mtdBuilder(void *p) {
      typedef ::mtdBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::mtdBuilder

//______________________________________________________________________________
void ppBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class ppBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ppBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(ppBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void ppBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ppBuilder.
      TClass *R__cl = ::ppBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEntriesSVX[6][32]", mEntriesSVX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEntriesNCH[6][32]", mEntriesNCH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contVIP", (void*)&contVIP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contPMT_ADC", (void*)&contPMT_ADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contPMT_TAC", (void*)&contPMT_TAC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contentsSVX", (void*)&contentsSVX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hitperbunch", &hitperbunch);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ppBuilder(void *p) {
      return  p ? new(p) ::ppBuilder : new ::ppBuilder;
   }
   static void *newArray_ppBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::ppBuilder[nElements] : new ::ppBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_ppBuilder(void *p) {
      delete ((::ppBuilder*)p);
   }
   static void deleteArray_ppBuilder(void *p) {
      delete [] ((::ppBuilder*)p);
   }
   static void destruct_ppBuilder(void *p) {
      typedef ::ppBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ppBuilder

//______________________________________________________________________________
void pxlBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class pxlBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(pxlBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(pxlBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void pxlBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class pxlBuilder.
      TClass *R__cl = ::pxlBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*bs", &bs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_multiplicity", &event_multiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "multiplicity_inner", &multiplicity_inner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "multiplicity_outer", &multiplicity_outer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sensor_count", &sensor_count);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_count", &event_count);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number_of_events", &number_of_events);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "max_count", &max_count);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "max_count_sector[10]", max_count_sector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "max_count_inner", &max_count_inner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "max_count_outer", &max_count_outer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "min_count", &min_count);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "min_count_sector[10]", min_count_sector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "min_count_inner", &min_count_inner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "min_count_outer", &min_count_outer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "count_hits_inner[10][10]", count_hits_inner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "count_hits_outer[30][10]", count_hits_outer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "count_length_inner[10][10]", count_length_inner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "count_length_outer[30][10]", count_length_outer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LadderCount", &LadderCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sensor_hits[10][40]", sensor_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sensor_hit_frequency[10][40]", sensor_hit_frequency);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "avg_run_length[10][40]", avg_run_length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_pxlBuilder(void *p) {
      return  p ? new(p) ::pxlBuilder : new ::pxlBuilder;
   }
   static void *newArray_pxlBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::pxlBuilder[nElements] : new ::pxlBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_pxlBuilder(void *p) {
      delete ((::pxlBuilder*)p);
   }
   static void deleteArray_pxlBuilder(void *p) {
      delete [] ((::pxlBuilder*)p);
   }
   static void destruct_pxlBuilder(void *p) {
      typedef ::pxlBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::pxlBuilder

//______________________________________________________________________________
void ssdBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class ssdBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ssdBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(ssdBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void ssdBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ssdBuilder.
      TClass *R__cl = ::ssdBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtCt", &evtCt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hRawAdcStrip[2][20]", &hRawAdcStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hZSAdcStrip[2][20]", &hZSAdcStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPedStrip[2][20]", &hPedStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hRmsStrip[2][20]", &hRmsStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hRawLadderWafer[2]", &hRawLadderWafer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hZSLadderWafer[2]", &hZSLadderWafer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFailedLadderChip[2]", &hFailedLadderChip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hErrorRdo", &hErrorRdo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hErrorFiber[5]", &hErrorFiber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hModeCounter", &hModeCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDataMode", &mDataMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSector", &mSector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRDO", &mRDO);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSide", &mSide);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mFiber", &mFiber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLadder", &mLadder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mWafer", &mWafer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mChip", &mChip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStrip", &mStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAdc", &mAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAdcLength", &mAdcLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPed", &mPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRms", &mRms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mTree", &mTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mOutPutTree", &mOutPutTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plots", &plots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dd", &dd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*errorMsg", &errorMsg);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ssdBuilder(void *p) {
      return  p ? new(p) ::ssdBuilder : new ::ssdBuilder;
   }
   static void *newArray_ssdBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::ssdBuilder[nElements] : new ::ssdBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_ssdBuilder(void *p) {
      delete ((::ssdBuilder*)p);
   }
   static void deleteArray_ssdBuilder(void *p) {
      delete [] ((::ssdBuilder*)p);
   }
   static void destruct_ssdBuilder(void *p) {
      typedef ::ssdBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ssdBuilder

//______________________________________________________________________________
void tofBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class tofBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(tofBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(tofBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void tofBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class tofBuilder.
      TClass *R__cl = ::tofBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tinohit[120][24]", tinohit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "allbunchid[2][124]", allbunchid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hist_maxtofmult_tof", &hist_maxtofmult_tof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hist_maxtofmult_trg", &hist_maxtofmult_trg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "extra", (void*)&extra);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NotActiveTray[128]", NotActiveTray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_L0_trg_labels[120]", &TOF_L0_trg_labels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_Error1_label", &TOF_Error1_label);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_Error2_label", &TOF_Error2_label);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_Error3_label", &TOF_Error3_label);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_Error1_list", &TOF_Error1_list);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_Error2_list", &TOF_Error2_list);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_Error3_list", &TOF_Error3_list);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nperror1", &nperror1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nperror2", &nperror2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nperror3", &nperror3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mReferenceTray", &mReferenceTray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mValidShiftTray[2][4]", mValidShiftTray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mValidShift121[2][2]", mValidShift121);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mValidShift122[2][2]", mValidShift122);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "np", &np);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plots[400]", &plots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaskoutTray[128]", MaskoutTray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberforsort", &numberforsort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leadinghits", (void*)&leadinghits);
      R__insp.InspectMember("vector<double>", (void*)&leadinghits, "leadinghits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trailinghits", (void*)&trailinghits);
      R__insp.InspectMember("vector<double>", (void*)&trailinghits, "trailinghits.", false);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_tofBuilder(void *p) {
      return  p ? new(p) ::tofBuilder : new ::tofBuilder;
   }
   static void *newArray_tofBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::tofBuilder[nElements] : new ::tofBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_tofBuilder(void *p) {
      delete ((::tofBuilder*)p);
   }
   static void deleteArray_tofBuilder(void *p) {
      delete [] ((::tofBuilder*)p);
   }
   static void destruct_tofBuilder(void *p) {
      typedef ::tofBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::tofBuilder

//______________________________________________________________________________
void tpcBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class tpcBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(tpcBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(tpcBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void tpcBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class tpcBuilder.
      TClass *R__cl = ::tpcBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nlasers", &nlasers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "drift_vel", &drift_vel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpcDataInThisRun", &tpcDataInThisRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n_cld", &n_cld);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n_adc", &n_adc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_no", &event_no);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "extras", (void*)&extras);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPhiAngleMap[24][72][144]", mPhiAngleMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*laserReader", &laserReader);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_tpcBuilder(void *p) {
      return  p ? new(p) ::tpcBuilder : new ::tpcBuilder;
   }
   static void *newArray_tpcBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::tpcBuilder[nElements] : new ::tpcBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_tpcBuilder(void *p) {
      delete ((::tpcBuilder*)p);
   }
   static void deleteArray_tpcBuilder(void *p) {
      delete [] ((::tpcBuilder*)p);
   }
   static void destruct_tpcBuilder(void *p) {
      typedef ::tpcBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::tpcBuilder

//______________________________________________________________________________
void tpxBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class tpxBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(tpxBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(tpxBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void tpxBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class tpxBuilder.
      TClass *R__cl = ::tpxBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nlasers", &nlasers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "drift_vel", &drift_vel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n_cld", &n_cld);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n_adc", &n_adc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "extras", (void*)&extras);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPhiAngleMap[24][45][182]", mPhiAngleMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*laserReader", &laserReader);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_tpxBuilder(void *p) {
      return  p ? new(p) ::tpxBuilder : new ::tpxBuilder;
   }
   static void *newArray_tpxBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::tpxBuilder[nElements] : new ::tpxBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_tpxBuilder(void *p) {
      delete ((::tpxBuilder*)p);
   }
   static void deleteArray_tpxBuilder(void *p) {
      delete [] ((::tpxBuilder*)p);
   }
   static void destruct_tpxBuilder(void *p) {
      typedef ::tpxBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::tpxBuilder

//______________________________________________________________________________
void trgBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class trgBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(trgBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(trgBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void trgBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class trgBuilder.
      TClass *R__cl = ::trgBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first_event", &first_event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNumberOfHotTowers", &mNumberOfHotTowers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHotTowerChanges", &mHotTowerChanges);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_trgBuilder(void *p) {
      return  p ? new(p) ::trgBuilder : new ::trgBuilder;
   }
   static void *newArray_trgBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::trgBuilder[nElements] : new ::trgBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_trgBuilder(void *p) {
      delete ((::trgBuilder*)p);
   }
   static void deleteArray_trgBuilder(void *p) {
      delete [] ((::trgBuilder*)p);
   }
   static void destruct_trgBuilder(void *p) {
      typedef ::trgBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::trgBuilder

//______________________________________________________________________________
void upcBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class upcBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(upcBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(upcBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void upcBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class upcBuilder.
      TClass *R__cl = ::upcBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_upcBuilder(void *p) {
      return  p ? new(p) ::upcBuilder : new ::upcBuilder;
   }
   static void *newArray_upcBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::upcBuilder[nElements] : new ::upcBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_upcBuilder(void *p) {
      delete ((::upcBuilder*)p);
   }
   static void deleteArray_upcBuilder(void *p) {
      delete [] ((::upcBuilder*)p);
   }
   static void destruct_upcBuilder(void *p) {
      typedef ::upcBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::upcBuilder

//______________________________________________________________________________
void vpdBuilder::Streamer(TBuffer &R__b)
{
   // Stream an object of class vpdBuilder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(vpdBuilder::Class(),this);
   } else {
      R__b.WriteClassBuffer(vpdBuilder::Class(),this);
   }
}

//______________________________________________________________________________
void vpdBuilder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class vpdBuilder.
      TClass *R__cl = ::vpdBuilder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "expected_pulser_means_east", (void*)&expected_pulser_means_east);
      R__insp.InspectMember("vector<int>", (void*)&expected_pulser_means_east, "expected_pulser_means_east.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "expected_pulser_means_west", (void*)&expected_pulser_means_west);
      R__insp.InspectMember("vector<int>", (void*)&expected_pulser_means_west, "expected_pulser_means_west.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eastGoodCh", (void*)&eastGoodCh);
      R__insp.InspectMember("vector<bool>", (void*)&eastGoodCh, "eastGoodCh.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "westGoodCh", (void*)&westGoodCh);
      R__insp.InspectMember("vector<bool>", (void*)&westGoodCh, "westGoodCh.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refChannelEast", &refChannelEast);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refChannelWest", &refChannelWest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pulserSwitch", &pulserSwitch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "noiseCorr", &noiseCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contents", (void*)&contents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eBinEdges[19][10]", eBinEdges);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCorrs[19][10]", eCorrs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wBinEdges[19][10]", wBinEdges);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wCorrs[19][10]", wCorrs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numBins", &numBins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maskedChannelsEast", (void*)&maskedChannelsEast);
      R__insp.InspectMember("vector<int>", (void*)&maskedChannelsEast, "maskedChannelsEast.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maskedChannelsWest", (void*)&maskedChannelsWest);
      R__insp.InspectMember("vector<int>", (void*)&maskedChannelsWest, "maskedChannelsWest.", false);
      JevpBuilder::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vpdBuilder(void *p) {
      return  p ? new(p) ::vpdBuilder : new ::vpdBuilder;
   }
   static void *newArray_vpdBuilder(Long_t nElements, void *p) {
      return p ? new(p) ::vpdBuilder[nElements] : new ::vpdBuilder[nElements];
   }
   // Wrapper around operator delete
   static void delete_vpdBuilder(void *p) {
      delete ((::vpdBuilder*)p);
   }
   static void deleteArray_vpdBuilder(void *p) {
      delete [] ((::vpdBuilder*)p);
   }
   static void destruct_vpdBuilder(void *p) {
      typedef ::vpdBuilder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::vpdBuilder

//______________________________________________________________________________
void BuilderStatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class BuilderStatus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BuilderStatus::Class(),this);
   } else {
      R__b.WriteClassBuffer(BuilderStatus::Class(),this);
   }
}

//______________________________________________________________________________
void BuilderStatus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BuilderStatus.
      TClass *R__cl = ::BuilderStatus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*name", &name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*status", &status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lastEventTime", &lastEventTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "events", &events);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_BuilderStatus(void *p) {
      return  p ? new(p) ::BuilderStatus : new ::BuilderStatus;
   }
   static void *newArray_BuilderStatus(Long_t nElements, void *p) {
      return p ? new(p) ::BuilderStatus[nElements] : new ::BuilderStatus[nElements];
   }
   // Wrapper around operator delete
   static void delete_BuilderStatus(void *p) {
      delete ((::BuilderStatus*)p);
   }
   static void deleteArray_BuilderStatus(void *p) {
      delete [] ((::BuilderStatus*)p);
   }
   static void destruct_BuilderStatus(void *p) {
      typedef ::BuilderStatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BuilderStatus

//______________________________________________________________________________
void EvpMessage::Streamer(TBuffer &R__b)
{
   // Stream an object of class EvpMessage.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EvpMessage::Class(),this);
   } else {
      R__b.WriteClassBuffer(EvpMessage::Class(),this);
   }
}

//______________________________________________________________________________
void EvpMessage::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EvpMessage.
      TClass *R__cl = ::EvpMessage::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*source", &source);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cmd", &cmd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*args", &args);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EvpMessage(void *p) {
      return  p ? new(p) ::EvpMessage : new ::EvpMessage;
   }
   static void *newArray_EvpMessage(Long_t nElements, void *p) {
      return p ? new(p) ::EvpMessage[nElements] : new ::EvpMessage[nElements];
   }
   // Wrapper around operator delete
   static void delete_EvpMessage(void *p) {
      delete ((::EvpMessage*)p);
   }
   static void deleteArray_EvpMessage(void *p) {
      delete [] ((::EvpMessage*)p);
   }
   static void destruct_EvpMessage(void *p) {
      typedef ::EvpMessage current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::EvpMessage

//______________________________________________________________________________
void JLatex::Streamer(TBuffer &R__b)
{
   // Stream an object of class JLatex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JLatex::Class(),this);
   } else {
      R__b.WriteClassBuffer(JLatex::Class(),this);
   }
}

//______________________________________________________________________________
void JLatex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JLatex.
      TClass *R__cl = ::JLatex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndcY", &ndcY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndcX", &ndcX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jx", &jx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jy", &jy);
      TLatex::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_JLatex(void *p) {
      return  p ? new(p) ::JLatex : new ::JLatex;
   }
   static void *newArray_JLatex(Long_t nElements, void *p) {
      return p ? new(p) ::JLatex[nElements] : new ::JLatex[nElements];
   }
   // Wrapper around operator delete
   static void delete_JLatex(void *p) {
      delete ((::JLatex*)p);
   }
   static void deleteArray_JLatex(void *p) {
      delete [] ((::JLatex*)p);
   }
   static void destruct_JLatex(void *p) {
      typedef ::JLatex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::JLatex

//______________________________________________________________________________
void JLine::Streamer(TBuffer &R__b)
{
   // Stream an object of class JLine.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JLine::Class(),this);
   } else {
      R__b.WriteClassBuffer(JLine::Class(),this);
   }
}

//______________________________________________________________________________
void JLine::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JLine.
      TClass *R__cl = ::JLine::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndcY", &ndcY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndcX", &ndcX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jx[2]", jx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jy[2]", jy);
      TLine::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_JLine(void *p) {
      return  p ? new(p) ::JLine : new ::JLine;
   }
   static void *newArray_JLine(Long_t nElements, void *p) {
      return p ? new(p) ::JLine[nElements] : new ::JLine[nElements];
   }
   // Wrapper around operator delete
   static void delete_JLine(void *p) {
      delete ((::JLine*)p);
   }
   static void deleteArray_JLine(void *p) {
      delete [] ((::JLine*)p);
   }
   static void destruct_JLine(void *p) {
      typedef ::JLine current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::JLine

//______________________________________________________________________________
void PlotHisto::Streamer(TBuffer &R__b)
{
   // Stream an object of class PlotHisto.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PlotHisto::Class(),this);
   } else {
      R__b.WriteClassBuffer(PlotHisto::Class(),this);
   }
}

//______________________________________________________________________________
void PlotHisto::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PlotHisto.
      TClass *R__cl = ::PlotHisto::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histo", &histo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*legendText", &legendText);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*legendArgs", &legendArgs);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PlotHisto(void *p) {
      return  p ? new(p) ::PlotHisto : new ::PlotHisto;
   }
   static void *newArray_PlotHisto(Long_t nElements, void *p) {
      return p ? new(p) ::PlotHisto[nElements] : new ::PlotHisto[nElements];
   }
   // Wrapper around operator delete
   static void delete_PlotHisto(void *p) {
      delete ((::PlotHisto*)p);
   }
   static void deleteArray_PlotHisto(void *p) {
      delete [] ((::PlotHisto*)p);
   }
   static void destruct_PlotHisto(void *p) {
      typedef ::PlotHisto current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::PlotHisto

//______________________________________________________________________________
void JevpPlot::Streamer(TBuffer &R__b)
{
   // Stream an object of class JevpPlot.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JevpPlot::Class(),this);
   } else {
      R__b.WriteClassBuffer(JevpPlot::Class(),this);
   }
}

//______________________________________________________________________________
void JevpPlot::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JevpPlot.
      TClass *R__cl = ::JevpPlot::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*legend", &legend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "needsdata", &needsdata);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refid", &refid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*refcomment", &refcomment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "optstat", &optstat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "logx", &logx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "logy", &logy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "optlogz", &optlogz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "palette", &palette);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gridx", &gridx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gridy", &gridy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lastUpdate", &lastUpdate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nevts", &nevts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "external_maxy", &external_maxy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "external_miny", &external_miny);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "legendx1", &legendx1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "legendy1", &legendy1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "legendx2", &legendx2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "legendy2", &legendy2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "histos", &histos);
      R__insp.InspectMember(histos, "histos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*xaxis_label", &xaxis_label);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*yaxis_label", &yaxis_label);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*parent", &parent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nhistos", &nhistos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*drawopts", &drawopts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "myname[100]", myname);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "elements", &elements);
      R__insp.InspectMember(elements, "elements.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_JevpPlot(void *p) {
      return  p ? new(p) ::JevpPlot : new ::JevpPlot;
   }
   static void *newArray_JevpPlot(Long_t nElements, void *p) {
      return p ? new(p) ::JevpPlot[nElements] : new ::JevpPlot[nElements];
   }
   // Wrapper around operator delete
   static void delete_JevpPlot(void *p) {
      delete ((::JevpPlot*)p);
   }
   static void deleteArray_JevpPlot(void *p) {
      delete [] ((::JevpPlot*)p);
   }
   static void destruct_JevpPlot(void *p) {
      typedef ::JevpPlot current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::JevpPlot

//______________________________________________________________________________
void JevpPlotSet::Streamer(TBuffer &R__b)
{
   // Stream an object of class JevpPlotSet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JevpPlotSet::Class(),this);
   } else {
      R__b.WriteClassBuffer(JevpPlotSet::Class(),this);
   }
}

//______________________________________________________________________________
void JevpPlotSet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JevpPlotSet.
      TClass *R__cl = ::JevpPlotSet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "builderStatus", &builderStatus);
      R__insp.InspectMember(builderStatus, "builderStatus.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dbgSourceLine", &dbgSourceLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dbgCallSourceLine", &dbgCallSourceLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dbgCallParam", &dbgCallParam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startTime", &startTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timelog_fd", &timelog_fd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*clientdatadir", &clientdatadir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*confdatadir", &confdatadir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plotsetname", &plotsetname);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*xml", &xml);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hello_cmds", &hello_cmds);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minEvts", &minEvts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxEvts", &maxEvts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*processingTimer", &processingTimer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "processingTime", &processingTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberOfEventsRun", &numberOfEventsRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "plots", &plots);
      R__insp.InspectMember(plots, "plots.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*parent", &parent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "disabled", &disabled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "servertags[512]", servertags);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "current_run", &current_run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "base_client", &base_client);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*diska", &diska);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*daqfile", &daqfile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pdf", &pdf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*loglevel", &loglevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*buildxml", &buildxml);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "update_time", &update_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pause", &pause);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plotEvtsByTrigger", &plotEvtsByTrigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plotTimeByTrigger", &plotTimeByTrigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plotTime", &plotTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n_pertrg[64]", n_pertrg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "avg_time_pertrg[64]", avg_time_pertrg);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_JevpPlotSet(void *p) {
      return  p ? new(p) ::JevpPlotSet : new ::JevpPlotSet;
   }
   static void *newArray_JevpPlotSet(Long_t nElements, void *p) {
      return p ? new(p) ::JevpPlotSet[nElements] : new ::JevpPlotSet[nElements];
   }
   // Wrapper around operator delete
   static void delete_JevpPlotSet(void *p) {
      delete ((::JevpPlotSet*)p);
   }
   static void deleteArray_JevpPlotSet(void *p) {
      delete [] ((::JevpPlotSet*)p);
   }
   static void destruct_JevpPlotSet(void *p) {
      typedef ::JevpPlotSet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::JevpPlotSet

//______________________________________________________________________________
void RunStatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class RunStatus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RunStatus::Class(),this);
   } else {
      R__b.WriteClassBuffer(RunStatus::Class(),this);
   }
}

//______________________________________________________________________________
void RunStatus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RunStatus.
      TClass *R__cl = ::RunStatus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*status", &status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstEvtTime", &firstEvtTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstEvtNumber", &firstEvtNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lastEvtTime", &lastEvtTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lastEvtNumber", &lastEvtNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEvts", &nEvts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeOfLastChange", &timeOfLastChange);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RunStatus(void *p) {
      return  p ? new(p) ::RunStatus : new ::RunStatus;
   }
   static void *newArray_RunStatus(Long_t nElements, void *p) {
      return p ? new(p) ::RunStatus[nElements] : new ::RunStatus[nElements];
   }
   // Wrapper around operator delete
   static void delete_RunStatus(void *p) {
      delete ((::RunStatus*)p);
   }
   static void deleteArray_RunStatus(void *p) {
      delete [] ((::RunStatus*)p);
   }
   static void destruct_RunStatus(void *p) {
      typedef ::RunStatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RunStatus

//______________________________________________________________________________
void JevpServerMain::Streamer(TBuffer &R__b)
{
   // Stream an object of class JevpServerMain.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JevpServerMain::Class(),this);
   } else {
      R__b.WriteClassBuffer(JevpServerMain::Class(),this);
   }
}

//______________________________________________________________________________
void JevpServerMain::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JevpServerMain.
      TClass *R__cl = ::JevpServerMain::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_JevpServerMain(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::JevpServerMain : new ::JevpServerMain;
   }
   static void *newArray_JevpServerMain(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::JevpServerMain[nElements] : new ::JevpServerMain[nElements];
   }
   // Wrapper around operator delete
   static void delete_JevpServerMain(void *p) {
      delete ((::JevpServerMain*)p);
   }
   static void deleteArray_JevpServerMain(void *p) {
      delete [] ((::JevpServerMain*)p);
   }
   static void destruct_JevpServerMain(void *p) {
      typedef ::JevpServerMain current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::JevpServerMain

//______________________________________________________________________________
void TabHelper::Streamer(TBuffer &R__b)
{
   // Stream an object of class TabHelper.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TabHelper::Class(),this);
   } else {
      R__b.WriteClassBuffer(TabHelper::Class(),this);
   }
}

//______________________________________________________________________________
void TabHelper::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TabHelper.
      TClass *R__cl = ::TabHelper::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQObject", &fQObject);
      R__insp.InspectMember(fQObject, "fQObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*parent", &parent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mainTabs", &mainTabs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shiftTabs", &shiftTabs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*l4Tabs", &l4Tabs);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TabHelper(void *p) {
      delete ((::TabHelper*)p);
   }
   static void deleteArray_TabHelper(void *p) {
      delete [] ((::TabHelper*)p);
   }
   static void destruct_TabHelper(void *p) {
      typedef ::TabHelper current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TabHelper

//______________________________________________________________________________
void JevpViewer::Streamer(TBuffer &R__b)
{
   // Stream an object of class JevpViewer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JevpViewer::Class(),this);
   } else {
      R__b.WriteClassBuffer(JevpViewer::Class(),this);
   }
}

//______________________________________________________________________________
void JevpViewer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JevpViewer.
      TClass *R__cl = ::JevpViewer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQObject", &fQObject);
      R__insp.InspectMember(fQObject, "fQObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eth", (void*)&eth);
      R__insp.InspectMember("EthServers", (void*)&eth, "eth.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SERVERPORT", &SERVERPORT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "initauto", &initauto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMain", &fMain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*menu", &menu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tabs", &tabs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*timer", &timer);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_JevpViewer(void *p) {
      delete ((::JevpViewer*)p);
   }
   static void deleteArray_JevpViewer(void *p) {
      delete [] ((::JevpViewer*)p);
   }
   static void destruct_JevpViewer(void *p) {
      typedef ::JevpViewer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::JevpViewer

//______________________________________________________________________________
void JevpPlotInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class JevpPlotInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(JevpPlotInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(JevpPlotInfo::Class(),this);
   }
}

//______________________________________________________________________________
void JevpPlotInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JevpPlotInfo.
      TClass *R__cl = ::JevpPlotInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQObject", &fQObject);
      R__insp.InspectMember(fQObject, "fQObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "combo_index", &combo_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ethclient", &ethclient);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*jevpPlots", &jevpPlots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plotItems", &plotItems);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cleanTime", &cleanTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*myCanvasFrame", &myCanvasFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "npads", &npads);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_JevpPlotInfo(void *p) {
      delete ((::JevpPlotInfo*)p);
   }
   static void deleteArray_JevpPlotInfo(void *p) {
      delete [] ((::JevpPlotInfo*)p);
   }
   static void destruct_JevpPlotInfo(void *p) {
      typedef ::JevpPlotInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::JevpPlotInfo

//______________________________________________________________________________
void CanvasFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class CanvasFrame.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CanvasFrame::Class(),this);
   } else {
      R__b.WriteClassBuffer(CanvasFrame::Class(),this);
   }
}

//______________________________________________________________________________
void CanvasFrame::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class CanvasFrame.
      TClass *R__cl = ::CanvasFrame::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQObject", &fQObject);
      R__insp.InspectMember(fQObject, "fQObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plotInfo", &plotInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*canvas", &canvas);
      TGCompositeFrame::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_CanvasFrame(void *p) {
      delete ((::CanvasFrame*)p);
   }
   static void deleteArray_CanvasFrame(void *p) {
      delete [] ((::CanvasFrame*)p);
   }
   static void destruct_CanvasFrame(void *p) {
      typedef ::CanvasFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CanvasFrame

//______________________________________________________________________________
void DummyFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class DummyFrame.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DummyFrame::Class(),this);
   } else {
      R__b.WriteClassBuffer(DummyFrame::Class(),this);
   }
}

//______________________________________________________________________________
void DummyFrame::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DummyFrame.
      TClass *R__cl = ::DummyFrame::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQObject", &fQObject);
      R__insp.InspectMember(fQObject, "fQObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*canvas", &canvas);
      TGCompositeFrame::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_DummyFrame(void *p) {
      delete ((::DummyFrame*)p);
   }
   static void deleteArray_DummyFrame(void *p) {
      delete [] ((::DummyFrame*)p);
   }
   static void destruct_DummyFrame(void *p) {
      typedef ::DummyFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DummyFrame

//______________________________________________________________________________
void TGTabLayout2::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGTabLayout2.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TGTabLayout2::Class(),this);
   } else {
      R__b.WriteClassBuffer(TGTabLayout2::Class(),this);
   }
}

//______________________________________________________________________________
void TGTabLayout2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TGTabLayout2.
      TClass *R__cl = ::TGTabLayout2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMain", &fMain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fList", &fList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isLayedOut", &isLayedOut);
      TGLayoutManager::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TGTabLayout2(void *p) {
      delete ((::TGTabLayout2*)p);
   }
   static void deleteArray_TGTabLayout2(void *p) {
      delete [] ((::TGTabLayout2*)p);
   }
   static void destruct_TGTabLayout2(void *p) {
      typedef ::TGTabLayout2 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TGTabLayout2

//______________________________________________________________________________
void TGTab2::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGTab2.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TGTab2::Class(),this);
   } else {
      R__b.WriteClassBuffer(TGTab2::Class(),this);
   }
}

//______________________________________________________________________________
void TGTab2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TGTab2.
      TClass *R__cl = ::TGTab2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &fCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTabh", &fTabh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fContainer", &fContainer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRemoved", &fRemoved);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFontStruct", &fFontStruct);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNormGC", &fNormGC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "display_shift", &display_shift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rightTabIdx", &rightTabIdx);
      TGCompositeFrame::ShowMembers(R__insp);
      TGWidget::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TGTab2(void *p) {
      return  p ? new(p) ::TGTab2 : new ::TGTab2;
   }
   static void *newArray_TGTab2(Long_t nElements, void *p) {
      return p ? new(p) ::TGTab2[nElements] : new ::TGTab2[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGTab2(void *p) {
      delete ((::TGTab2*)p);
   }
   static void deleteArray_TGTab2(void *p) {
      delete [] ((::TGTab2*)p);
   }
   static void destruct_TGTab2(void *p) {
      typedef ::TGTab2 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TGTab2

//______________________________________________________________________________
void TGTabElement2::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGTabElement2.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TGTabElement2::Class(),this);
   } else {
      R__b.WriteClassBuffer(TGTabElement2::Class(),this);
   }
}

//______________________________________________________________________________
void TGTabElement2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TGTabElement2.
      TClass *R__cl = ::TGTabElement2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fText", &fText);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClosePic", &fClosePic);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClosePicD", &fClosePicD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNormGC", &fNormGC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFontStruct", &fFontStruct);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTWidth", &fTWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHeight", &fTHeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnabled", &fEnabled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fShowClose", &fShowClose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fActive", &fActive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ContainerMapped", &ContainerMapped);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mapped", &Mapped);
      TGFrame::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TGTabElement2(void *p) {
      return  p ? new(p) ::TGTabElement2 : new ::TGTabElement2;
   }
   static void *newArray_TGTabElement2(Long_t nElements, void *p) {
      return p ? new(p) ::TGTabElement2[nElements] : new ::TGTabElement2[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGTabElement2(void *p) {
      delete ((::TGTabElement2*)p);
   }
   static void deleteArray_TGTabElement2(void *p) {
      delete [] ((::TGTabElement2*)p);
   }
   static void destruct_TGTabElement2(void *p) {
      typedef ::TGTabElement2 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TGTabElement2

//______________________________________________________________________________
void ZoomFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class ZoomFrame.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ZoomFrame::Class(),this);
   } else {
      R__b.WriteClassBuffer(ZoomFrame::Class(),this);
   }
}

//______________________________________________________________________________
void ZoomFrame::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ZoomFrame.
      TClass *R__cl = ::ZoomFrame::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQObject", &fQObject);
      R__insp.InspectMember(fQObject, "fQObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tgcanvas", &tgcanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*frame", &frame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*canvas", &canvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hframe", &hframe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*exitb", &exitb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*expandb", &expandb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*contractb", &contractb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*plotclone", &plotclone);
      TGMainFrame::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_ZoomFrame(void *p) {
      delete ((::ZoomFrame*)p);
   }
   static void deleteArray_ZoomFrame(void *p) {
      delete [] ((::ZoomFrame*)p);
   }
   static void destruct_ZoomFrame(void *p) {
      typedef ::ZoomFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ZoomFrame

//______________________________________________________________________________
void MyMainFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class MyMainFrame.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MyMainFrame::Class(),this);
   } else {
      R__b.WriteClassBuffer(MyMainFrame::Class(),this);
   }
}

//______________________________________________________________________________
void MyMainFrame::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MyMainFrame.
      TClass *R__cl = ::MyMainFrame::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQObject", &fQObject);
      R__insp.InspectMember(fQObject, "fQObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMain", &fMain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEcanvas", &fEcanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fileMenu", &fileMenu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*aaaMenu", &aaaMenu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*update", &update);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*autoupdate", &autoupdate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tabs", &tabs);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_MyMainFrame(void *p) {
      delete ((::MyMainFrame*)p);
   }
   static void deleteArray_MyMainFrame(void *p) {
      delete [] ((::MyMainFrame*)p);
   }
   static void destruct_MyMainFrame(void *p) {
      typedef ::MyMainFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MyMainFrame

//______________________________________________________________________________
void DrawFrame::Streamer(TBuffer &R__b)
{
   // Stream an object of class DrawFrame.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DrawFrame::Class(),this);
   } else {
      R__b.WriteClassBuffer(DrawFrame::Class(),this);
   }
}

//______________________________________________________________________________
void DrawFrame::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DrawFrame.
      TClass *R__cl = ::DrawFrame::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQObject", &fQObject);
      R__insp.InspectMember(fQObject, "fQObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f1", &f1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*canvas", &canvas);
      TGCompositeFrame::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_DrawFrame(void *p) {
      delete ((::DrawFrame*)p);
   }
   static void deleteArray_DrawFrame(void *p) {
      delete [] ((::DrawFrame*)p);
   }
   static void destruct_DrawFrame(void *p) {
      typedef ::DrawFrame current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DrawFrame

namespace ROOTDict {
   void listlEJevpPlotmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void listlEJevpPlotmUgR_Dictionary();
   static void *new_listlEJevpPlotmUgR(void *p = 0);
   static void *newArray_listlEJevpPlotmUgR(Long_t size, void *p);
   static void delete_listlEJevpPlotmUgR(void *p);
   static void deleteArray_listlEJevpPlotmUgR(void *p);
   static void destruct_listlEJevpPlotmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const list<JevpPlot*>*)
   {
      list<JevpPlot*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(list<JevpPlot*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("list<JevpPlot*>", -2, "prec_stl/list", 44,
                  typeid(list<JevpPlot*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &listlEJevpPlotmUgR_Dictionary, isa_proxy, 0,
                  sizeof(list<JevpPlot*>) );
      instance.SetNew(&new_listlEJevpPlotmUgR);
      instance.SetNewArray(&newArray_listlEJevpPlotmUgR);
      instance.SetDelete(&delete_listlEJevpPlotmUgR);
      instance.SetDeleteArray(&deleteArray_listlEJevpPlotmUgR);
      instance.SetDestructor(&destruct_listlEJevpPlotmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< list<JevpPlot*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const list<JevpPlot*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void listlEJevpPlotmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const list<JevpPlot*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_listlEJevpPlotmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) list<JevpPlot*> : new list<JevpPlot*>;
   }
   static void *newArray_listlEJevpPlotmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) list<JevpPlot*>[nElements] : new list<JevpPlot*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_listlEJevpPlotmUgR(void *p) {
      delete ((list<JevpPlot*>*)p);
   }
   static void deleteArray_listlEJevpPlotmUgR(void *p) {
      delete [] ((list<JevpPlot*>*)p);
   }
   static void destruct_listlEJevpPlotmUgR(void *p) {
      typedef list<JevpPlot*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class list<JevpPlot*>

namespace ROOTDict {
   void maplEintcOTH1mUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOTH1mUgR_Dictionary();
   static void *new_maplEintcOTH1mUgR(void *p = 0);
   static void *newArray_maplEintcOTH1mUgR(Long_t size, void *p);
   static void delete_maplEintcOTH1mUgR(void *p);
   static void deleteArray_maplEintcOTH1mUgR(void *p);
   static void destruct_maplEintcOTH1mUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,TH1*>*)
   {
      map<int,TH1*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,TH1*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,TH1*>", -2, "prec_stl/map", 63,
                  typeid(map<int,TH1*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOTH1mUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,TH1*>) );
      instance.SetNew(&new_maplEintcOTH1mUgR);
      instance.SetNewArray(&newArray_maplEintcOTH1mUgR);
      instance.SetDelete(&delete_maplEintcOTH1mUgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOTH1mUgR);
      instance.SetDestructor(&destruct_maplEintcOTH1mUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,TH1*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,TH1*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOTH1mUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,TH1*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOTH1mUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TH1*> : new map<int,TH1*>;
   }
   static void *newArray_maplEintcOTH1mUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TH1*>[nElements] : new map<int,TH1*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOTH1mUgR(void *p) {
      delete ((map<int,TH1*>*)p);
   }
   static void deleteArray_maplEintcOTH1mUgR(void *p) {
      delete [] ((map<int,TH1*>*)p);
   }
   static void destruct_maplEintcOTH1mUgR(void *p) {
      typedef map<int,TH1*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,TH1*>

namespace ROOTDict {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,int>

namespace ROOTDict {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<bool>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

/********************************************************
* .sl73_gcc485/obj/OnlTools/Jevp/Jevp_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableJevp_Cint();

extern "C" void G__set_cpp_environmentJevp_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("JevpBuilder.h");
  G__add_compiledheader("baseBuilder.h");
  G__add_compiledheader("bbcBuilder.h");
  G__add_compiledheader("bemcBuilder.h");
  G__add_compiledheader("daqBuilder.h");
  G__add_compiledheader("eemcBuilder.h");
  G__add_compiledheader("epdBuilder.h");
  G__add_compiledheader("etofBuilder.h");
  G__add_compiledheader("fgtBuilder.h");
  G__add_compiledheader("fmsBuilder.h");
  G__add_compiledheader("fpdBuilder.h");
  G__add_compiledheader("fpsBuilder.h");
  G__add_compiledheader("fstBuilder.h");
  G__add_compiledheader("gmtBuilder.h");
  G__add_compiledheader("hltBuilder.h");
  G__add_compiledheader("hltphiBuilder.h");
  G__add_compiledheader("istBuilder.h");
  G__add_compiledheader("itpcBuilder.h");
  G__add_compiledheader("l3Builder.h");
  G__add_compiledheader("l4Builder.h");
  G__add_compiledheader("mtdBuilder.h");
  G__add_compiledheader("ppBuilder.h");
  G__add_compiledheader("pxlBuilder.h");
  G__add_compiledheader("ssdBuilder.h");
  G__add_compiledheader("tofBuilder.h");
  G__add_compiledheader("tpcBuilder.h");
  G__add_compiledheader("tpxBuilder.h");
  G__add_compiledheader("trgBuilder.h");
  G__add_compiledheader("upcBuilder.h");
  G__add_compiledheader("vpdBuilder.h");
  G__add_compiledheader("BuilderStatus.h");
  G__add_compiledheader("EvpMessage.h");
  G__add_compiledheader("JLatex.h");
  G__add_compiledheader("JLine.h");
  G__add_compiledheader("JevpPlot.h");
  G__add_compiledheader("JevpPlotSet.h");
  G__add_compiledheader("RunStatus.h");
  G__add_compiledheader("JevpServerMain.h");
  G__add_compiledheader("JevpViewer.h");
  G__add_compiledheader("TGTab2.h");
  G__add_compiledheader("ZoomFrame.h");
  G__add_compiledheader("example.h");
  G__cpp_reset_tagtableJevp_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevJevp_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* PlotHisto */
static int G__Jevp_Cint_306_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PlotHisto* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PlotHisto((TH1*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) PlotHisto((TH1*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new PlotHisto[n];
       } else {
         p = new((void*) gvp) PlotHisto[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new PlotHisto;
       } else {
         p = new((void*) gvp) PlotHisto;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_PlotHisto));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_306_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PlotHisto* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PlotHisto(*(PlotHisto*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) PlotHisto(*(PlotHisto*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_PlotHisto));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_306_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PlotHisto* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PlotHisto(*(PlotHisto*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) PlotHisto(*(PlotHisto*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_PlotHisto));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_306_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PlotHisto*) G__getstructoffset())->setLegText((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_306_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PlotHisto*) G__getstructoffset())->setLegArgs((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_306_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PlotHisto::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_306_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PlotHisto::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_306_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PlotHisto::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_306_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PlotHisto::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_306_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PlotHisto*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_306_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PlotHisto::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_306_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PlotHisto::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_306_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PlotHisto::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_306_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PlotHisto::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PlotHisto G__TPlotHisto;
static int G__Jevp_Cint_306_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PlotHisto*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PlotHisto*) (soff+(sizeof(PlotHisto)*i)))->~G__TPlotHisto();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PlotHisto*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PlotHisto*) (soff))->~G__TPlotHisto();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Jevp_Cint_306_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PlotHisto* dest = (PlotHisto*) G__getstructoffset();
   *dest = *(PlotHisto*) libp->para[0].ref;
   const PlotHisto& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* JevpPlot */
static int G__Jevp_Cint_307_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JevpPlot*) G__getstructoffset())->getMaxY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlot*) G__getstructoffset())->setMaxY((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlot*) G__getstructoffset())->setMinY((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlot*) G__getstructoffset())->setRefComment((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlot*) G__getstructoffset())->addHisto((PlotHisto*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlot*) G__getstructoffset())->addHisto((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlot*) G__getstructoffset())->removeHisto((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JevpPlot*) G__getstructoffset())->getHisto((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((JevpPlot*) G__getstructoffset())->isDataPresent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((JevpPlot*) G__getstructoffset())->nHistos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((JevpPlot*) G__getstructoffset())->GetPlotName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlot*) G__getstructoffset())->setPalette((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlot*) G__getstructoffset())->draw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlot*) G__getstructoffset())->setLegend((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlot*) G__getstructoffset())->setOptStat((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlot*) G__getstructoffset())->setDrawOpts((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JevpPlot* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JevpPlot((TH1*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) JevpPlot((TH1*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new JevpPlot[n];
       } else {
         p = new((void*) gvp) JevpPlot[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new JevpPlot;
       } else {
         p = new((void*) gvp) JevpPlot;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JevpPlot* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new JevpPlot(*(JevpPlot*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) JevpPlot(*(JevpPlot*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlot*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlot*) G__getstructoffset())->setParent((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((JevpPlot*) G__getstructoffset())->getParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlot*) G__getstructoffset())->addElement((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlot*) G__getstructoffset())->removeElement((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JevpPlot*) G__getstructoffset())->getElements());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JevpPlot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpPlot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JevpPlot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JevpPlot::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlot*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpPlot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JevpPlot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpPlot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_307_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JevpPlot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JevpPlot G__TJevpPlot;
static int G__Jevp_Cint_307_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JevpPlot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JevpPlot*) (soff+(sizeof(JevpPlot)*i)))->~G__TJevpPlot();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JevpPlot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JevpPlot*) (soff))->~G__TJevpPlot();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BuilderStatus */
static int G__Jevp_Cint_308_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BuilderStatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BuilderStatus[n];
     } else {
       p = new((void*) gvp) BuilderStatus[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BuilderStatus;
     } else {
       p = new((void*) gvp) BuilderStatus;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_BuilderStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_308_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BuilderStatus*) G__getstructoffset())->setName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_308_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BuilderStatus*) G__getstructoffset())->setStatus((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_308_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((BuilderStatus*) G__getstructoffset())->running());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_308_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BuilderStatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_308_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BuilderStatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_308_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BuilderStatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_308_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BuilderStatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_308_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BuilderStatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_308_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BuilderStatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_308_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BuilderStatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_308_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BuilderStatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_308_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BuilderStatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Jevp_Cint_308_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BuilderStatus* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BuilderStatus(*(BuilderStatus*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_BuilderStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BuilderStatus G__TBuilderStatus;
static int G__Jevp_Cint_308_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BuilderStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BuilderStatus*) (soff+(sizeof(BuilderStatus)*i)))->~G__TBuilderStatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BuilderStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BuilderStatus*) (soff))->~G__TBuilderStatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Jevp_Cint_308_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BuilderStatus* dest = (BuilderStatus*) G__getstructoffset();
   *dest = *(BuilderStatus*) libp->para[0].ref;
   const BuilderStatus& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* JLatex */
static int G__Jevp_Cint_316_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JLatex*) G__getstructoffset())->SetNDC_x((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_316_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JLatex*) G__getstructoffset())->SetNDC_y((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_316_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JLatex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JLatex[n];
     } else {
       p = new((void*) gvp) JLatex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JLatex;
     } else {
       p = new((void*) gvp) JLatex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_JLatex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_316_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JLatex* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JLatex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) JLatex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JLatex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) JLatex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JLatex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) JLatex(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_JLatex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_316_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JLatex* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new JLatex(*(JLatex*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) JLatex(*(JLatex*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_JLatex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_316_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JLatex*) G__getstructoffset())->SetText((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_316_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JLatex*) G__getstructoffset())->SetText((const wchar_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_316_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JLatex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_316_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JLatex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_316_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JLatex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_316_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JLatex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_316_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JLatex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_316_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JLatex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_316_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JLatex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_316_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JLatex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_316_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JLatex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JLatex G__TJLatex;
static int G__Jevp_Cint_316_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JLatex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JLatex*) (soff+(sizeof(JLatex)*i)))->~G__TJLatex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JLatex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JLatex*) (soff))->~G__TJLatex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* JLine */
static int G__Jevp_Cint_319_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JLine*) G__getstructoffset())->SetNDC_x((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_319_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JLine*) G__getstructoffset())->SetNDC_y((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_319_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JLine*) G__getstructoffset())->SetXY((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_319_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JLine* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JLine[n];
     } else {
       p = new((void*) gvp) JLine[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JLine;
     } else {
       p = new((void*) gvp) JLine;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_JLine));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_319_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JLine* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new JLine(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) JLine(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_JLine));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_319_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JLine::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_319_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JLine::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_319_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JLine::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_319_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JLine::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_319_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JLine*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_319_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JLine::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_319_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JLine::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_319_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JLine::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_319_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JLine::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Jevp_Cint_319_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   JLine* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new JLine(*(JLine*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_JLine));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JLine G__TJLine;
static int G__Jevp_Cint_319_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JLine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JLine*) (soff+(sizeof(JLine)*i)))->~G__TJLine();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JLine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JLine*) (soff))->~G__TJLine();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Jevp_Cint_319_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JLine* dest = (JLine*) G__getstructoffset();
   *dest = *(JLine*) libp->para[0].ref;
   const JLine& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EvpMessage */
static int G__Jevp_Cint_621_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpMessage*) G__getstructoffset())->setSource((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_621_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpMessage*) G__getstructoffset())->setCmd((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_621_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpMessage*) G__getstructoffset())->setArgs((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_621_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((EvpMessage*) G__getstructoffset())->getSource());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_621_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((EvpMessage*) G__getstructoffset())->getCmd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_621_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((EvpMessage*) G__getstructoffset())->getArgs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_621_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EvpMessage* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EvpMessage[n];
     } else {
       p = new((void*) gvp) EvpMessage[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EvpMessage;
     } else {
       p = new((void*) gvp) EvpMessage;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_EvpMessage));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_621_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EvpMessage::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_621_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EvpMessage::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_621_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EvpMessage::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_621_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EvpMessage::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_621_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpMessage*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_621_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EvpMessage::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_621_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EvpMessage::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_621_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EvpMessage::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_621_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EvpMessage::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Jevp_Cint_621_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EvpMessage* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EvpMessage(*(EvpMessage*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_EvpMessage));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EvpMessage G__TEvpMessage;
static int G__Jevp_Cint_621_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EvpMessage*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EvpMessage*) (soff+(sizeof(EvpMessage)*i)))->~G__TEvpMessage();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EvpMessage*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EvpMessage*) (soff))->~G__TEvpMessage();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Jevp_Cint_621_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EvpMessage* dest = (EvpMessage*) G__getstructoffset();
   *dest = *(EvpMessage*) libp->para[0].ref;
   const EvpMessage& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RunStatus */
static int G__Jevp_Cint_626_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RunStatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RunStatus[n];
     } else {
       p = new((void*) gvp) RunStatus[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RunStatus;
     } else {
       p = new((void*) gvp) RunStatus;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_RunStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_626_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->setStatus((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_626_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->dump();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_626_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RunStatus::getNumericStatus((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_626_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunStatus*) G__getstructoffset())->running());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_626_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->addEvent((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_626_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RunStatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_626_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RunStatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_626_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RunStatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_626_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RunStatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_626_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_626_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RunStatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_626_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RunStatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_626_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RunStatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_626_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RunStatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Jevp_Cint_626_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RunStatus* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RunStatus(*(RunStatus*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_RunStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RunStatus G__TRunStatus;
static int G__Jevp_Cint_626_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RunStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RunStatus*) (soff+(sizeof(RunStatus)*i)))->~G__TRunStatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RunStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RunStatus*) (soff))->~G__TRunStatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Jevp_Cint_626_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RunStatus* dest = (RunStatus*) G__getstructoffset();
   *dest = *(RunStatus*) libp->para[0].ref;
   const RunStatus& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* JevpPlotSet */
static int G__Jevp_Cint_632_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JevpPlotSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JevpPlotSet((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) JevpPlotSet((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new JevpPlotSet[n];
       } else {
         p = new((void*) gvp) JevpPlotSet[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new JevpPlotSet;
       } else {
         p = new((void*) gvp) JevpPlotSet;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((JevpPlotSet*) G__getstructoffset())->getMemUse());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((JevpPlotSet*) G__getstructoffset())->getPlotSetName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((JevpPlotSet*) G__getstructoffset())->getDebugInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((JevpPlotSet*) G__getstructoffset())->addPlot((JevpPlot*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JevpPlotSet*) G__getstructoffset())->getPlot((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotSet*) G__getstructoffset())->removePlot((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((JevpPlotSet*) G__getstructoffset())->getNumberOfPlots());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JevpPlotSet*) G__getstructoffset())->getPlotByIndex((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotSet*) G__getstructoffset())->dump();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotSet*) G__getstructoffset())->setDisabled();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotSet*) G__getstructoffset())->_initialize((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotSet*) G__getstructoffset())->initialize((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotSet*) G__getstructoffset())->_startrun((daqReader*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotSet*) G__getstructoffset())->startrun((daqReader*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotSet*) G__getstructoffset())->stoprun((daqReader*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotSet*) G__getstructoffset())->_stoprun((daqReader*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotSet*) G__getstructoffset())->_event((daqReader*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotSet*) G__getstructoffset())->event((daqReader*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((JevpPlotSet*) G__getstructoffset())->selectEvent((daqReader*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((JevpPlotSet*) G__getstructoffset())->selectRun((daqReader*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotSet*) G__getstructoffset())->Main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotSet*) G__getstructoffset())->resetAllPlots();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotSet*) G__getstructoffset())->addServerTags((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JevpPlotSet*) G__getstructoffset())->getAverageProcessingTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JevpPlotSet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpPlotSet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JevpPlotSet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JevpPlotSet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotSet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpPlotSet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JevpPlotSet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpPlotSet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_632_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JevpPlotSet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JevpPlotSet G__TJevpPlotSet;
static int G__Jevp_Cint_632_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JevpPlotSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JevpPlotSet*) (soff+(sizeof(JevpPlotSet)*i)))->~G__TJevpPlotSet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JevpPlotSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JevpPlotSet*) (soff))->~G__TJevpPlotSet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* JevpBuilder */
static int G__Jevp_Cint_701_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JevpBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JevpBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) JevpBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new JevpBuilder[n];
       } else {
         p = new((void*) gvp) JevpBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new JevpBuilder;
       } else {
         p = new((void*) gvp) JevpBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_701_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JevpBuilder*) G__getstructoffset())->getStTriggerData((daqReader*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_701_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JevpBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_701_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_701_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JevpBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_701_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JevpBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_701_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_701_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_701_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JevpBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_701_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_701_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JevpBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JevpBuilder G__TJevpBuilder;
static int G__Jevp_Cint_701_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JevpBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JevpBuilder*) (soff+(sizeof(JevpBuilder)*i)))->~G__TJevpBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JevpBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JevpBuilder*) (soff))->~G__TJevpBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* baseBuilder */
static int G__Jevp_Cint_711_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   baseBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new baseBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) baseBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new baseBuilder[n];
       } else {
         p = new((void*) gvp) baseBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new baseBuilder;
       } else {
         p = new((void*) gvp) baseBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_baseBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_711_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      baseBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_711_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) baseBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_711_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) baseBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_711_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) baseBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_711_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      baseBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_711_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((baseBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_711_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) baseBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_711_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) baseBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_711_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) baseBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_711_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) baseBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef baseBuilder G__TbaseBuilder;
static int G__Jevp_Cint_711_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (baseBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((baseBuilder*) (soff+(sizeof(baseBuilder)*i)))->~G__TbaseBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (baseBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((baseBuilder*) (soff))->~G__TbaseBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* bbcBuilder */
static int G__Jevp_Cint_712_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bbcBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bbcBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) bbcBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new bbcBuilder[n];
       } else {
         p = new((void*) gvp) bbcBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new bbcBuilder;
       } else {
         p = new((void*) gvp) bbcBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_bbcBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_712_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      bbcBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_712_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) bbcBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_712_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bbcBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_712_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) bbcBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_712_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      bbcBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_712_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bbcBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_712_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bbcBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_712_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bbcBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_712_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bbcBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_712_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bbcBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef bbcBuilder G__TbbcBuilder;
static int G__Jevp_Cint_712_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (bbcBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((bbcBuilder*) (soff+(sizeof(bbcBuilder)*i)))->~G__TbbcBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (bbcBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((bbcBuilder*) (soff))->~G__TbbcBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* bemcBuilder */
static int G__Jevp_Cint_716_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   bemcBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new bemcBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) bemcBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new bemcBuilder[n];
       } else {
         p = new((void*) gvp) bemcBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new bemcBuilder;
       } else {
         p = new((void*) gvp) bemcBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_bemcBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_716_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      bemcBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_716_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) bemcBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_716_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bemcBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_716_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) bemcBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_716_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      bemcBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_716_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((bemcBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_716_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bemcBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_716_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bemcBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_716_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) bemcBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_716_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) bemcBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef bemcBuilder G__TbemcBuilder;
static int G__Jevp_Cint_716_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (bemcBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((bemcBuilder*) (soff+(sizeof(bemcBuilder)*i)))->~G__TbemcBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (bemcBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((bemcBuilder*) (soff))->~G__TbemcBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* daqBuilder */
static int G__Jevp_Cint_717_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   daqBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new daqBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) daqBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new daqBuilder[n];
       } else {
         p = new((void*) gvp) daqBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new daqBuilder;
       } else {
         p = new((void*) gvp) daqBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_daqBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_717_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      daqBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_717_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) daqBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_717_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) daqBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_717_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) daqBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_717_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      daqBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_717_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((daqBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_717_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) daqBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_717_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) daqBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_717_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) daqBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_717_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) daqBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef daqBuilder G__TdaqBuilder;
static int G__Jevp_Cint_717_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (daqBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((daqBuilder*) (soff+(sizeof(daqBuilder)*i)))->~G__TdaqBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (daqBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((daqBuilder*) (soff))->~G__TdaqBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* eemcBuilder */
static int G__Jevp_Cint_721_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   eemcBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new eemcBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) eemcBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new eemcBuilder[n];
       } else {
         p = new((void*) gvp) eemcBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new eemcBuilder;
       } else {
         p = new((void*) gvp) eemcBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_eemcBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_721_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      eemcBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_721_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) eemcBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_721_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) eemcBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_721_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) eemcBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_721_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      eemcBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_721_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((eemcBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_721_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) eemcBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_721_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) eemcBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_721_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) eemcBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_721_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) eemcBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef eemcBuilder G__TeemcBuilder;
static int G__Jevp_Cint_721_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (eemcBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((eemcBuilder*) (soff+(sizeof(eemcBuilder)*i)))->~G__TeemcBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (eemcBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((eemcBuilder*) (soff))->~G__TeemcBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* epdBuilder */
static int G__Jevp_Cint_725_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   epdBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new epdBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) epdBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new epdBuilder[n];
       } else {
         p = new((void*) gvp) epdBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new epdBuilder;
       } else {
         p = new((void*) gvp) epdBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_epdBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_725_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      epdBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_725_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) epdBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_725_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) epdBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_725_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) epdBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_725_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      epdBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_725_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((epdBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_725_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) epdBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_725_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epdBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_725_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) epdBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_725_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) epdBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef epdBuilder G__TepdBuilder;
static int G__Jevp_Cint_725_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (epdBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((epdBuilder*) (soff+(sizeof(epdBuilder)*i)))->~G__TepdBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (epdBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((epdBuilder*) (soff))->~G__TepdBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* etofBuilder */
static int G__Jevp_Cint_731_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   etofBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new etofBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) etofBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new etofBuilder[n];
       } else {
         p = new((void*) gvp) etofBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new etofBuilder;
       } else {
         p = new((void*) gvp) etofBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_etofBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_731_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      etofBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_731_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) etofBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_731_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) etofBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_731_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) etofBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_731_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      etofBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_731_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((etofBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_731_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) etofBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_731_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) etofBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_731_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) etofBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_731_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) etofBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef etofBuilder G__TetofBuilder;
static int G__Jevp_Cint_731_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (etofBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((etofBuilder*) (soff+(sizeof(etofBuilder)*i)))->~G__TetofBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (etofBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((etofBuilder*) (soff))->~G__TetofBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* fgtBuilder */
static int G__Jevp_Cint_738_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   fgtBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new fgtBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) fgtBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new fgtBuilder[n];
       } else {
         p = new((void*) gvp) fgtBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new fgtBuilder;
       } else {
         p = new((void*) gvp) fgtBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_fgtBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_738_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fgtBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_738_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) fgtBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_738_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) fgtBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_738_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) fgtBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_738_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fgtBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_738_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((fgtBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_738_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) fgtBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_738_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) fgtBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_738_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) fgtBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_738_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) fgtBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef fgtBuilder G__TfgtBuilder;
static int G__Jevp_Cint_738_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (fgtBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((fgtBuilder*) (soff+(sizeof(fgtBuilder)*i)))->~G__TfgtBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (fgtBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((fgtBuilder*) (soff))->~G__TfgtBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* fmsBuilder */
static int G__Jevp_Cint_770_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   fmsBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new fmsBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) fmsBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new fmsBuilder[n];
       } else {
         p = new((void*) gvp) fmsBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new fmsBuilder;
       } else {
         p = new((void*) gvp) fmsBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_fmsBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_770_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fmsBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_770_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((fmsBuilder*) G__getstructoffset())->initMaps();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_770_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) fmsBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_770_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) fmsBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_770_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) fmsBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_770_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fmsBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_770_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((fmsBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_770_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) fmsBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_770_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) fmsBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_770_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) fmsBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_770_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) fmsBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef fmsBuilder G__TfmsBuilder;
static int G__Jevp_Cint_770_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (fmsBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((fmsBuilder*) (soff+(sizeof(fmsBuilder)*i)))->~G__TfmsBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (fmsBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((fmsBuilder*) (soff))->~G__TfmsBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* fpdBuilder */
static int G__Jevp_Cint_782_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   fpdBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new fpdBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) fpdBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new fpdBuilder[n];
       } else {
         p = new((void*) gvp) fpdBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new fpdBuilder;
       } else {
         p = new((void*) gvp) fpdBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_fpdBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_782_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fpdBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_782_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) fpdBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_782_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) fpdBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_782_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) fpdBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_782_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fpdBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_782_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((fpdBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_782_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) fpdBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_782_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) fpdBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_782_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) fpdBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_782_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) fpdBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef fpdBuilder G__TfpdBuilder;
static int G__Jevp_Cint_782_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (fpdBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((fpdBuilder*) (soff+(sizeof(fpdBuilder)*i)))->~G__TfpdBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (fpdBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((fpdBuilder*) (soff))->~G__TfpdBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* fpsBuilder */
static int G__Jevp_Cint_785_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   fpsBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new fpsBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) fpsBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new fpsBuilder[n];
       } else {
         p = new((void*) gvp) fpsBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new fpsBuilder;
       } else {
         p = new((void*) gvp) fpsBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_fpsBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_785_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fpsBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_785_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) fpsBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_785_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) fpsBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_785_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) fpsBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_785_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fpsBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_785_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((fpsBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_785_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) fpsBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_785_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) fpsBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_785_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) fpsBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_785_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) fpsBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef fpsBuilder G__TfpsBuilder;
static int G__Jevp_Cint_785_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (fpsBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((fpsBuilder*) (soff+(sizeof(fpsBuilder)*i)))->~G__TfpsBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (fpsBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((fpsBuilder*) (soff))->~G__TfpsBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* fstBuilder */
static int G__Jevp_Cint_788_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   fstBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new fstBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) fstBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new fstBuilder[n];
       } else {
         p = new((void*) gvp) fstBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new fstBuilder;
       } else {
         p = new((void*) gvp) fstBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_fstBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_788_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fstBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_788_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) fstBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_788_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) fstBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_788_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) fstBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_788_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      fstBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_788_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((fstBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_788_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) fstBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_788_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) fstBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_788_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) fstBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_788_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) fstBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef fstBuilder G__TfstBuilder;
static int G__Jevp_Cint_788_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (fstBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((fstBuilder*) (soff+(sizeof(fstBuilder)*i)))->~G__TfstBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (fstBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((fstBuilder*) (soff))->~G__TfstBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* gmtBuilder */
static int G__Jevp_Cint_806_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   gmtBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new gmtBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) gmtBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new gmtBuilder[n];
       } else {
         p = new((void*) gvp) gmtBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new gmtBuilder;
       } else {
         p = new((void*) gvp) gmtBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_gmtBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_806_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((gmtBuilder*) G__getstructoffset())->getAPV((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_806_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((gmtBuilder*) G__getstructoffset())->getLayer((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_806_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((gmtBuilder*) G__getstructoffset())->usedAPV((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_806_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      gmtBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_806_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) gmtBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_806_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) gmtBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_806_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) gmtBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_806_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      gmtBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_806_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((gmtBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_806_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) gmtBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_806_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) gmtBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_806_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) gmtBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_806_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) gmtBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef gmtBuilder G__TgmtBuilder;
static int G__Jevp_Cint_806_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (gmtBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((gmtBuilder*) (soff+(sizeof(gmtBuilder)*i)))->~G__TgmtBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (gmtBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((gmtBuilder*) (soff))->~G__TgmtBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* hltBuilder */
static int G__Jevp_Cint_1035_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   hltBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new hltBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) hltBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new hltBuilder[n];
       } else {
         p = new((void*) gvp) hltBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new hltBuilder;
       } else {
         p = new((void*) gvp) hltBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_hltBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((hltBuilder*) G__getstructoffset())->getPID((hlt_track*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((hltBuilder*) G__getstructoffset())->getQinv((hlt_track*) G__int(libp->para[0]), (hlt_track*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((hltBuilder*) G__getstructoffset())->getQinv((hlt_track*) G__int(libp->para[0]), (float*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((hltBuilder*) G__getstructoffset())->getQout((hlt_track*) G__int(libp->para[0]), (hlt_track*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((hltBuilder*) G__getstructoffset())->getQout((hlt_track*) G__int(libp->para[0]), (float*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((hltBuilder*) G__getstructoffset())->getQside((hlt_track*) G__int(libp->para[0]), (hlt_track*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((hltBuilder*) G__getstructoffset())->getQside((hlt_track*) G__int(libp->para[0]), (float*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((hltBuilder*) G__getstructoffset())->getQlong((hlt_track*) G__int(libp->para[0]), (hlt_track*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((hltBuilder*) G__getstructoffset())->getQlong((hlt_track*) G__int(libp->para[0]), (float*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((hltBuilder*) G__getstructoffset())->vertexEventCut((HLT_EVE*) G__int(libp->para[0]), (hltBuilder::eventCut_info*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((hltBuilder*) G__getstructoffset())->multiplicityEventCut((int) G__int(libp->para[0]), (hltBuilder::eventCut_info*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((hltBuilder*) G__getstructoffset())->BemcEventCut((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (hltBuilder::eventCut_info*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((hltBuilder*) G__getstructoffset())->trackCut((hlt_track*) G__int(libp->para[0]), (HLT_EVE*) G__int(libp->para[1])
, (hltBuilder::trackCut_info*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((hltBuilder*) G__getstructoffset())->dipAngleCut((hlt_track*) G__int(libp->para[0]), (hlt_track*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((hltBuilder*) G__getstructoffset())->dipAngleCut((hlt_track*) G__int(libp->para[0]), (float*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((hltBuilder*) G__getstructoffset())->antiTrackSplittingCut((hlt_track*) G__int(libp->para[0]), (hlt_track*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((hltBuilder*) G__getstructoffset())->antiTrackSplittingCut((hlt_track*) G__int(libp->para[0]), (float*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((hltBuilder*) G__getstructoffset())->pairCut((hlt_track*) G__int(libp->para[0]), (hlt_track*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((hltBuilder*) G__getstructoffset())->pairCut((hlt_track*) G__int(libp->para[0]), (float*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hltBuilder*) G__getstructoffset())->updateCurrentHbtEvent((hltBuilder::hbt_event_info*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (hlt_track*) G__int(libp->para[2]), (HLT_EVE*) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hltBuilder*) G__getstructoffset())->updateHbtEventBuffer((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (hltBuilder::hbt_event_info*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((hltBuilder*) G__getstructoffset())->getRap((hlt_track*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((hltBuilder*) G__getstructoffset())->getEta((hlt_track*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((hltBuilder*) G__getstructoffset())->getDCA((hlt_track*) G__int(libp->para[0]), (HLT_EVE*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hltBuilder*) G__getstructoffset())->setUpdateSwitch((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((hltBuilder*) G__getstructoffset())->getUpdateSwitch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((hltBuilder*) G__getstructoffset())->sameSignCheck((hlt_track*) G__int(libp->para[0]), (hlt_track*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((hltBuilder*) G__getstructoffset())->sameSignCheck((hlt_track*) G__int(libp->para[0]), (float*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((hltBuilder*) G__getstructoffset())->fullBuffer((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((hltBuilder*) G__getstructoffset())->getMultMixingBin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((hltBuilder*) G__getstructoffset())->getVertexMixingBin((float) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hltBuilder*) G__getstructoffset())->computeYieldsHistogram();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hltBuilder*) G__getstructoffset())->computeHbtCorrelationFunction();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hltBuilder*) G__getstructoffset())->computeV2Corrected();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      hltBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) hltBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) hltBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) hltBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      hltBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hltBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) hltBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) hltBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) hltBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1035_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) hltBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef hltBuilder G__ThltBuilder;
static int G__Jevp_Cint_1035_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (hltBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((hltBuilder*) (soff+(sizeof(hltBuilder)*i)))->~G__ThltBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (hltBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((hltBuilder*) (soff))->~G__ThltBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HltphiBuilder */
static int G__Jevp_Cint_1086_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HltphiBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HltphiBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HltphiBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HltphiBuilder[n];
       } else {
         p = new((void*) gvp) HltphiBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HltphiBuilder;
       } else {
         p = new((void*) gvp) HltphiBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_HltphiBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1086_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HltphiBuilder*) G__getstructoffset())->WriteHistogram((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1086_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HltphiBuilder*) G__getstructoffset())->TempPhiWgtCal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1086_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HltphiBuilder*) G__getstructoffset())->WriteList((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1086_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HltphiBuilder*) G__getstructoffset())->Jpsiflow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1086_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HltphiBuilder*) G__getstructoffset())->chi((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1086_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HltphiBuilder*) G__getstructoffset())->resEventPlane((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1086_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HltphiBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1086_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HltphiBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1086_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HltphiBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1086_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HltphiBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1086_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HltphiBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1086_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HltphiBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1086_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HltphiBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1086_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HltphiBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1086_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HltphiBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1086_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HltphiBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HltphiBuilder G__THltphiBuilder;
static int G__Jevp_Cint_1086_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HltphiBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HltphiBuilder*) (soff+(sizeof(HltphiBuilder)*i)))->~G__THltphiBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HltphiBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HltphiBuilder*) (soff))->~G__THltphiBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* istBuilder */
static int G__Jevp_Cint_1087_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   istBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new istBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) istBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new istBuilder[n];
       } else {
         p = new((void*) gvp) istBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new istBuilder;
       } else {
         p = new((void*) gvp) istBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_istBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1087_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      istBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1087_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) istBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1087_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) istBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1087_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) istBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1087_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      istBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1087_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((istBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1087_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) istBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1087_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) istBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1087_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) istBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1087_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) istBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef istBuilder G__TistBuilder;
static int G__Jevp_Cint_1087_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (istBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((istBuilder*) (soff+(sizeof(istBuilder)*i)))->~G__TistBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (istBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((istBuilder*) (soff))->~G__TistBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* itpcBuilder */
static int G__Jevp_Cint_1106_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   itpcBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new itpcBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) itpcBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new itpcBuilder[n];
       } else {
         p = new((void*) gvp) itpcBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new itpcBuilder;
       } else {
         p = new((void*) gvp) itpcBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_itpcBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1106_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      itpcBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1106_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) itpcBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1106_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) itpcBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1106_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) itpcBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1106_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      itpcBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1106_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((itpcBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1106_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) itpcBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1106_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) itpcBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1106_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) itpcBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1106_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) itpcBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef itpcBuilder G__TitpcBuilder;
static int G__Jevp_Cint_1106_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (itpcBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((itpcBuilder*) (soff+(sizeof(itpcBuilder)*i)))->~G__TitpcBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (itpcBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((itpcBuilder*) (soff))->~G__TitpcBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* l3Builder */
static int G__Jevp_Cint_1111_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   l3Builder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new l3Builder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) l3Builder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new l3Builder[n];
       } else {
         p = new((void*) gvp) l3Builder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new l3Builder;
       } else {
         p = new((void*) gvp) l3Builder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_l3Builder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1111_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      l3Builder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1111_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) l3Builder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1111_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) l3Builder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1111_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) l3Builder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1111_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      l3Builder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1111_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((l3Builder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1111_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) l3Builder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1111_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) l3Builder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1111_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) l3Builder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1111_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) l3Builder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef l3Builder G__Tl3Builder;
static int G__Jevp_Cint_1111_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (l3Builder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((l3Builder*) (soff+(sizeof(l3Builder)*i)))->~G__Tl3Builder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (l3Builder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((l3Builder*) (soff))->~G__Tl3Builder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* l4Builder */
static int G__Jevp_Cint_1117_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   l4Builder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new l4Builder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) l4Builder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new l4Builder[n];
       } else {
         p = new((void*) gvp) l4Builder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new l4Builder;
       } else {
         p = new((void*) gvp) l4Builder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_l4Builder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1117_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      l4Builder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1117_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) l4Builder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1117_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) l4Builder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1117_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) l4Builder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1117_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      l4Builder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1117_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((l4Builder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1117_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) l4Builder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1117_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) l4Builder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1117_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) l4Builder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1117_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) l4Builder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef l4Builder G__Tl4Builder;
static int G__Jevp_Cint_1117_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (l4Builder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((l4Builder*) (soff+(sizeof(l4Builder)*i)))->~G__Tl4Builder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (l4Builder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((l4Builder*) (soff))->~G__Tl4Builder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* mtdBuilder */
static int G__Jevp_Cint_1118_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   mtdBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new mtdBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) mtdBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new mtdBuilder[n];
       } else {
         p = new((void*) gvp) mtdBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new mtdBuilder;
       } else {
         p = new((void*) gvp) mtdBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_mtdBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1118_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      mtdBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1118_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) mtdBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1118_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) mtdBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1118_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) mtdBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1118_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      mtdBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1118_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((mtdBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1118_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) mtdBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1118_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) mtdBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1118_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) mtdBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1118_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) mtdBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef mtdBuilder G__TmtdBuilder;
static int G__Jevp_Cint_1118_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (mtdBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((mtdBuilder*) (soff+(sizeof(mtdBuilder)*i)))->~G__TmtdBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (mtdBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((mtdBuilder*) (soff))->~G__TmtdBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ppBuilder */
static int G__Jevp_Cint_1121_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ppBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ppBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ppBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ppBuilder[n];
       } else {
         p = new((void*) gvp) ppBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ppBuilder;
       } else {
         p = new((void*) gvp) ppBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_ppBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1121_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ppBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1121_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ppBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1121_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ppBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1121_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ppBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1121_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ppBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1121_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ppBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1121_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ppBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1121_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ppBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1121_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ppBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1121_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ppBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ppBuilder G__TppBuilder;
static int G__Jevp_Cint_1121_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ppBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ppBuilder*) (soff+(sizeof(ppBuilder)*i)))->~G__TppBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ppBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ppBuilder*) (soff))->~G__TppBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pxlBuilder */
static int G__Jevp_Cint_1134_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pxlBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pxlBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) pxlBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new pxlBuilder[n];
       } else {
         p = new((void*) gvp) pxlBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new pxlBuilder;
       } else {
         p = new((void*) gvp) pxlBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_pxlBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1134_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pxlBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1134_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) pxlBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1134_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) pxlBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1134_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) pxlBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1134_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pxlBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1134_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pxlBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1134_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) pxlBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1134_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) pxlBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1134_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) pxlBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1134_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) pxlBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pxlBuilder G__TpxlBuilder;
static int G__Jevp_Cint_1134_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pxlBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pxlBuilder*) (soff+(sizeof(pxlBuilder)*i)))->~G__TpxlBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pxlBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pxlBuilder*) (soff))->~G__TpxlBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ssdBuilder */
static int G__Jevp_Cint_1166_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ssdBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ssdBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ssdBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ssdBuilder[n];
       } else {
         p = new((void*) gvp) ssdBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ssdBuilder;
       } else {
         p = new((void*) gvp) ssdBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_ssdBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1166_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ssdBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1166_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ssdBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1166_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ssdBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1166_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ssdBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1166_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ssdBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1166_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ssdBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1166_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ssdBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1166_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ssdBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1166_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ssdBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1166_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ssdBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ssdBuilder G__TssdBuilder;
static int G__Jevp_Cint_1166_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ssdBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ssdBuilder*) (soff+(sizeof(ssdBuilder)*i)))->~G__TssdBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ssdBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ssdBuilder*) (soff))->~G__TssdBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* tofBuilder */
static int G__Jevp_Cint_1167_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   tofBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new tofBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) tofBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new tofBuilder[n];
       } else {
         p = new((void*) gvp) tofBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new tofBuilder;
       } else {
         p = new((void*) gvp) tofBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_tofBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1167_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      tofBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1167_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) tofBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1167_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) tofBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1167_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) tofBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1167_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      tofBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1167_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((tofBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1167_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) tofBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1167_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) tofBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1167_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) tofBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1167_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) tofBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef tofBuilder G__TtofBuilder;
static int G__Jevp_Cint_1167_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (tofBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((tofBuilder*) (soff+(sizeof(tofBuilder)*i)))->~G__TtofBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (tofBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((tofBuilder*) (soff))->~G__TtofBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* tpcBuilder */
static int G__Jevp_Cint_1172_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   tpcBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new tpcBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) tpcBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new tpcBuilder[n];
       } else {
         p = new((void*) gvp) tpcBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new tpcBuilder;
       } else {
         p = new((void*) gvp) tpcBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_tpcBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1172_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      tpcBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1172_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) tpcBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1172_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) tpcBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1172_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) tpcBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1172_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      tpcBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1172_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((tpcBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1172_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) tpcBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) tpcBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1172_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) tpcBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1172_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) tpcBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef tpcBuilder G__TtpcBuilder;
static int G__Jevp_Cint_1172_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (tpcBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((tpcBuilder*) (soff+(sizeof(tpcBuilder)*i)))->~G__TtpcBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (tpcBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((tpcBuilder*) (soff))->~G__TtpcBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* tpxBuilder */
static int G__Jevp_Cint_1177_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   tpxBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new tpxBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) tpxBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new tpxBuilder[n];
       } else {
         p = new((void*) gvp) tpxBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new tpxBuilder;
       } else {
         p = new((void*) gvp) tpxBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_tpxBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1177_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      tpxBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1177_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) tpxBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1177_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) tpxBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1177_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) tpxBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1177_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      tpxBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1177_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((tpxBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1177_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) tpxBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1177_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) tpxBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1177_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) tpxBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1177_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) tpxBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef tpxBuilder G__TtpxBuilder;
static int G__Jevp_Cint_1177_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (tpxBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((tpxBuilder*) (soff+(sizeof(tpxBuilder)*i)))->~G__TtpxBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (tpxBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((tpxBuilder*) (soff))->~G__TtpxBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* trgBuilder */
static int G__Jevp_Cint_1183_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   trgBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new trgBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) trgBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new trgBuilder[n];
       } else {
         p = new((void*) gvp) trgBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new trgBuilder;
       } else {
         p = new((void*) gvp) trgBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_trgBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1183_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((trgBuilder*) G__getstructoffset())->fillQtHisto((int) G__int(libp->para[0]), (TriggerDataBlk*) G__int(libp->para[1])
, (TH1D*) G__int(libp->para[2]), (TH1D*) G__int(libp->para[3])
, (TProfile*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1183_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((trgBuilder*) G__getstructoffset())->handleQTOccupancyPlots((daqReader*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1183_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      trgBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1183_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) trgBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1183_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) trgBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1183_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) trgBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1183_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      trgBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1183_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((trgBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1183_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) trgBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1183_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) trgBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1183_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) trgBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1183_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) trgBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef trgBuilder G__TtrgBuilder;
static int G__Jevp_Cint_1183_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (trgBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((trgBuilder*) (soff+(sizeof(trgBuilder)*i)))->~G__TtrgBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (trgBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((trgBuilder*) (soff))->~G__TtrgBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* upcBuilder */
static int G__Jevp_Cint_1186_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   upcBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new upcBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) upcBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new upcBuilder[n];
       } else {
         p = new((void*) gvp) upcBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new upcBuilder;
       } else {
         p = new((void*) gvp) upcBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_upcBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1186_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      upcBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1186_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) upcBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1186_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) upcBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1186_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) upcBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1186_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      upcBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1186_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((upcBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1186_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) upcBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1186_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) upcBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1186_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) upcBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1186_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) upcBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef upcBuilder G__TupcBuilder;
static int G__Jevp_Cint_1186_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (upcBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((upcBuilder*) (soff+(sizeof(upcBuilder)*i)))->~G__TupcBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (upcBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((upcBuilder*) (soff))->~G__TupcBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vpdBuilder */
static int G__Jevp_Cint_1203_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vpdBuilder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vpdBuilder((JevpServer*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vpdBuilder((JevpServer*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new vpdBuilder[n];
       } else {
         p = new((void*) gvp) vpdBuilder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new vpdBuilder;
       } else {
         p = new((void*) gvp) vpdBuilder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_vpdBuilder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vpdBuilder*) G__getstructoffset())->ReadConfig();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((vpdBuilder*) G__getstructoffset())->pulserCh((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((vpdBuilder*) G__getstructoffset())->pulserChToIndex((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((vpdBuilder*) G__getstructoffset())->goodHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((vpdBuilder*) G__getstructoffset())->correctedTAC((StTriggerData2016*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vpdBuilder*) G__getstructoffset())->readParams();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string>* pobj;
         vector<string> xobj = ((vpdBuilder*) G__getstructoffset())->readTokenVector(*(TString*) libp->para[0].ref);
         pobj = new vector<string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         vector<int>* pobj;
         vector<int> xobj = ((vpdBuilder*) G__getstructoffset())->readIntVector(*(TString*) libp->para[0].ref, (int) G__int(libp->para[1]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         vector<int>* pobj;
         vector<int> xobj = ((vpdBuilder*) G__getstructoffset())->readIntVector(*(TString*) libp->para[0].ref);
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((vpdBuilder*) G__getstructoffset())->corrEast((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((vpdBuilder*) G__getstructoffset())->corrWest((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((vpdBuilder*) G__getstructoffset())->corrBin((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      vpdBuilder::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) vpdBuilder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vpdBuilder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) vpdBuilder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      vpdBuilder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vpdBuilder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vpdBuilder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vpdBuilder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vpdBuilder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1203_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vpdBuilder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vpdBuilder G__TvpdBuilder;
static int G__Jevp_Cint_1203_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vpdBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vpdBuilder*) (soff+(sizeof(vpdBuilder)*i)))->~G__TvpdBuilder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vpdBuilder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vpdBuilder*) (soff))->~G__TvpdBuilder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* JevpServerMain */
static int G__Jevp_Cint_1212_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JevpServerMain::main((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1212_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JevpServerMain::testDisplayDef((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1212_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JevpServerMain::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1212_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpServerMain::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1212_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JevpServerMain::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1212_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JevpServerMain::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1212_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const JevpServerMain*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1212_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpServerMain*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1212_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpServerMain*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1212_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpServerMain*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1212_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpServerMain::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1212_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JevpServerMain::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1212_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpServerMain::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1212_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JevpServerMain::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__Jevp_Cint_1212_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JevpServerMain *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JevpServerMain[n];
     } else {
       p = new((void*) gvp) JevpServerMain[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JevpServerMain;
     } else {
       p = new((void*) gvp) JevpServerMain;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_JevpServerMain));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Jevp_Cint_1212_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   JevpServerMain* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new JevpServerMain(*(JevpServerMain*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_JevpServerMain));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JevpServerMain G__TJevpServerMain;
static int G__Jevp_Cint_1212_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JevpServerMain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JevpServerMain*) (soff+(sizeof(JevpServerMain)*i)))->~G__TJevpServerMain();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JevpServerMain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JevpServerMain*) (soff))->~G__TJevpServerMain();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Jevp_Cint_1212_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JevpServerMain* dest = (JevpServerMain*) G__getstructoffset();
   *dest = *(JevpServerMain*) libp->para[0].ref;
   const JevpServerMain& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGTabElement2 */
static int G__Jevp_Cint_1304_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGTabElement2* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTabElement2(
(TGWindow*) G__int(libp->para[0]), (TGString*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]), (FontStruct_t) G__int(libp->para[5])
, (UInt_t) G__int(libp->para[6]), (Pixel_t) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) TGTabElement2(
(TGWindow*) G__int(libp->para[0]), (TGString*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]), (FontStruct_t) G__int(libp->para[5])
, (UInt_t) G__int(libp->para[6]), (Pixel_t) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTabElement2(
(TGWindow*) G__int(libp->para[0]), (TGString*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]), (FontStruct_t) G__int(libp->para[5])
, (UInt_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TGTabElement2(
(TGWindow*) G__int(libp->para[0]), (TGString*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]), (FontStruct_t) G__int(libp->para[5])
, (UInt_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTabElement2(
(TGWindow*) G__int(libp->para[0]), (TGString*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]), (FontStruct_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TGTabElement2(
(TGWindow*) G__int(libp->para[0]), (TGString*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]), (FontStruct_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTabElement2(
(TGWindow*) G__int(libp->para[0]), (TGString*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TGTabElement2(
(TGWindow*) G__int(libp->para[0]), (TGString*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (GContext_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTabElement2(
(TGWindow*) G__int(libp->para[0]), (TGString*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TGTabElement2(
(TGWindow*) G__int(libp->para[0]), (TGString*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTabElement2(
(TGWindow*) G__int(libp->para[0]), (TGString*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TGTabElement2(
(TGWindow*) G__int(libp->para[0]), (TGString*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTabElement2((TGWindow*) G__int(libp->para[0]), (TGString*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TGTabElement2((TGWindow*) G__int(libp->para[0]), (TGString*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTabElement2((TGWindow*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TGTabElement2((TGWindow*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TGTabElement2[n];
       } else {
         p = new((void*) gvp) TGTabElement2[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TGTabElement2;
       } else {
         p = new((void*) gvp) TGTabElement2;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_TGTabElement2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TGTabElement2*) G__getstructoffset())->GetText());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TGTabElement2*) G__getstructoffset())->GetString());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGTabElement2*) G__getstructoffset())->SetText((TGString*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TGTabElement2*) G__getstructoffset())->SetEnabled((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGTabElement2*) G__getstructoffset())->SetEnabled();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TGTabElement2*) G__getstructoffset())->IsEnabled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TGTabElement2*) G__getstructoffset())->ShowClose((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGTabElement2*) G__getstructoffset())->ShowClose();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TGTabElement2*) G__getstructoffset())->IsCloseShown());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TGTabElement2*) G__getstructoffset())->SetActive((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGTabElement2*) G__getstructoffset())->SetActive();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGTabElement2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGTabElement2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGTabElement2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGTabElement2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGTabElement2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGTabElement2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGTabElement2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGTabElement2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1304_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGTabElement2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGTabElement2 G__TTGTabElement2;
static int G__Jevp_Cint_1304_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGTabElement2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGTabElement2*) (soff+(sizeof(TGTabElement2)*i)))->~G__TTGTabElement2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGTabElement2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGTabElement2*) (soff))->~G__TTGTabElement2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGTab2 */
static int G__Jevp_Cint_1305_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) TGTab2::GetDefaultFontStruct());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TGGC& obj = TGTab2::GetDefaultGC();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGTab2*) G__getstructoffset())->HandleDisplayShift((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGTab2* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTab2(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (GContext_t) G__int(libp->para[3])
, (FontStruct_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, (Pixel_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) TGTab2(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (GContext_t) G__int(libp->para[3])
, (FontStruct_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, (Pixel_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTab2(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (GContext_t) G__int(libp->para[3])
, (FontStruct_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) TGTab2(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (GContext_t) G__int(libp->para[3])
, (FontStruct_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTab2(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (GContext_t) G__int(libp->para[3])
, (FontStruct_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TGTab2(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (GContext_t) G__int(libp->para[3])
, (FontStruct_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTab2(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (GContext_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TGTab2(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (GContext_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTab2(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TGTab2(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTab2((TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TGTab2((TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGTab2((TGWindow*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TGTab2((TGWindow*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TGTab2[n];
       } else {
         p = new((void*) gvp) TGTab2[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TGTab2;
       } else {
         p = new((void*) gvp) TGTab2;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TGTab2*) G__getstructoffset())->AddTab((TGString*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TGTab2*) G__getstructoffset())->AddTab((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGTab2*) G__getstructoffset())->AddTab((const char*) G__int(libp->para[0]), (TGCompositeFrame*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGTab2*) G__getstructoffset())->AddTab((TGString*) G__int(libp->para[0]), (TGCompositeFrame*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TGTab2*) G__getstructoffset())->NewTab((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGTab2*) G__getstructoffset())->NewTab();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TGTab2*) G__getstructoffset())->RemoveTab((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TGTab2*) G__getstructoffset())->RemoveTab((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGTab2*) G__getstructoffset())->RemoveTab();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((TGTab2*) G__getstructoffset())->SetTab((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TGTab2*) G__getstructoffset())->SetTab((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((TGTab2*) G__getstructoffset())->SetTab((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TGTab2*) G__getstructoffset())->SetTab((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TGTab2*) G__getstructoffset())->GetContainer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TGTab2*) G__getstructoffset())->GetCurrent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TGTab2*) G__getstructoffset())->GetTabContainer((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TGTab2*) G__getstructoffset())->GetTabContainer((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TGTab2*) G__getstructoffset())->GetTabTab((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TGTab2*) G__getstructoffset())->GetTabTab((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TGTab2*) G__getstructoffset())->GetCurrentContainer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TGTab2*) G__getstructoffset())->GetCurrentTab());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TGTab2*) G__getstructoffset())->GetTabHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TGTab2*) G__getstructoffset())->GetNumberOfTabs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TGTab2*) G__getstructoffset())->SetEnabled((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TGTab2*) G__getstructoffset())->SetEnabled((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TGTab2*) G__getstructoffset())->SetText((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGTab2*) G__getstructoffset())->SetText();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TGTab2*) G__getstructoffset())->IsEnabled((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGTab2*) G__getstructoffset())->CloseTab((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGTab2*) G__getstructoffset())->Removed((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGTab2*) G__getstructoffset())->Selected((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGTab2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGTab2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGTab2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGTab2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGTab2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGTab2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGTab2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGTab2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1305_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGTab2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGTab2 G__TTGTab2;
static int G__Jevp_Cint_1305_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGTab2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGTab2*) (soff+(sizeof(TGTab2)*i)))->~G__TTGTab2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGTab2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGTab2*) (soff))->~G__TTGTab2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGTabLayout2 */
static int G__Jevp_Cint_1306_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGTabLayout2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TGTabLayout2((TGTab2*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TGTabLayout2((TGTab2*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_TGTabLayout2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1306_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGTabLayout2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1306_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGTabLayout2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1306_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGTabLayout2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1306_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGTabLayout2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1306_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGTabLayout2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1306_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGTabLayout2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1306_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGTabLayout2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1306_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGTabLayout2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1306_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGTabLayout2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGTabLayout2 G__TTGTabLayout2;
static int G__Jevp_Cint_1306_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGTabLayout2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGTabLayout2*) (soff+(sizeof(TGTabLayout2)*i)))->~G__TTGTabLayout2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGTabLayout2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGTabLayout2*) (soff))->~G__TTGTabLayout2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* JevpViewer */
static int G__Jevp_Cint_1336_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const JevpViewer*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((JevpViewer*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((JevpViewer*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((JevpViewer*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((JevpViewer*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((JevpViewer*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((JevpViewer*) G__getstructoffset())->HighPriority((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((JevpViewer*) G__getstructoffset())->HighPriority((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((JevpViewer*) G__getstructoffset())->LowPriority((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((JevpViewer*) G__getstructoffset())->LowPriority((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__va_arg_buf G__va_arg_bufobj;
   G__va_arg_put(&G__va_arg_bufobj, libp, 2);
      ((JevpViewer*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), G__va_arg_bufobj);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Destroyed();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->ChangedBy((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->Message((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JevpViewer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new JevpViewer(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (char*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) JevpViewer(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (char*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_JevpViewer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->parseArgs((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->updateRunStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->updateServerTags();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->updateCurrentPlot();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->doMenu((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->ExitViewer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->refreshTimerFired();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JevpViewer::entryPoint((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JevpViewer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpViewer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JevpViewer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JevpViewer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpViewer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpViewer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JevpViewer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpViewer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1336_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JevpViewer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JevpViewer G__TJevpViewer;
static int G__Jevp_Cint_1336_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JevpViewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JevpViewer*) (soff+(sizeof(JevpViewer)*i)))->~G__TJevpViewer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JevpViewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JevpViewer*) (soff))->~G__TJevpViewer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CanvasFrame */
static int G__Jevp_Cint_1337_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CanvasFrame*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((CanvasFrame*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((CanvasFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((CanvasFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((CanvasFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((CanvasFrame*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__va_arg_buf G__va_arg_bufobj;
   G__va_arg_put(&G__va_arg_bufobj, libp, 2);
      ((CanvasFrame*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), G__va_arg_bufobj);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CanvasFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new CanvasFrame(
(TGWindow*) G__int(libp->para[0]), (EthClient*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) CanvasFrame(
(TGWindow*) G__int(libp->para[0]), (EthClient*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_CanvasFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->DoEvent((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TObject*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CanvasFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CanvasFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CanvasFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CanvasFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CanvasFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CanvasFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CanvasFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CanvasFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1337_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CanvasFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CanvasFrame G__TCanvasFrame;
static int G__Jevp_Cint_1337_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CanvasFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CanvasFrame*) (soff+(sizeof(CanvasFrame)*i)))->~G__TCanvasFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CanvasFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CanvasFrame*) (soff))->~G__TCanvasFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TabHelper */
static int G__Jevp_Cint_1340_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TabHelper*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TabHelper*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((TabHelper*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((TabHelper*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((TabHelper*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((TabHelper*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TabHelper*) G__getstructoffset())->HighPriority((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TabHelper*) G__getstructoffset())->HighPriority((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TabHelper*) G__getstructoffset())->LowPriority((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TabHelper*) G__getstructoffset())->LowPriority((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__va_arg_buf G__va_arg_bufobj;
   G__va_arg_put(&G__va_arg_bufobj, libp, 2);
      ((TabHelper*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), G__va_arg_bufobj);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Destroyed();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->ChangedBy((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->Message((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TabHelper* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TabHelper((JevpViewer*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TabHelper((JevpViewer*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_TabHelper));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->buildTabs((TGTab2*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->rebuildTabs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TabHelper*) G__getstructoffset())->getCurrentContainer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TabHelper*) G__getstructoffset())->deleteTab((TGTab2*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TabHelper*) G__getstructoffset())->deleteTab((TGTab2*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->fillTab((TGTab2*) G__int(libp->para[0]), (EthClient*) G__int(libp->para[1])
, (u_int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->tabSelected((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TabHelper::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TabHelper::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TabHelper::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TabHelper::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TabHelper*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TabHelper::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TabHelper::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TabHelper::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1340_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TabHelper::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TabHelper G__TTabHelper;
static int G__Jevp_Cint_1340_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TabHelper*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TabHelper*) (soff+(sizeof(TabHelper)*i)))->~G__TTabHelper();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TabHelper*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TabHelper*) (soff))->~G__TTabHelper();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* JevpPlotInfo */
static int G__Jevp_Cint_1341_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const JevpPlotInfo*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((JevpPlotInfo*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((JevpPlotInfo*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((JevpPlotInfo*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((JevpPlotInfo*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((JevpPlotInfo*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((JevpPlotInfo*) G__getstructoffset())->HighPriority((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((JevpPlotInfo*) G__getstructoffset())->HighPriority((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((JevpPlotInfo*) G__getstructoffset())->LowPriority((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((JevpPlotInfo*) G__getstructoffset())->LowPriority((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__va_arg_buf G__va_arg_bufobj;
   G__va_arg_put(&G__va_arg_bufobj, libp, 2);
      ((JevpPlotInfo*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), G__va_arg_bufobj);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Destroyed();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->ChangedBy((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->Message((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JevpPlotInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new JevpPlotInfo(
(CanvasFrame*) G__int(libp->para[0]), (EthClient*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) JevpPlotInfo(
(CanvasFrame*) G__int(libp->para[0]), (EthClient*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->DrawOnScreen();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JevpPlotInfo*) G__getstructoffset())->getPlotAtIdx((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JevpPlotInfo*) G__getstructoffset())->getDisplay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JevpPlotInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpPlotInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JevpPlotInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JevpPlotInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JevpPlotInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpPlotInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JevpPlotInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JevpPlotInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1341_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JevpPlotInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JevpPlotInfo G__TJevpPlotInfo;
static int G__Jevp_Cint_1341_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JevpPlotInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JevpPlotInfo*) (soff+(sizeof(JevpPlotInfo)*i)))->~G__TJevpPlotInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JevpPlotInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JevpPlotInfo*) (soff))->~G__TJevpPlotInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DummyFrame */
static int G__Jevp_Cint_1342_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const DummyFrame*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((DummyFrame*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((DummyFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((DummyFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((DummyFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((DummyFrame*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__va_arg_buf G__va_arg_bufobj;
   G__va_arg_put(&G__va_arg_bufobj, libp, 2);
      ((DummyFrame*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), G__va_arg_bufobj);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DummyFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new DummyFrame(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) DummyFrame(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_DummyFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DummyFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DummyFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DummyFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DummyFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DummyFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DummyFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DummyFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DummyFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1342_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DummyFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DummyFrame G__TDummyFrame;
static int G__Jevp_Cint_1342_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DummyFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DummyFrame*) (soff+(sizeof(DummyFrame)*i)))->~G__TDummyFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DummyFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DummyFrame*) (soff))->~G__TDummyFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ZoomFrame */
static int G__Jevp_Cint_1343_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ZoomFrame*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ZoomFrame*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((ZoomFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((ZoomFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((ZoomFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((ZoomFrame*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__va_arg_buf G__va_arg_bufobj;
   G__va_arg_put(&G__va_arg_bufobj, libp, 2);
      ((ZoomFrame*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), G__va_arg_bufobj);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ZoomFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ZoomFrame((TGWindow*) G__int(libp->para[0]), (JevpPlot*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ZoomFrame((TGWindow*) G__int(libp->para[0]), (JevpPlot*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_ZoomFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->exit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->expand();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->contract();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ZoomFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ZoomFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ZoomFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ZoomFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ZoomFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ZoomFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ZoomFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ZoomFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1343_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ZoomFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ZoomFrame G__TZoomFrame;
static int G__Jevp_Cint_1343_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ZoomFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ZoomFrame*) (soff+(sizeof(ZoomFrame)*i)))->~G__TZoomFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ZoomFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ZoomFrame*) (soff))->~G__TZoomFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyMainFrame */
static int G__Jevp_Cint_1344_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const MyMainFrame*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((MyMainFrame*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((MyMainFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((MyMainFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((MyMainFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((MyMainFrame*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MyMainFrame*) G__getstructoffset())->HighPriority((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyMainFrame*) G__getstructoffset())->HighPriority((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((MyMainFrame*) G__getstructoffset())->LowPriority((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((MyMainFrame*) G__getstructoffset())->LowPriority((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__va_arg_buf G__va_arg_bufobj;
   G__va_arg_put(&G__va_arg_bufobj, libp, 2);
      ((MyMainFrame*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), G__va_arg_bufobj);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Destroyed();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->ChangedBy((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->Message((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyMainFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyMainFrame(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) MyMainFrame(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_MyMainFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->buildTabs1();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->buildTabs2();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->DoTab((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->doMenu((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->DoButton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyMainFrame::example();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MyMainFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyMainFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MyMainFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MyMainFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MyMainFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyMainFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyMainFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MyMainFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1344_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyMainFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyMainFrame G__TMyMainFrame;
static int G__Jevp_Cint_1344_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyMainFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyMainFrame*) (soff+(sizeof(MyMainFrame)*i)))->~G__TMyMainFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyMainFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyMainFrame*) (soff))->~G__TMyMainFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DrawFrame */
static int G__Jevp_Cint_1345_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const DrawFrame*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((DrawFrame*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((DrawFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((DrawFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((DrawFrame*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((DrawFrame*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__va_arg_buf G__va_arg_bufobj;
   G__va_arg_put(&G__va_arg_bufobj, libp, 2);
      ((DrawFrame*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), G__va_arg_bufobj);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DrawFrame* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new DrawFrame(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (int) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) DrawFrame(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (int) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__Jevp_CintLN_DrawFrame));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->DoDraw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DrawFrame::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DrawFrame::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DrawFrame::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DrawFrame::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DrawFrame*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DrawFrame::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DrawFrame::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DrawFrame::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Jevp_Cint_1345_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DrawFrame::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DrawFrame G__TDrawFrame;
static int G__Jevp_Cint_1345_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DrawFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DrawFrame*) (soff+(sizeof(DrawFrame)*i)))->~G__TDrawFrame();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DrawFrame*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DrawFrame*) (soff))->~G__TDrawFrame();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* PlotHisto */

/* JevpPlot */

/* BuilderStatus */

/* JLatex */

/* JLine */

/* EvpMessage */

/* RunStatus */

/* JevpPlotSet */

/* JevpBuilder */

/* baseBuilder */

/* bbcBuilder */

/* bemcBuilder */

/* daqBuilder */

/* eemcBuilder */

/* epdBuilder */

/* etofBuilder */

/* fgtBuilder */

/* fmsBuilder */

/* fpdBuilder */

/* fpsBuilder */

/* fstBuilder */

/* gmtBuilder */

/* hltBuilder */

/* HltphiBuilder */

/* istBuilder */

/* itpcBuilder */

/* l3Builder */

/* l4Builder */

/* mtdBuilder */

/* ppBuilder */

/* pxlBuilder */

/* ssdBuilder */

/* tofBuilder */

/* tpcBuilder */

/* tpxBuilder */

/* trgBuilder */

/* upcBuilder */

/* vpdBuilder */

/* JevpServerMain */

/* TGTabElement2 */

/* TGTab2 */

/* TGTabLayout2 */

/* JevpViewer */

/* CanvasFrame */

/* TabHelper */

/* JevpPlotInfo */

/* DummyFrame */

/* ZoomFrame */

/* MyMainFrame */

/* DrawFrame */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncJevp_Cint {
 public:
  G__Sizep2memfuncJevp_Cint(): p(&G__Sizep2memfuncJevp_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncJevp_Cint::*p)();
};

size_t G__get_sizep2memfuncJevp_Cint()
{
  G__Sizep2memfuncJevp_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceJevp_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_PlotHisto))) {
     PlotHisto *G__Lderived;
     G__Lderived=(PlotHisto*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_PlotHisto),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot))) {
     JevpPlot *G__Lderived;
     G__Lderived=(JevpPlot*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_BuilderStatus))) {
     BuilderStatus *G__Lderived;
     G__Lderived=(BuilderStatus*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_BuilderStatus),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_JLatex))) {
     JLatex *G__Lderived;
     G__Lderived=(JLatex*)0x1000;
     {
       TLatex *G__Lpbase=(TLatex*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JLatex),G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TText *G__Lpbase=(TText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JLatex),G__get_linked_tagnum(&G__Jevp_CintLN_TText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JLatex),G__get_linked_tagnum(&G__Jevp_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JLatex),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JLatex),G__get_linked_tagnum(&G__Jevp_CintLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox2D *G__Lpbase=(TAttBBox2D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JLatex),G__get_linked_tagnum(&G__Jevp_CintLN_TAttBBox2D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JLatex),G__get_linked_tagnum(&G__Jevp_CintLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_JLine))) {
     JLine *G__Lderived;
     G__Lderived=(JLine*)0x1000;
     {
       TLine *G__Lpbase=(TLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JLine),G__get_linked_tagnum(&G__Jevp_CintLN_TLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JLine),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JLine),G__get_linked_tagnum(&G__Jevp_CintLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox2D *G__Lpbase=(TAttBBox2D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JLine),G__get_linked_tagnum(&G__Jevp_CintLN_TAttBBox2D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_EvpMessage))) {
     EvpMessage *G__Lderived;
     G__Lderived=(EvpMessage*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_EvpMessage),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_RunStatus))) {
     RunStatus *G__Lderived;
     G__Lderived=(RunStatus*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_RunStatus),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet))) {
     JevpPlotSet *G__Lderived;
     G__Lderived=(JevpPlotSet*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder))) {
     JevpBuilder *G__Lderived;
     G__Lderived=(JevpBuilder*)0x1000;
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_baseBuilder))) {
     baseBuilder *G__Lderived;
     G__Lderived=(baseBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_baseBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_baseBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_baseBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_bbcBuilder))) {
     bbcBuilder *G__Lderived;
     G__Lderived=(bbcBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_bbcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_bbcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_bbcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_bemcBuilder))) {
     bemcBuilder *G__Lderived;
     G__Lderived=(bemcBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_bemcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_bemcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_bemcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_daqBuilder))) {
     daqBuilder *G__Lderived;
     G__Lderived=(daqBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_daqBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_daqBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_daqBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_eemcBuilder))) {
     eemcBuilder *G__Lderived;
     G__Lderived=(eemcBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_eemcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_eemcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_eemcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_epdBuilder))) {
     epdBuilder *G__Lderived;
     G__Lderived=(epdBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_epdBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_epdBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_epdBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_etofBuilder))) {
     etofBuilder *G__Lderived;
     G__Lderived=(etofBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_etofBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_etofBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_etofBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_fgtBuilder))) {
     fgtBuilder *G__Lderived;
     G__Lderived=(fgtBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fgtBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fgtBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fgtBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_fmsBuilder))) {
     fmsBuilder *G__Lderived;
     G__Lderived=(fmsBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fmsBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fmsBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fmsBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_fpdBuilder))) {
     fpdBuilder *G__Lderived;
     G__Lderived=(fpdBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fpdBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fpdBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fpdBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_fpsBuilder))) {
     fpsBuilder *G__Lderived;
     G__Lderived=(fpsBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fpsBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fpsBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fpsBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_fstBuilder))) {
     fstBuilder *G__Lderived;
     G__Lderived=(fstBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fstBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fstBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fstBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_gmtBuilder))) {
     gmtBuilder *G__Lderived;
     G__Lderived=(gmtBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_gmtBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_gmtBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_gmtBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_hltBuilder))) {
     hltBuilder *G__Lderived;
     G__Lderived=(hltBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_hltBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_hltBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_hltBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_HltphiBuilder))) {
     HltphiBuilder *G__Lderived;
     G__Lderived=(HltphiBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_HltphiBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_HltphiBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_HltphiBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_istBuilder))) {
     istBuilder *G__Lderived;
     G__Lderived=(istBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_istBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_istBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_istBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_itpcBuilder))) {
     itpcBuilder *G__Lderived;
     G__Lderived=(itpcBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_itpcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_itpcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_itpcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_l3Builder))) {
     l3Builder *G__Lderived;
     G__Lderived=(l3Builder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_l3Builder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_l3Builder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_l3Builder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_l4Builder))) {
     l4Builder *G__Lderived;
     G__Lderived=(l4Builder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_l4Builder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_l4Builder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_l4Builder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_mtdBuilder))) {
     mtdBuilder *G__Lderived;
     G__Lderived=(mtdBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_mtdBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_mtdBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_mtdBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_ppBuilder))) {
     ppBuilder *G__Lderived;
     G__Lderived=(ppBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ppBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ppBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ppBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_pxlBuilder))) {
     pxlBuilder *G__Lderived;
     G__Lderived=(pxlBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_pxlBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_pxlBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_pxlBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_ssdBuilder))) {
     ssdBuilder *G__Lderived;
     G__Lderived=(ssdBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ssdBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ssdBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ssdBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_tofBuilder))) {
     tofBuilder *G__Lderived;
     G__Lderived=(tofBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_tofBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_tofBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_tofBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_tpcBuilder))) {
     tpcBuilder *G__Lderived;
     G__Lderived=(tpcBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_tpcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_tpcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_tpcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_tpxBuilder))) {
     tpxBuilder *G__Lderived;
     G__Lderived=(tpxBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_tpxBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_tpxBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_tpxBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_trgBuilder))) {
     trgBuilder *G__Lderived;
     G__Lderived=(trgBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_trgBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_trgBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_trgBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_upcBuilder))) {
     upcBuilder *G__Lderived;
     G__Lderived=(upcBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_upcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_upcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_upcBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_vpdBuilder))) {
     vpdBuilder *G__Lderived;
     G__Lderived=(vpdBuilder*)0x1000;
     {
       JevpBuilder *G__Lpbase=(JevpBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_vpdBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       JevpPlotSet *G__Lpbase=(JevpPlotSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_vpdBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_vpdBuilder),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_TGTabElement2))) {
     TGTabElement2 *G__Lderived;
     G__Lderived=(TGTabElement2*)0x1000;
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTabElement2),G__get_linked_tagnum(&G__Jevp_CintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTabElement2),G__get_linked_tagnum(&G__Jevp_CintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTabElement2),G__get_linked_tagnum(&G__Jevp_CintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTabElement2),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTabElement2),G__get_linked_tagnum(&G__Jevp_CintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2))) {
     TGTab2 *G__Lderived;
     G__Lderived=(TGTab2*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2),G__get_linked_tagnum(&G__Jevp_CintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2),G__get_linked_tagnum(&G__Jevp_CintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2),G__get_linked_tagnum(&G__Jevp_CintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2),G__get_linked_tagnum(&G__Jevp_CintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2),G__get_linked_tagnum(&G__Jevp_CintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWidget *G__Lpbase=(TGWidget*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2),G__get_linked_tagnum(&G__Jevp_CintLN_TGWidget),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_TGTabLayout2))) {
     TGTabLayout2 *G__Lderived;
     G__Lderived=(TGTabLayout2*)0x1000;
     {
       TGLayoutManager *G__Lpbase=(TGLayoutManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTabLayout2),G__get_linked_tagnum(&G__Jevp_CintLN_TGLayoutManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTabLayout2),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_JevpViewer))) {
     JevpViewer *G__Lderived;
     G__Lderived=(JevpViewer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpViewer),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_CanvasFrame))) {
     CanvasFrame *G__Lderived;
     G__Lderived=(CanvasFrame*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_CanvasFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_CanvasFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_CanvasFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_CanvasFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_CanvasFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_CanvasFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_TabHelper))) {
     TabHelper *G__Lderived;
     G__Lderived=(TabHelper*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TabHelper),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotInfo))) {
     JevpPlotInfo *G__Lderived;
     G__Lderived=(JevpPlotInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotInfo),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_DummyFrame))) {
     DummyFrame *G__Lderived;
     G__Lderived=(DummyFrame*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_DummyFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_DummyFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_DummyFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_DummyFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_DummyFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_DummyFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_ZoomFrame))) {
     ZoomFrame *G__Lderived;
     G__Lderived=(ZoomFrame*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ZoomFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ZoomFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ZoomFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ZoomFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ZoomFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ZoomFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ZoomFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_MyMainFrame))) {
     MyMainFrame *G__Lderived;
     G__Lderived=(MyMainFrame*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_MyMainFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__Jevp_CintLN_DrawFrame))) {
     DrawFrame *G__Lderived;
     G__Lderived=(DrawFrame*)0x1000;
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_DrawFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_DrawFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_DrawFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_DrawFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_DrawFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__Jevp_CintLN_DrawFrame),G__get_linked_tagnum(&G__Jevp_CintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableJevp_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 4 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 4 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Jevp_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Jevp_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Jevp_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Jevp_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__Jevp_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__Jevp_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__Jevp_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__Jevp_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__Jevp_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Jevp_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Jevp_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("GContext_t",107,-1,0,-1);
   G__setnewtype(-1,"Graphics context handle",0);
   G__search_typename2("FontStruct_t",107,-1,0,-1);
   G__setnewtype(-1,"Pointer to font structure",0);
   G__search_typename2("Pixel_t",107,-1,0,-1);
   G__setnewtype(-1,"Pixel value",0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Jevp_CintLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Jevp_CintLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__Jevp_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__Jevp_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__Jevp_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__Jevp_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("u_int",104,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<JevpPlot*>",117,G__get_linked_tagnum(&G__Jevp_CintLN_listlEJevpPlotmUcOallocatorlEJevpPlotmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("JevpPlotPtrList",117,G__get_linked_tagnum(&G__Jevp_CintLN_listlEJevpPlotmUcOallocatorlEJevpPlotmUgRsPgR),0,G__get_linked_tagnum(&G__Jevp_CintLN_fmsBuilder));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TH1*>",117,G__get_linked_tagnum(&G__Jevp_CintLN_maplEintcOTH1mUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TH1*,less<int> >",117,G__get_linked_tagnum(&G__Jevp_CintLN_maplEintcOTH1mUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TH1PtrMap",117,G__get_linked_tagnum(&G__Jevp_CintLN_maplEintcOTH1mUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH1mUgRsPgRsPgR),0,G__get_linked_tagnum(&G__Jevp_CintLN_fmsBuilder));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TriggerDataBlk",117,G__get_linked_tagnum(&G__Jevp_CintLN_TriggerDataBlk),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__Jevp_CintLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Jevp_CintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Jevp_CintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("bitset2D<NROW,NCOL>",117,G__get_linked_tagnum(&G__Jevp_CintLN_bitset2DlE928cO960gR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("bitset<928*960>",117,G__get_linked_tagnum(&G__Jevp_CintLN_bitsetlE890880gR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Jevp_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Jevp_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__Jevp_CintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__Jevp_CintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* PlotHisto */
static void G__setup_memvarPlotHisto(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_PlotHisto));
   { PlotHisto *p; p=(PlotHisto*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->histo)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1),-1,-1,1,"histo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->legendText)-(long)(p)),67,0,0,-1,-1,-1,1,"legendText=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->legendArgs)-(long)(p)),67,0,0,-1,-1,-1,1,"legendArgs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* JevpPlot */
static void G__setup_memvarJevpPlot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot));
   { JevpPlot *p; p=(JevpPlot*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->legend)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLegend),-1,-1,1,"legend=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->needsdata)-(long)(p)),105,0,0,-1,-1,-1,1,"needsdata=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->refid)-(long)(p)),105,0,0,-1,-1,-1,1,"refid=",0,"reference name, if any");
   G__memvar_setup((void*)((long)(&p->refcomment)-(long)(p)),67,0,0,-1,-1,-1,1,"refcomment=",0,"reference comment, if any");
   G__memvar_setup((void*)((long)(&p->optstat)-(long)(p)),105,0,0,-1,-1,-1,1,"optstat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->logx)-(long)(p)),105,0,0,-1,-1,-1,1,"logx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->logy)-(long)(p)),105,0,0,-1,-1,-1,1,"logy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->optlogz)-(long)(p)),105,0,0,-1,-1,-1,1,"optlogz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->palette)-(long)(p)),105,0,0,-1,-1,-1,1,"palette=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gridx)-(long)(p)),105,0,0,-1,-1,-1,1,"gridx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gridy)-(long)(p)),105,0,0,-1,-1,-1,1,"gridy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lastUpdate)-(long)(p)),105,0,0,-1,-1,-1,1,"lastUpdate=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nevts)-(long)(p)),105,0,0,-1,-1,-1,1,"nevts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->external_maxy)-(long)(p)),100,0,0,-1,-1,-1,1,"external_maxy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->external_miny)-(long)(p)),100,0,0,-1,-1,-1,1,"external_miny=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->legendx1)-(long)(p)),100,0,0,-1,-1,-1,1,"legendx1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->legendy1)-(long)(p)),100,0,0,-1,-1,-1,1,"legendy1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->legendx2)-(long)(p)),100,0,0,-1,-1,-1,1,"legendx2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->legendy2)-(long)(p)),100,0,0,-1,-1,-1,1,"legendy2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->histos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TList),-1,-1,1,"histos=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"xaxis_label=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"yaxis_label=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"parent=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nhistos=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"drawopts=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"myname[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TList),-1,-1,4,"elements=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BuilderStatus */
static void G__setup_memvarBuilderStatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_BuilderStatus));
   { BuilderStatus *p; p=(BuilderStatus*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->name)-(long)(p)),67,0,0,-1,-1,-1,1,"name=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->status)-(long)(p)),67,0,0,-1,-1,-1,1,"status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lastEventTime)-(long)(p)),105,0,0,-1,-1,-1,1,"lastEventTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->events)-(long)(p)),105,0,0,-1,-1,-1,1,"events=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* JLatex */
static void G__setup_memvarJLatex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JLatex));
   { JLatex *p; p=(JLatex*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ndcY=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ndcX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"jx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"jy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* JLine */
static void G__setup_memvarJLine(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JLine));
   { JLine *p; p=(JLine*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ndcY=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ndcX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"jx[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"jy[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EvpMessage */
static void G__setup_memvarEvpMessage(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_EvpMessage));
   { EvpMessage *p; p=(EvpMessage*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->source)-(long)(p)),67,0,0,-1,-1,-1,1,"source=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cmd)-(long)(p)),67,0,0,-1,-1,-1,1,"cmd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->args)-(long)(p)),67,0,0,-1,-1,-1,1,"args=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RunStatus */
static void G__setup_memvarRunStatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_RunStatus));
   { RunStatus *p; p=(RunStatus*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->status)-(long)(p)),67,0,0,-1,-1,-1,1,"status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->firstEvtTime)-(long)(p)),105,0,0,-1,-1,-1,1,"firstEvtTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->firstEvtNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"firstEvtNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lastEvtTime)-(long)(p)),105,0,0,-1,-1,-1,1,"lastEvtTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lastEvtNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"lastEvtNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nEvts)-(long)(p)),105,0,0,-1,-1,-1,1,"nEvts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeOfLastChange)-(long)(p)),105,0,0,-1,-1,-1,1,"timeOfLastChange=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* JevpPlotSet */
static void G__setup_memvarJevpPlotSet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet));
   { JevpPlotSet *p; p=(JevpPlotSet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->builderStatus)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_BuilderStatus),-1,-1,1,"builderStatus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dbgSourceLine)-(long)(p)),105,0,0,-1,-1,-1,1,"dbgSourceLine=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dbgCallSourceLine)-(long)(p)),105,0,0,-1,-1,-1,1,"dbgCallSourceLine=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dbgCallParam)-(long)(p)),105,0,0,-1,-1,-1,1,"dbgCallParam=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->startTime)-(long)(p)),108,0,0,-1,G__defined_typename("time_t"),-1,1,"startTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timelog_fd)-(long)(p)),105,0,0,-1,-1,-1,1,"timelog_fd=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->clientdatadir)-(long)(p)),67,0,0,-1,-1,-1,1,"clientdatadir=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->confdatadir)-(long)(p)),67,0,0,-1,-1,-1,1,"confdatadir=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->plotsetname)-(long)(p)),67,0,0,-1,-1,-1,1,"plotsetname=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xml)-(long)(p)),67,0,0,-1,-1,-1,1,"xml=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hello_cmds)-(long)(p)),67,0,0,-1,-1,-1,1,"hello_cmds=",0,"do I want to be base_client?  \"steal if so\"");
   G__memvar_setup((void*)((long)(&p->minEvts)-(long)(p)),105,0,0,-1,-1,-1,1,"minEvts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxEvts)-(long)(p)),105,0,0,-1,-1,-1,1,"maxEvts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->processingTimer)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_RtsTimer_root),-1,-1,1,"processingTimer=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->processingTime)-(long)(p)),100,0,0,-1,-1,-1,1,"processingTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numberOfEventsRun)-(long)(p)),105,0,0,-1,-1,-1,1,"numberOfEventsRun=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->plots)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_THashList),-1,-1,1,"plots=",0,"The plots built");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpServer),-1,-1,4,"parent=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"disabled=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"servertags[512]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"current_run=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"base_client=",0,"am I base client?");
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"diska=",0,"event pool path");
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"daqfile=",0,"data file / null for live");
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"pdf=",0,"direct pdf file output");
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"loglevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"buildxml=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"update_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"pause=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,4,"plotEvtsByTrigger=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,4,"plotTimeByTrigger=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,4,"plotTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"n_pertrg[64]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"avg_time_pertrg[64]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* JevpBuilder */
static void G__setup_memvarJevpBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder));
   { JevpBuilder *p; p=(JevpBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* baseBuilder */
static void G__setup_memvarbaseBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_baseBuilder));
   { baseBuilder *p; p=(baseBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->first_event)-(long)(p)),105,0,0,-1,-1,-1,1,"first_event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* bbcBuilder */
static void G__setup_memvarbbcBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_bbcBuilder));
   { bbcBuilder *p; p=(bbcBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_bbcBuildercLcL713),-1,-1,4,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,4,"plots=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* bemcBuilder */
static void G__setup_memvarbemcBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_bemcBuilder));
   { bemcBuilder *p; p=(bemcBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"statusfile[255]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"linesColor=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"crateMinSoftId[]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"crateMaxSoftId[]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"pmtbxMinSoftId[]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"pmtbxMaxSoftId[]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numPmtBoxes=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numBoxes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_StEmcDecoder),-1,-1,4,"BEMCDecoderPresenter=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* daqBuilder */
static void G__setup_memvardaqBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_daqBuilder));
   { daqBuilder *p; p=(daqBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"t_2min=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"t_10min=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"t_120min=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_daqBuildercLcL718),-1,-1,4,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* eemcBuilder */
static void G__setup_memvareemcBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_eemcBuilder));
   { eemcBuilder *p; p=(eemcBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"statusfile[255]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"MAPMHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"MAPMHitsCopy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,4,"plots[400]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* epdBuilder */
static void G__setup_memvarepdBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_epdBuilder));
   { epdBuilder *p; p=(epdBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"disable_builder=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_epdBuildercLcL726),-1,-1,4,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,4,"plots=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_epdBuildercLcLEPDAnalysisMap),-1,-1,4,"mEPDMap[2][12][32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* etofBuilder */
static void G__setup_memvaretofBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_etofBuilder));
   { etofBuilder *p; p=(etofBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"disable_builder=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_etofBuildercLcL732),-1,-1,4,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_etofBuildercLcL734),-1,-1,4,"extras=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,4,"plots=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"resetTimeLabel1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"resetTimeLabel2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"multCorrLabel1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"multCorrLabel2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"digiDensityLabel1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"digiDensityLabel2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_string),-1,-1,4,"resetTimeLabel1Text=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_string),-1,-1,4,"resetTimeLabel2Text=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nrOfGdpbInSys=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nrOfGbtxPerGdpb=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nrOfFeePerGbtx=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nrOfGet4PerFee=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nrOfChannelsPerGet4=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nrOfChannelsPerFee=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nrOfChannelsPerGbtx=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nrOfGet4PerGbtx=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nrOfChannelsPerGdpb=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"year=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"nEtofEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* fgtBuilder */
static void G__setup_memvarfgtBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fgtBuilder));
   { fgtBuilder *p; p=(fgtBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"projX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TRandom),-1,-1,4,"tRnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"evtCt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"t_2min=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"t_10min=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"t_120min=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__Jevp_CintLN_string),-1,-2,4,"Gid2Label[24]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-2,4,"Indx2Gid[24]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-2,4,"Gid2Indx[24]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-2,4,"Gid2Disk[24]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_fgtBuildercLcL739),-1,-1,4,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_fgtBuildercLcL741),-1,-1,4,"tbVsAdcContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_fgtBuildercLcL743),-1,-1,4,"hContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_fgtBuildercLcL745),-1,-1,4,"hSumContents=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"maxC=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"maxA=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"maxPedVal=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"maxRMSVal=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"minPedVal=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"minRMSVal=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numRDO=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numAPV=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numARM=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"goodChCut=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"np=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nTbVsAdc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"hNp=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"hSNp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,4,"plots=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_daq_dta),-1,-1,4,"dd=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"meanVals[33600]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"oldStdDevs[33600]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"aVals[33600]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"numVals[33600]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"numOverOneSig[33600]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isChannelBad[33600]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"runningAvg[33600]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"runningStdDevSq[33600]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"chCntDaq[2][6][24]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"sumHistogramsFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JLatex),-1,-1,4,"errorMsg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* fmsBuilder */
static void G__setup_memvarfmsBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fmsBuilder));
   { fmsBuilder *p; p=(fmsBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_listlEJevpPlotmUcOallocatorlEJevpPlotmUgRsPgR),G__defined_typename("JevpPlotPtrList"),-1,2,"mPlots=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_maplEintcOTH1mUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH1mUgRsPgRsPgR),G__defined_typename("TH1PtrMap"),-1,2,"mHists=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nstb_map[5][353]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"chan_map[5][353]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"row_map[5][353]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"col_map[5][353]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,2,"hitmap[2][2]=",0,"[kLarge/kSmall] [kADC/kLED]");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"crate=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"index=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,-1,-1,2,"adc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"detid=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nstb=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"cellchan=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"row=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"col=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* fpdBuilder */
static void G__setup_memvarfpdBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fpdBuilder));
   { fpdBuilder *p; p=(fpdBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_fpdBuildercLcL783),-1,-1,4,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,4,"plots=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* fpsBuilder */
static void G__setup_memvarfpsBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fpsBuilder));
   { fpsBuilder *p; p=(fpsBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_daq_dta),-1,-1,4,"dd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"t_2min=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"pre_trig=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"evt=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_fpsBuildercLcL786),-1,-1,4,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xypos[23]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* fstBuilder */
static void G__setup_memvarfstBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fstBuilder));
   { fstBuilder *p; p=(fstBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"projX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TRandom),-1,-1,4,"tRnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"evtCt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"evtCt_nonZS=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"evtCt_ZS=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"t_2min=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"t_10min=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"t_120min=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"totDisk=3LL",0,"1 disk per crate");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"totRdo=6LL",0,"2 rdos * 3 crates");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"totArm=18LL",0,"3 arms * 2 rdos * 3 crates");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"totMod=36LL",0,"12 modules * 3 disks (6 modules * 6 rdos)");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"totSec=72LL",0,"2 sections * 12 moudles * 3 disks");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"totSensor=144LL",0,"2 sensors (inner: 0-1 & outer: 2-3) * 2 sections * 12 moudles * 3 disks");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"totAPV=288LL",0,"8 APV chips * 12 modules * 3 disks");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"totCh=36864LL",0,"128 channels * 288 APV chips");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"RdoPerDisk=2LL",0,"per disk");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ArmPerDisk=6LL",0,"per disk");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ModPerDisk=12LL",0,"per disk");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"SecPerDisk=24LL",0,"2 (SecPerMod) * 2 (PortPerArm) * 3 (ArmPerRdo) * 2 (RdoPerDisk)");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ArmPerRdo=3LL",0,"per RDO");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ModPerRdo=6LL",0,"per RDO");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"SecPerRdo=12LL",0,"2 (SecPerMod) * 2 (PortPerArm) * 3 (ArmPerRdo)");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"PortPerArm=2LL",0,"per ARM");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ModPerArm=2LL",0,"per ARM");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"SecPerArm=4LL",0,"2 (SecPerMod) * 2 (PortPerArm)");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"SecPerMod=2LL",0,"per module");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"SensorPerMod=4LL",0,"per module");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"RstripPerMod=8LL",0,"per module: 0-3 for inner section | 4-7 for outer section");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"PhiSegPerMod=128LL",0,"per module");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ChPerApv=128LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ApvPerSensor=2LL",0,"sensor0: APV0&1 | sensor1: APV2&3 | sensor2: APV4&5 | sensor3: APV6&7");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ChPerSensor=256LL",0,"128 channels * 2 APV chips");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ApvPerSec=4LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ChPerSec=512LL",0,"128 channels * 4 APV chips");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ApvPerMod=8LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ChPerMod=1024LL",0,"128 channels * 8 APV chips");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ApvPerPort=8LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ChPerPort=1024LL",0,"128 channels * 8 APV chips");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ApvPerArm=16LL",0,"8 APV chips * 2 modules | APV number: port0: 0-7 & port1: 12-19");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ChPerArm=2048LL",0,"128 channels * 16 APV chips");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ApvPerRdo=48LL",0,"8 APV chips * 6 modules");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ChPerRdo=6144LL",0,"128 channels * 48 APV chips");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ApvPerDisk=96LL",0,"8 APV chips * 12 modules");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ChPerDisk=12288LL",0,"128 channels * 96 APV chips");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ApvNumOffset=12LL",0,"APV RO number same as IST | used for APV number convertion");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ApvRoPerPort=12LL",0,"APV RO number same as IST");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ApvRoPerArm=24LL",0,"APV RO number same as IST");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numTimeBin=3LL",0,"to be decided");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"goodChCut=64LL",0,"to be decided");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"minPedVal=200LL",0,"to be decided");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"maxPedVal=3000LL",0,"to be decided");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"minRMSVal=10LL",0,"to be decided");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"maxRMSVal=60LL",0,"to be decided");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"minRanVal=8LL",0,"to be decided");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"maxRanVal=60LL",0,"to be decided");
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"minMipMpv_ZS=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"minMipMpv_nonZS=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"maxMipMpv=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"minMipSigma_ZS=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"minMipSigma_nonZS=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"maxMipSigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"maxTbFracOK=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"landauFit_dn=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"landauFit_up=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"cmnCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"hitCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"zsCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"noiseChipCut=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hitOccupancyCut=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"defTb=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-2,4,"zFilp[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-2,4,"zDirct[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"phiStart[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"phiStop[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"phiDelta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"rStart[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"rStop[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"rDelta=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fstGeomMapping[36864]=",0,"FST channel mapping (electronics ID to geometry ID transform)");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fstElecMapping[36864]=",0,"FST channel mapping (geometry ID & electronics ID transform)");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"tableFound=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fstPedestal[3][36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fstRmsNoise[3][36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fstRanNoise[3][36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_fstBuildercLcL789),-1,-1,4,"hAdcContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_fstBuildercLcL791),-1,-1,4,"hMultContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_fstBuildercLcL793),-1,-1,4,"hHitMapContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_fstBuildercLcL795),-1,-1,4,"hTbVsAdcContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_fstBuildercLcL797),-1,-1,4,"hEventSumContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_fstBuildercLcL799),-1,-1,4,"hMipContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_fstBuildercLcL801),-1,-1,4,"hMaxTimeBinContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_fstBuildercLcL803),-1,-1,4,"hSumContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_fstBuildercLcL805),-1,-1,4,"hCmnTemp=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mAdcHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMultHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mHitMapHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mTbVsAdcHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mEventSumHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMipHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMaxTimeBinHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mSumHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,4,"plots=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_daq_dta),-1,-1,4,"dd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"numVals[36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"aVals[36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"numOverOneSig[36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,-1,-1,4,"maxAdc[36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"maxTimeBin[36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,-1,-1,4,"maxAdc_zs[36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"maxTimeBin_zs[36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"runningAvg[36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"runningStdDevSq[36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"sumAdc[36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"sum2Adc[36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"couAdc[36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"oldStdDevs[36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ranStdDevs[36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cmNoise[288][4]=",0,"each APV has 4 groups of CMN");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isChannelBad[36864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isNoisyApv[288]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"chCntDaq[6][3][16]=",0,"num RDOs, ARM, APV, keep track of channel count per apv");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"apvCntDaq[72]=",0,"sectors");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nExpectedChip_Sec[72]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"sumHistogramsFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"numTb=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JLatex),-1,-1,4,"errorMsg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* gmtBuilder */
static void G__setup_memvargmtBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_gmtBuilder));
   { gmtBuilder *p; p=(gmtBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"evtCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_gmtBuildercLcL807),-1,-1,4,"hPedContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_gmtBuildercLcL809),-1,-1,4,"hSignalContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_gmtBuildercLcL811),-1,-1,4,"hTimebinContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_gmtBuildercLcL813),-1,-1,4,"hSumContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_gmtBuildercLcL815),-1,-1,4,"hSigtbContents=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ADCcut=760LL",0,"Can be changed ");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numLayers=8LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numRDOs=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numARMs=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numPORTs=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numAPVs=16LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numChannels=128LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numTimebins=15LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nped=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nsig=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ntb=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nsum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"channel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"timebin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ch_seq=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"adc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,4,"plots=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_daq_dta),-1,-1,4,"dd=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"SignalPedCorrected[2][2][16][128][15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"SumSignalPedCorrected[15][8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sumSignal_AllChambers[15]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sumSignal_AllTimebins[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JLatex),-1,-1,4,"errorMsg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* hltBuilder */
static void G__setup_memvarhltBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_hltBuilder));
   { hltBuilder *p; p=(hltBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->last_time)-(long)(p)),105,0,0,-1,-1,-1,1,"last_time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nHours)-(long)(p)),102,0,0,-1,-1,-1,1,"nHours=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HltPlots)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"HltPlots[156]=",0,"was 144 //was 132 //was 110 //was 54");
   G__memvar_setup((void*)((long)(&p->cVz1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cVz1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cVz2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cVz2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cVz3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cVz3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cVz4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cVz4=",0,"plot1-plot4");
   G__memvar_setup((void*)((long)(&p->cVx1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cVx1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cVx2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cVx2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cVx3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cVx3=",0,"plot5-plot8");
   G__memvar_setup((void*)((long)(&p->cVy1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cVy1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cVy2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cVy2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cVy3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cVy3=",0,"plot9-plot12");
   G__memvar_setup((void*)((long)(&p->cVr1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cVr1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cVr2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cVr2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cVr3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cVr3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cVr4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cVr4=",0,"plot13-plot16");
   G__memvar_setup((void*)((long)(&p->tot_Vxy1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"tot_Vxy1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_Vxy2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"tot_Vxy2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_Vxy3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"tot_Vxy3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_Vxy4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"tot_Vxy4=",0,"plot17-plot20");
   G__memvar_setup((void*)((long)(&p->cM1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cM1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cM2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cM2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cM3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cM3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cM4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"cM4=",0,"plot21-plot24");
   G__memvar_setup((void*)((long)(&p->Vz1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Vz1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vz2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Vz2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vz3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Vz3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vz4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Vz4=",0,"plot1-plot4");
   G__memvar_setup((void*)((long)(&p->Vx1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Vx1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vx2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Vx2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vx3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Vx3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vx4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Vx4=",0,"plot5-plot8");
   G__memvar_setup((void*)((long)(&p->Vy1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Vy1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vy2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Vy2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vy3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Vy3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vy4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Vy4=",0,"plot9-plot12");
   G__memvar_setup((void*)((long)(&p->Vr1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Vr1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vr2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Vr2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vr3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Vr3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vr4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Vr4=",0,"plot13-plot16");
   G__memvar_setup((void*)((long)(&p->Vxy1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"Vxy1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vxy2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"Vxy2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vxy3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"Vxy3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Vxy4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"Vxy4=",0,"plot17-plot20");
   G__memvar_setup((void*)((long)(&p->Mult1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Mult1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Mult2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Mult2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Mult3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Mult3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Mult4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Mult4=",0,"plot21-plot24");
   G__memvar_setup((void*)((long)(&p->Eta1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Eta1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Eta2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Eta2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Eta3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Eta3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Eta4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Eta4=",0,"plot26-plot28");
   G__memvar_setup((void*)((long)(&p->Timevsmultiplicity)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"Timevsmultiplicity=",0,"plot29");
   G__memvar_setup((void*)((long)(&p->Ratevsmultiplicity)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"Ratevsmultiplicity=",0,"plot30");
   G__memvar_setup((void*)((long)(&p->v2_pt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TProfile),-1,-1,1,"v2_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->v2ptCounter)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"v2ptCounter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->resolution)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TProfile),-1,-1,1,"resolution=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->corrected_v2_pt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TProfile),-1,-1,1,"corrected_v2_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->corrected_v2ptCounter)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"corrected_v2ptCounter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dedx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"dedx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->piplus)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"piplus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->piminus)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"piminus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->kplus)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"kplus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->kminus)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"kminus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pplus)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"pplus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pminus)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"pminus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Yield)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"Yield=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->corrected_Yield)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"corrected_Yield=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hbtnum)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"hbtnum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hbtden)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"hbtden=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hbtCF_qinv)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"hbtCF_qinv=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BEMC_1a)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"BEMC_1a=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BEMC_2a)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"BEMC_2a=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BEMC_3a)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"BEMC_3a=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BEMC_4a)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"BEMC_4a=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BEMC_1b)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"BEMC_1b=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BEMC_2b)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"BEMC_2b=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BEMC_3b)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"BEMC_3b=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BEMC_4b)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"BEMC_4b=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BEMC_1c)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"BEMC_1c=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BEMC_2c)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"BEMC_2c=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BEMC_3c)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"BEMC_3c=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BEMC_4c)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"BEMC_4c=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BEMC_1d)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"BEMC_1d=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BEMC_2d)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"BEMC_2d=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BEMC_3d)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"BEMC_3d=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BEMC_4d)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"BEMC_4d=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_cVz1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cVz1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_cVz2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cVz2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_cVz3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cVz3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_cVz4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cVz4=",0,"plot1-plot4");
   G__memvar_setup((void*)((long)(&p->tot_cVx1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cVx1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_cVx2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cVx2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_cVx3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cVx3=",0,"plot5-plot8");
   G__memvar_setup((void*)((long)(&p->tot_cVy1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cVy1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_cVy2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cVy2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_cVy3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cVy3=",0,"plot9-plot12");
   G__memvar_setup((void*)((long)(&p->tot_cVr1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cVr1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_cVr2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cVr2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_cVr3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cVr3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_cVr4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cVr4=",0,"plot13-plot16");
   G__memvar_setup((void*)((long)(&p->tot_cM1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cM1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_cM2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cM2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_cM3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cM3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_cM4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_cM4=",0,"plot21-plot24");
   G__memvar_setup((void*)((long)(&p->tot_Timevsmultiplicity)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"tot_Timevsmultiplicity=",0,"plot29");
   G__memvar_setup((void*)((long)(&p->tot_Ratevsmultiplicity)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"tot_Ratevsmultiplicity=",0,"plot30");
   G__memvar_setup((void*)((long)(&p->tot_v2_pt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TProfile),-1,-1,1,"tot_v2_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_v2ptCounter)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_v2ptCounter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_resolution)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TProfile),-1,-1,1,"tot_resolution=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_corrected_v2_pt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TProfile),-1,-1,1,"tot_corrected_v2_pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_corrected_v2ptCounter)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_corrected_v2ptCounter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_dedx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"tot_dedx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_piplus)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_piplus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_piminus)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_piminus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_kplus)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_kplus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_kminus)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_kminus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_pplus)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_pplus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_pminus)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_pminus=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_Yield)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_Yield=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_corrected_Yield)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_corrected_Yield=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_hbtnum)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_hbtnum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_hbtden)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_hbtden=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tot_hbtCF_qinv)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"tot_hbtCF_qinv=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cVz1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cVz1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cVz2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cVz2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cVz3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cVz3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cVz4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cVz4=",0,"plot1-plot4");
   G__memvar_setup((void*)((long)(&p->periodic_cVx1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cVx1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cVx2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cVx2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cVx3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cVx3=",0,"plot5-plot8");
   G__memvar_setup((void*)((long)(&p->periodic_cVy1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cVy1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cVy2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cVy2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cVy3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cVy3=",0,"plot9-plot12");
   G__memvar_setup((void*)((long)(&p->periodic_cVr1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cVr1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cVr2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cVr2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cVr3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cVr3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cVr4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cVr4=",0,"plot13-plot16");
   G__memvar_setup((void*)((long)(&p->periodic_cVxy1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"periodic_cVxy1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cVxy2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"periodic_cVxy2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cVxy3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"periodic_cVxy3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cVxy4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,1,"periodic_cVxy4=",0,"plot17-plot20");
   G__memvar_setup((void*)((long)(&p->periodic_cM1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cM1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cM2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cM2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cM3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cM3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->periodic_cM4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"periodic_cM4=",0,"plot21-plot24");
   G__memvar_setup((void*)((long)(&p->setD_singlerun_cVz1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setD_singlerun_cVz1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setD_singlerun_cVz2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setD_singlerun_cVz2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setD_singlerun_cVz3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setD_singlerun_cVz3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setD_singlerun_cVz4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setD_singlerun_cVz4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setD_periodic_cVz1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setD_periodic_cVz1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setD_periodic_cVz2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setD_periodic_cVz2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setD_periodic_cVz3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setD_periodic_cVz3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setD_periodic_cVz4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setD_periodic_cVz4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setD_accumulated_cVz1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setD_accumulated_cVz1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setD_accumulated_cVz2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setD_accumulated_cVz2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setD_accumulated_cVz3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setD_accumulated_cVz3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setD_accumulated_cVz4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setD_accumulated_cVz4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FILL_VPD_HISTOS)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"FILL_VPD_HISTOS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setE_singlerun_cVz1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setE_singlerun_cVz1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setE_singlerun_cVz2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setE_singlerun_cVz2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setE_singlerun_cVz3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setE_singlerun_cVz3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setE_singlerun_cVz4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setE_singlerun_cVz4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setE_periodic_cVz1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setE_periodic_cVz1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setE_periodic_cVz2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setE_periodic_cVz2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setE_periodic_cVz3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setE_periodic_cVz3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setE_periodic_cVz4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setE_periodic_cVz4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setE_accumulated_cVz1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setE_accumulated_cVz1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setE_accumulated_cVz2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setE_accumulated_cVz2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setE_accumulated_cVz3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setE_accumulated_cVz3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->setE_accumulated_cVz4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,1,"setE_accumulated_cVz4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NO_CUTS_VERTEX)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"NO_CUTS_VERTEX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->VzLT200_VxLT2_VyLT2_VERTEX)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"VzLT200_VxLT2_VyLT2_VERTEX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->VxLT2_VyLT2_VERTEX)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"VxLT2_VyLT2_VERTEX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->VzLT70_VxLT2_VyLT2_VERTEX)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"VzLT70_VxLT2_VyLT2_VERTEX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->VzLT70_VxGT2_VyGT2_VERTEX)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"VzLT70_VxGT2_VyGT2_VERTEX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->VrLT2_VERTEX)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"VrLT2_VERTEX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->VzLT70_VERTEX)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"VzLT70_VERTEX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PRIM_TRACK_GT5_MULT)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"PRIM_TRACK_GT5_MULT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NO_CUTS_BEMC)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"NO_CUTS_BEMC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eGT20_wGT20_BEMC)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"eGT20_wGT20_BEMC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eGT20_wGT20_diffLT6_BEMC)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"eGT20_wGT20_diffLT6_BEMC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eGT1_wGT1_BEMC)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"eGT1_wGT1_BEMC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eGT20_wGT20_diffLT6_bbcGT100_BEMC)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"eGT20_wGT20_diffLT6_bbcGT100_BEMC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mPion)-(long)(p)),100,0,0,-1,-1,-1,1,"mPion=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mKaon)-(long)(p)),100,0,0,-1,-1,-1,1,"mKaon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mProton)-(long)(p)),100,0,0,-1,-1,-1,1,"mProton=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nhbtmixing)-(long)(p)),105,0,0,-1,-1,-1,1,"Nhbtmixing=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NmultMixingBins)-(long)(p)),105,0,0,-1,-1,-1,1,"NmultMixingBins=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NvertexMixingBins)-(long)(p)),105,0,0,-1,-1,-1,1,"NvertexMixingBins=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vmb)-(long)(p)),105,0,0,-1,-1,-1,1,"vmb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mmb)-(long)(p)),105,0,0,-1,-1,-1,1,"mmb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UPDATE_SWITCH)-(long)(p)),105,0,0,-1,-1,-1,1,"UPDATE_SWITCH=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->multRange)-(long)(p)),100,0,0,-1,-1,-1,1,"multRange=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vertRange)-(long)(p)),100,0,0,-1,-1,-1,1,"vertRange=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hbt_buffer)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_hltBuildercLcLhbt_event_info),-1,-1,1,"hbt_buffer[1][3][3]=",0,"initialize Nhbtmixing to the size of the first array index, NvertexMixingBins to second index, NmultMixingBins to third index");
   G__memvar_setup((void*)((long)(&p->hbt_current)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_hltBuildercLcLhbt_event_info),-1,-1,1,"hbt_current=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventCuts)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_hltBuildercLcLeventCut_info),-1,-1,1,"eventCuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->multTrackCuts)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_hltBuildercLcLtrackCut_info),-1,-1,1,"multTrackCuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->v2ptTrackCuts)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_hltBuildercLcLtrackCut_info),-1,-1,1,"v2ptTrackCuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptSpectraTrackCuts)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_hltBuildercLcLtrackCut_info),-1,-1,1,"ptSpectraTrackCuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hbtTrackCuts)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_hltBuildercLcLtrackCut_info),-1,-1,1,"hbtTrackCuts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventCounter)-(long)(p)),105,0,0,-1,-1,-1,1,"eventCounter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HBTCALC)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"HBTCALC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->V2CALC)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"V2CALC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HltphiBuilder */
static void G__setup_memvarHltphiBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_HltphiBuilder));
   { HltphiBuilder *p; p=(HltphiBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->current_day)-(long)(p)),104,0,0,-1,-1,-1,1,"current_day=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->twopi)-(long)(p)),100,0,0,-1,-1,-1,1,"twopi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pi)-(long)(p)),100,0,0,-1,-1,-1,1,"pi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->res2)-(long)(p)),100,0,0,-1,-1,-1,1,"res2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->res2error)-(long)(p)),100,0,0,-1,-1,-1,1,"res2error=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Currentrun)-(long)(p)),99,0,0,-1,-1,-1,1,"Currentrun[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->label)-(long)(p)),99,0,0,-1,-1,-1,1,"label[60]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->str)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_string),-1,-1,1,"str[60]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->flowphi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TObjArray),-1,-1,1,"flowphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TempFlowPhi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,1,"TempFlowPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TempFlowPhiWgt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,1,"TempFlowPhiWgt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->InvMassv2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH3D),-1,-1,1,"InvMassv2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->InvMassv2_Sin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH3D),-1,-1,1,"InvMassv2_Sin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DenInvMass)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH3D),-1,-1,1,"DenInvMass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"run[46]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->day)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"day[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->all)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"all[31]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nbin)-(long)(p)),105,0,0,-1,-1,-1,1,"nbin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* istBuilder */
static void G__setup_memvaristBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_istBuilder));
   { istBuilder *p; p=(istBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"projX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TRandom),-1,-1,4,"tRnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"evtCt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"t_2min=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"t_10min=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"t_120min=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"totSec=72LL",0,"24 ladders * 3 sections");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"totSensor=144LL",0,"24 ladders * 6 sensors");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ChPerSec=1536LL",0,"channels/section - 128 channels * 12 APV chips");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ChPerSensor=768LL",0,"128 channels * 6 APV chips");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ApvPerSec=12LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ChPerLadder=4608LL",0,"channels/section - 128 channels * 12 APV chips");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ApvPerLadder=36LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ChPerApv=128LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"totCh=110592LL",0,"Total channels in IST - totSec*ChPerSec");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"totAPV=864LL",0,"Total APVs in IST - totSec*12");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numRDO=6LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numARM=6LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numAPV=24LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numLadder=24LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numSensor=6LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numColumn=12LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numRow=64LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"numTimeBin=9LL",0,"update from 7 to 9: YPWANG 25/1/2014");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"goodChCut=64LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"minPedVal=200LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"maxPedVal=2000LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"minRMSVal=12LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"maxRMSVal=40LL",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"minMipMpv_ZS=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"minMipMpv_nonZS=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"maxMipMpv=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"minMipSigma_ZS=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"minMipSigma_nonZS=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"maxMipSigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"maxTbFracOK=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"landauFit_dn=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"landauFit_up=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"cmnCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"hitCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,1,-1,-1,-2,4,"noiseChipCut=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hitOccupancyCut=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"istMapping[110592]=",0,"IST channel mapping (electronics ID to geometry ID transform)");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"istElecMapping[110592]=",0,"IST channel mapping (geometry ID & electronics ID transform)");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"tableFound=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"istPedestal[110592]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"istRmsNoise[110592]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_istBuildercLcL1088),-1,-1,4,"hAdcContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_istBuildercLcL1090),-1,-1,4,"hMultContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_istBuildercLcL1092),-1,-1,4,"hHitMapContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_istBuildercLcL1094),-1,-1,4,"hTbVsAdcContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_istBuildercLcL1096),-1,-1,4,"hEventSumContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_istBuildercLcL1098),-1,-1,4,"hMipContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_istBuildercLcL1100),-1,-1,4,"hMaxTimeBinContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_istBuildercLcL1102),-1,-1,4,"hSumContents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_istBuildercLcL1104),-1,-1,4,"hCmnTemp=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mAdcHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMultHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mHitMapHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mTbVsAdcHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mEventSumHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMipHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMaxTimeBinHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mSumHist=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,4,"plots=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_daq_dta),-1,-1,4,"dd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"numVals[110592]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"aVals[110592]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"numOverOneSig[110592]=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,-1,-1,4,"maxAdc[110592]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"maxTimeBin[110592]=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,-1,-1,4,"maxAdc_zs[110592]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"maxTimeBin_zs[110592]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"runningAvg[110592]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"runningStdDevSq[110592]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"oldStdDevs[110592]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"meanVals[110592]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cmNoise[864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isChannelBad[110592]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isNoisyApv[864]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"chCntDaq[6][6][24]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"apvCntDaq[72]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nExpectedChip_Sec[72]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"sumHistogramsFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"numTb=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JLatex),-1,-1,4,"errorMsg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* itpcBuilder */
static void G__setup_memvaritpcBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_itpcBuilder));
   { itpcBuilder *p; p=(itpcBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nlasers)-(long)(p)),105,0,0,-1,-1,-1,1,"nlasers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->drift_vel)-(long)(p)),100,0,0,-1,-1,-1,1,"drift_vel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"n_cld=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"n_adc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"event_no=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_itpcBuildercLcL1107),-1,-1,4,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_itpcBuildercLcL1109),-1,-1,4,"extras=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mPhiAngleMap[24][45][182]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_LaserReader),-1,-1,4,"laserReader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* l3Builder */
static void G__setup_memvarl3Builder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_l3Builder));
   { l3Builder *p; p=(l3Builder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_l3BuildercLcL1112),-1,-1,4,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* l4Builder */
static void G__setup_memvarl4Builder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_l4Builder));
   { l4Builder *p; p=(l4Builder*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(4096).Format("nHltPlots=%lldLL",(long long)l4Builder::nHltPlots).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HltPlots)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"HltPlots[61]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BeamPlots)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"BeamPlots[3]=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(4096).Format("nBesGoodPlots=%lldLL",(long long)l4Builder::nBesGoodPlots).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BesGoodPlots)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"BesGoodPlots[10]=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(4096).Format("nHLTGood2Plots=%lldLL",(long long)l4Builder::nHLTGood2Plots).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HLTGood2Plots)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"HLTGood2Plots[6]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BesMonitorPlots)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"BesMonitorPlots[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FixedTargetPlots)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"FixedTargetPlots[12]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FixedTargetMonitorPlots)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"FixedTargetMonitorPlots[6]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HeavyFragmentPlots)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"HeavyFragmentPlots[1]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DiElectronPlots)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"DiElectronPlots[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DiElectron2TwrPlots)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"DiElectron2TwrPlots[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DiPionPlots)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"DiPionPlots[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DiMuonPlots)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"DiMuonPlots[14]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UPCDiElectronPlots)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"UPCDiElectronPlots[10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HltPlots_UPC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"HltPlots_UPC[30]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ph)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_PlotHisto),-1,-1,1,"ph=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventCounter)-(long)(p)),105,0,0,-1,-1,-1,1,"eventCounter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Currentrun)-(long)(p)),99,0,0,-1,-1,-1,1,"Currentrun[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CurrentNtuple)-(long)(p)),99,0,0,-1,-1,-1,1,"CurrentNtuple[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Currentdir)-(long)(p)),99,0,0,-1,-1,-1,1,"Currentdir[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Destindir_dat)-(long)(p)),99,0,0,-1,-1,-1,1,"Destindir_dat[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Destindir)-(long)(p)),99,0,0,-1,-1,-1,1,"Destindir[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dEdxTheoDir)-(long)(p)),99,0,0,-1,-1,-1,1,"dEdxTheoDir[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dEdxMeanFiles)-(long)(p)),99,0,0,-1,-1,-1,1,"dEdxMeanFiles[8][256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timer)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TStopwatch),-1,-1,1,"timer=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLegendEntry),-1,-1,4,"entry=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,4,"fTheoDedx_e_pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,4,"fTheoDedx_e_neg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,4,"fTheoDedx_Pi_pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,4,"fTheoDedx_Pi_neg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,4,"fTheoDedx_K_pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,4,"fTheoDedx_K_neg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,4,"fTheoDedx_P_pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,4,"fTheoDedx_P_neg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,4,"fTheoDedx_D_pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,4,"fTheoDedx_D_neg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,4,"fTheoDedx_T_pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,4,"fTheoDedx_T_neg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,4,"fTheoDedx_He3_pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,4,"fTheoDedx_He3_neg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,4,"fTheoDedx_He4_pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,4,"fTheoDedx_He4_neg=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"index=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"primaryTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"primaryTracks_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"runnumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"iBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"TriggerFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"EventFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"GlobalTracksFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"PrimaryTracksFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"EMCFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"TOFFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"BESGoodFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"HLTGood2Filled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"BESMonitorFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"FixedTargetFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"FixedTargetMonitorFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"UPCFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"DiMuonFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"UPCDiElectronFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"DiElectronFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"HeavyFragmentFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"MTDQuarkoniumFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"DiElectron2TwrFilled=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"switch_BesGood=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"switch_HLTGood2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"switch_BesMonitor=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"switch_FixedTarget=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"switch_FixedTargetMonitor=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"switch_HeavyFragment=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"switch_jpsi=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"switch_upc=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"innerGainPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"outerGainPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"BeamX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"BeamY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"twopi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"A=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hEvtsAccpt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hnhits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hnDedx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDcaXy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDcaZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDcaXy_TofMatch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDcaZ_TofMatch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDcaXy_EMCMatch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDcaZ_EMCMatch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hLn_dEdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hGlob_Pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hGlob_Phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hGlob_Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hGlob_dEdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hPrim_Pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hPrim_Phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hPrim_Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hPrim_dEdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hnhits_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hnDedx_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDcaXy_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDcaZ_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hLn_dEdx_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hGlob_Pt_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hGlob_Phi_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hGlob_Eta_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hGlob_dEdx_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hPrim_Pt_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hPrim_Phi_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hPrim_Eta_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hPrim_dEdx_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hVertexX=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hVertexY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hVertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hVertexXY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hVertexR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hLm_VertexX=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hLm_VertexY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hLm_VertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hglobalMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hprimaryMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JLatex),-1,-1,4,"hltSummaryLine1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JLatex),-1,-1,4,"hltSummaryLine2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hVertexX_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hVertexY_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hVertexZ_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hLm_VertexX_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hLm_VertexY_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hLm_VertexZ_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hglobalMult_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hprimaryMult_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hMatchPhi_Diff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hTowerEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hTowerDaqId=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hTowerSoftId=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hzEdge=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hTowerEtaPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hMatchPhi_Diff_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hTowerEnergy_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hTowerDaqId_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hTowerSoftId_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hzEdge_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hTowerEtaPhi_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiElectronInvMassTpxEmc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiElectronInvMassTpxEmcBG=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiElectronInvMassFullRange=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiElectronInvMassFullRangeBG=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiElectronInvMassCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiElectronInvMassCutBG=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hdEdx_P1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDaughter1P_TowerEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDaughter1TpxEmcInverseBeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hdEdx_P2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDaughter2P_TowerEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDaughter2TpxEmcInverseBeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiLeptonRapidity=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiElectronInvMassTpxEmc_Twr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiElectronInvMassTpxEmcBG_Twr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiElectronInvMassFullRange_Twr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiElectronInvMassFullRangeBG_Twr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiElectronInvMassCut_Twr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiElectronInvMassCutBG_Twr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hdEdx_P1_Twr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDaughter1P_TowerEnergy_Twr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDaughter1TpxEmcInverseBeta_Twr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hdEdx_P2_Twr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDaughter2P_TowerEnergy_Twr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDaughter2TpxEmcInverseBeta_Twr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiLeptonRapidity_Twr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiElectronInvMassFullRange_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiElectronInvMassFullRangeBG_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hdEdx_P1_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDaughter1P_TowerEnergy_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hdEdx_P2_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDaughter2P_TowerEnergy_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiLeptonRapidity_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hMTDDiMuonJpsiMassUS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hMTDDiMuonJpsiMassLS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hMTDDiMuonUpsilonMassUS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hMTDDiMuonUpsilonMassLS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hInvMassUS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hInvMassLS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hMtdHitMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hMtdMatchHitMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hMtdDeltaZvsModule=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hMtdDeltaZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hMtdDeltaYvsModule=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hMtdDeltaY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hMTDQmInvMassUS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hMTDQmInvMassLS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hMTDQmJpsiMass_ptcut0_US=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hMTDQmJpsiMass_ptcut0_LS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hMTDQmJpsiMass_ptcut2_US=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hMTDQmJpsiMass_ptcut2_LS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hMTDQmJpsiMass_ptcut4_US=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hMTDQmJpsiMass_ptcut4_LS=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"US8=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"LS8=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"tlx8_us=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"tlx8_ls=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"US9=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"LS9=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"tlx9_us=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"tlx9_ls=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"US10=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"LS10=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"tlx10_us=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"tlx10_ls=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"US11=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"LS11=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"tlx11_us=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"tlx11_ls=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"US12=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"LS12=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"tlx12_us=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"tlx12_ls=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"tlxmass12=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"US13=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"LS13=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"tlx13_us=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"tlx13_ls=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"tlxmass13=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hMTDQmUpsilonMassUS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1F),-1,-1,4,"hMTDQmUpsilonMassLS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiPionInvMassFullRange=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiPionInvMassFullRangeBG=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hDiPionDeltphi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hLocalZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hLocalY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hInverseBeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hMatchId_fiberId=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hMatchId_fiberId_copy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hMatchId_fiberId_copy2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hTrayID_TrgTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hchannelID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hVzvpd_lmVz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hLmVzDiff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hVzvpd=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hVzDiff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hVertexRZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hVertexXZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hVertexYZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hBunchId=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hBbceTAC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hBbcwTAC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hVpdeTAC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hVpdwTAC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hEpdeTAC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hEpdwTAC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hEtofHitsXY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hEtofInvBeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hEtofLocalYMrpc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TProfile),-1,-1,4,"pEtofNhitsPerEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hEtofDeltaT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"T0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hVzvpd_Vz_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hVzDiff_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hdEdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hdEdx_HeavyFragment=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hHFM_dEdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hdEdx_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2F),-1,-1,4,"hHFM_dEdx_UPC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hUpc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hMtd=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hNpeHt_25_NoZdc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hVpdMb=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hCentral=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hNpeHt_25=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hNpe=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hAtomcule=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hBeamX=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hBeamY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hInnerGain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hOuterGain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hMeanDcaXy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hBesGoodVertexXY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hBesGoodVrVsVz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hBesGoodVr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hBesGoodVertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hBesGoodprimaryMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hBesGoodBunchId=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hBesGoodVxT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hBesGoodVxT_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hBesGoodVyT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hBesGoodVyT_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hHLTGood2VertexXY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hHLTGood2Vr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hHLTGood2VertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hHLTGood2primaryMult=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hHLTGood2VzT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hHLTGood2VzT_2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hBesMonitorVertexXY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hBesMonitorVr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hBesMonitorVz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hBesMonitorVertexRZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hFixedTargetVertexXY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hFixedTargetVertexYZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hFixedTargetVr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hFixedTarget_VertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hFixedTarget_Prim_Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hFixedTarget_Glob_Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hFixedTargetBbceTAC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hFixedTargetBbcwTAC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hFixedTargetVpdeTAC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hFixedTargetVpdwTAC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hFixedTargetEpdeTAC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hFixedTargetEpdwTAC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hFixedTargetMonitorVertexXY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2D),-1,-1,4,"hFixedTargetMonitorVertexYZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hFixedTargetMonitorVr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hFixedTargetMonitor_VertexZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hFixedTargetMonitor_Prim_Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1D),-1,-1,4,"hFixedTargetMonitor_Glob_Eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"first_evt_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* mtdBuilder */
static void G__setup_memvarmtdBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_mtdBuilder));
   { mtdBuilder *p; p=(mtdBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_mtdBuildercLcL1119),-1,-1,4,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mReferenceTray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mValidShiftTray[2][2]=",0,"index1=value, index2=RDO");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"MaskoutTray[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"isADC[128]=",0,"nonzero if ADC, value is channel number");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"isTAC[128]=",0,"nonzero if TAC, value is channel number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TString),-1,-1,4,"QTslot[128]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TString),-1,-1,4,"QTslothex[128]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TString),-1,-1,4,"QTboard[128]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TString),-1,-1,4,"QTchanname[128]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TString),-1,-1,4,"QTchanno[128]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TString),-1,-1,4,"QTchanstring[128]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TString),-1,-1,4,"QTcable[128]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TString),-1,-1,4,"QTtpcsector[128]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"numberforsort=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"leadinghits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"trailinghits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"MTD_Error1_label=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"MTD_Error2_label=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"MTD_Error3_label=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"MTD_BL_label[30]=",0,"Run-13 15 trays");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,4,"plots=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ppBuilder */
static void G__setup_memvarppBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ppBuilder));
   { ppBuilder *p; p=(ppBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mEntriesSVX[6][32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mEntriesNCH[6][32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_ppBuildercLcL1122),-1,-1,4,"contVIP=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_ppBuildercLcL1124),-1,-1,4,"contPMT_ADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_ppBuildercLcL1126),-1,-1,4,"contPMT_TAC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_ppBuildercLcL1128),-1,-1,4,"contentsSVX=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TProfile),-1,-1,4,"hitperbunch=",0,"added by KY (2015-3-19) ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pxlBuilder */
static void G__setup_memvarpxlBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_pxlBuilder));
   { pxlBuilder *p; p=(pxlBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_bitset2DlE928cO960gR),G__defined_typename("bitset2D<NROW,NCOL>"),-1,4,"bs=",0,"allocate dynamically in constructor */");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"event_multiplicity=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"multiplicity_inner=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"multiplicity_outer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"sensor_count=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"event_count=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"number_of_events=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"max_count=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"max_count_sector[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"max_count_inner=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"max_count_outer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"min_count=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"min_count_sector[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"min_count_inner=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"min_count_outer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"count_hits_inner[10][10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"count_hits_outer[30][10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"count_length_inner[10][10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"count_length_outer[30][10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"LadderCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"sensor_hits[10][40]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"sensor_hit_frequency[10][40]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"avg_run_length[10][40]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_pxlBuildercLcL1135),-1,-1,4,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ssdBuilder */
static void G__setup_memvarssdBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ssdBuilder));
   { ssdBuilder *p; p=(ssdBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"evtCt=",0,"all event number ");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nSector=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nSide=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nRdo=5LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nLadderPerSide=20LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nWaferPerLadder=16LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nStripPerWafer=768LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nChipPerWafer=6LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"nChPerLadder=12288LL",0,"n channel per ladder ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2I),-1,-1,4,"hRawAdcStrip[2][20]=",0,"2*20");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2I),-1,-1,4,"hZSAdcStrip[2][20]=",0,"2*20");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hPedStrip[2][20]=",0,"2*20");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hRmsStrip[2][20]=",0,"2*20");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2I),-1,-1,4,"hRawLadderWafer[2]=",0,"2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2I),-1,-1,4,"hZSLadderWafer[2]=",0,"2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2I),-1,-1,4,"hFailedLadderChip[2]=",0,"2          ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2I),-1,-1,4,"hErrorRdo=",0,"1");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH2I),-1,-1,4,"hErrorFiber[5]=",0,"5                ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TH1I),-1,-1,4,"hModeCounter=",0,"1 ");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"mDataMode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mSector=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mRDO=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mSide=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mFiber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mLadder=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mWafer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mChip=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mStrip=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mAdc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mAdcLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mPed=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mRms=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TTree),-1,-1,4,"mTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mOutPutTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,4,"plots=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_daq_dta),-1,-1,4,"dd=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JLatex),-1,-1,4,"errorMsg=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"HEADER_LENGTH=8ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"FIBER_HEADER_LENGTH=10ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"HEADER_TOKEN=2863311530ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"END_TOKEN=3149642683ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"TCD_TOKEN=3435973836ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"FIBER_LINK_TOKEN=3722304989ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"TCD_END_TOKEN=4008636142ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"RDO_START=24ULL",0,"RDO Number Start bit");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"RDO_END=28ULL",0,"RDO Number End bit");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"TRIG_START=0ULL",0,"TCD trigger word start");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"TRIG_END=20ULL",0,"TCD trigger word end");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"FIBER_START=28ULL",0,"Fiber Input Start bit");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"FIBER_END=31ULL",0,"Fiber Input End bit");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"HYBRID_ONE_START=0ULL",0,"Hyirid 0 start bit");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"HYBRID_ONE_END=10ULL",0,"Hyirid 0 end bit");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"HYBRID_TWO_START=10ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"HYBRID_TWO_END=20ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"HYBRID_THREE_START=20ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"HYBRID_THREE_END=30ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"COM_ADC_START=0ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"COM_ADC_END=10ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"HYBRID_START=10ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"HYBRID_END=14ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"STRIP_START=14ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"STRIP_END=24ULL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"ERROR_START=24ULL",0,"CMN Err Code Start Bit");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"ERROR_END=32ULL",0,"CMN Err Code End Bit");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"ADC_START=4ULL",0,"adc length start bit");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"ADC_END=20ULL",0,"adc length end bit");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"DATAMODE_START=0ULL",0,"adc mode start bit");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"DATAMODE_END=4ULL",0,"adc mode end bit");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"RAWMODE=0ULL",0,"0x0 Raw data mode");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"COMPRESSEDMODE=1ULL",0,"0x1 ZS mode");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"CMNSMODE=3ULL",0,"0x3 CMN suppressed mode");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"FLAG_START=20ULL",0,"flag start bit");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"FLAG_END=32ULL",0,"flag end bit");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"NORMAL=0ULL",0,"0x000  //normal flag");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"NODATA=1ULL",0,"0x001  //no data");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"OVERFLOWFLAG=2ULL",0,"0x002  //over flow");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"EARLY_ABORT=3ULL",0,"0x003  //early abort");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"WRONG_PIPE_MODE=4ULL",0,"0x004  //wrong pipe mode");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"ADC_LENGTH_LIMIT=4106ULL",0,"adc length limit,include fiber header");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,4,"CMNERRORCODE=11ULL",0,"CMN algorithm failed error code");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* tofBuilder */
static void G__setup_memvartofBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_tofBuilder));
   { tofBuilder *p; p=(tofBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"tinohit[120][24]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"allbunchid[2][124]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"hist_maxtofmult_tof=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"hist_maxtofmult_trg=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_tofBuildercLcL1168),-1,-1,4,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_tofBuildercLcL1170),-1,-1,4,"extra=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"NotActiveTray[128]=",0,"Highest TOF tray  number is MTD: 124, leave some room here. ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"TOF_L0_trg_labels[120]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"TOF_Error1_label=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"TOF_Error2_label=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"TOF_Error3_label=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"TOF_Error1_list=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"TOF_Error2_list=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TLatex),-1,-1,4,"TOF_Error3_list=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nperror1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nperror2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nperror3=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mReferenceTray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mValidShiftTray[2][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mValidShift121[2][2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mValidShift122[2][2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"np=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,4,"plots[400]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"MaskoutTray[128]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"numberforsort=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"leadinghits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"trailinghits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* tpcBuilder */
static void G__setup_memvartpcBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_tpcBuilder));
   { tpcBuilder *p; p=(tpcBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nlasers)-(long)(p)),105,0,0,-1,-1,-1,1,"nlasers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->drift_vel)-(long)(p)),100,0,0,-1,-1,-1,1,"drift_vel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tpcDataInThisRun)-(long)(p)),105,0,0,-1,-1,-1,1,"tpcDataInThisRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"n_cld=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"n_adc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"event_no=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_tpcBuildercLcL1173),-1,-1,4,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_tpcBuildercLcL1175),-1,-1,4,"extras=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mPhiAngleMap[24][72][144]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_LaserReader),-1,-1,4,"laserReader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* tpxBuilder */
static void G__setup_memvartpxBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_tpxBuilder));
   { tpxBuilder *p; p=(tpxBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nlasers)-(long)(p)),105,0,0,-1,-1,-1,1,"nlasers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->drift_vel)-(long)(p)),100,0,0,-1,-1,-1,1,"drift_vel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"n_cld=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"n_adc=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_tpxBuildercLcL1178),-1,-1,4,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_tpxBuildercLcL1180),-1,-1,4,"extras=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mPhiAngleMap[24][45][182]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_LaserReader),-1,-1,4,"laserReader=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* trgBuilder */
static void G__setup_memvartrgBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_trgBuilder));
   { trgBuilder *p; p=(trgBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->first_event)-(long)(p)),105,0,0,-1,-1,-1,1,"first_event=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_trgBuildercLcL1184),-1,-1,4,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mNumberOfHotTowers=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mHotTowerChanges=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* upcBuilder */
static void G__setup_memvarupcBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_upcBuilder));
   { upcBuilder *p; p=(upcBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_upcBuildercLcL1187),-1,-1,4,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vpdBuilder */
static void G__setup_memvarvpdBuilder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_vpdBuilder));
   { vpdBuilder *p; p=(vpdBuilder*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(4096).Format("ADC_th=%lldLL",(long long)vpdBuilder::ADC_th).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(4096).Format("TDC_min=%lldLL",(long long)vpdBuilder::TDC_min).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(4096).Format("TDC_max=%lldLL",(long long)vpdBuilder::TDC_max).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->expected_pulser_means_east)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"expected_pulser_means_east=",0,"= { 1054, 1328, 1294, 1040 };");
   G__memvar_setup((void*)((long)(&p->expected_pulser_means_west)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"expected_pulser_means_west=",0,"= { 1422, 1317, 1233, 1166};");
   G__memvar_setup((void*)((long)(&p->eastGoodCh)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<bool>"),-1,1,"eastGoodCh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->westGoodCh)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<bool>"),-1,1,"westGoodCh=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->refChannelEast)-(long)(p)),105,0,0,-1,-1,-1,1,"refChannelEast=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->refChannelWest)-(long)(p)),105,0,0,-1,-1,-1,1,"refChannelWest=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pulserSwitch)-(long)(p)),103,0,0,-1,-1,-1,1,"pulserSwitch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->noiseCorr)-(long)(p)),103,0,0,-1,-1,-1,1,"noiseCorr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->contents)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_vpdBuildercLcL1207),-1,-1,1,"contents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eBinEdges)-(long)(p)),105,0,0,-1,-1,-1,1,"eBinEdges[19][10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eCorrs)-(long)(p)),105,0,0,-1,-1,-1,1,"eCorrs[19][10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->wBinEdges)-(long)(p)),105,0,0,-1,-1,-1,1,"wBinEdges[19][10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->wCorrs)-(long)(p)),105,0,0,-1,-1,-1,1,"wCorrs[19][10]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numBins)-(long)(p)),105,0,0,-1,-1,-1,1,"numBins=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maskedChannelsEast)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"maskedChannelsEast=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maskedChannelsWest)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"maskedChannelsWest=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* JevpServerMain */
static void G__setup_memvarJevpServerMain(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpServerMain));
   { JevpServerMain *p; p=(JevpServerMain*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGTabElement2 */
static void G__setup_memvarTGTabElement2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTabElement2));
   { TGTabElement2 *p; p=(TGTabElement2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGString),-1,-1,2,"fText=",0,"text on tab");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__Jevp_CintLN_TGPicture),-1,-1,2,"fClosePic=",0,"\"close tab\" icon");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__Jevp_CintLN_TGPicture),-1,-1,2,"fClosePicD=",0,"\"close tab\" icon (disabled)");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("GContext_t"),-1,2,"fNormGC=",0,"graphics context for drawing tab");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("FontStruct_t"),-1,2,"fFontStruct=",0,"font used for tab");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTWidth=",0,"width of tab text");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTHeight=",0,"height of tab text");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fEnabled=",0,"enabled or disabled");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fShowClose=",0,"show or hide close icon");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fActive=",0,"true if active (in front)");
   G__memvar_setup((void*)((long)(&p->ContainerMapped)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"ContainerMapped=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Mapped)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"Mapped=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGTab2 */
static void G__setup_memvarTGTab2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2));
   { TGTab2 *p; p=(TGTab2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCurrent=",0,"index of current tab");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTabh=",0,"tab height");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGCompositeFrame),-1,-1,2,"fContainer=",0,"main container");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TList),-1,-1,2,"fRemoved=",0,"list of removed tabs");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("FontStruct_t"),-1,2,"fFontStruct=",0,"font");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("GContext_t"),-1,2,"fNormGC=",0,"drawing context");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__Jevp_CintLN_TGFont),-1,-2,2,"fgDefaultFont=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__Jevp_CintLN_TGGC),-1,-2,2,"fgDefaultGC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->display_shift)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"display_shift=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rightTabIdx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"rightTabIdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGTabLayout2 */
static void G__setup_memvarTGTabLayout2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTabLayout2));
   { TGTabLayout2 *p; p=(TGTabLayout2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2),-1,-1,2,"fMain=",0,"container frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TList),-1,-1,2,"fList=",0,"list of frames to arrange");
   G__memvar_setup((void*)((long)(&p->isLayedOut)-(long)(p)),105,0,0,-1,-1,-1,1,"isLayedOut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* JevpViewer */
static void G__setup_memvarJevpViewer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpViewer));
   { JevpViewer *p; p=(JevpViewer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eth)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_EthServers),-1,-1,1,"eth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SERVERPORT)-(long)(p)),105,0,0,-1,-1,-1,1,"SERVERPORT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->initauto)-(long)(p)),105,0,0,-1,-1,-1,1,"initauto=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGMainFrame),-1,-1,4,"fMain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_MenuHelper),-1,-1,4,"menu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TabHelper),-1,-1,4,"tabs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TTimer),-1,-1,4,"timer=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CanvasFrame */
static void G__setup_memvarCanvasFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_CanvasFrame));
   { CanvasFrame *p; p=(CanvasFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id)-(long)(p)),105,0,0,-1,-1,-1,1,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->plotInfo)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotInfo),-1,-1,1,"plotInfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->canvas)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TRootEmbeddedCanvas),-1,-1,1,"canvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TabHelper */
static void G__setup_memvarTabHelper(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TabHelper));
   { TabHelper *p; p=(TabHelper*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->parent)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpViewer),-1,-1,1,"parent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mainTabs)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2),-1,-1,1,"mainTabs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->shiftTabs)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2),-1,-1,1,"shiftTabs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->l4Tabs)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2),-1,-1,1,"l4Tabs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* JevpPlotInfo */
static void G__setup_memvarJevpPlotInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotInfo));
   { JevpPlotInfo *p; p=(JevpPlotInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->combo_index)-(long)(p)),105,0,0,-1,-1,-1,1,"combo_index=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ethclient)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_EthClient),-1,-1,1,"ethclient=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_THashTable),-1,-1,4,"jevpPlots=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TList),-1,-1,4,"plotItems=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("time_t"),-1,4,"cleanTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_CanvasFrame),-1,-1,4,"myCanvasFrame=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->npads)-(long)(p)),105,0,0,-1,-1,-1,1,"npads=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DummyFrame */
static void G__setup_memvarDummyFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_DummyFrame));
   { DummyFrame *p; p=(DummyFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->canvas)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TRootEmbeddedCanvas),-1,-1,1,"canvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ZoomFrame */
static void G__setup_memvarZoomFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ZoomFrame));
   { ZoomFrame *p; p=(ZoomFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tgcanvas)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGCanvas),-1,-1,1,"tgcanvas=",0,"the window canvas");
   G__memvar_setup((void*)((long)(&p->frame)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGCompositeFrame),-1,-1,1,"frame=",0,"the static sized frame");
   G__memvar_setup((void*)((long)(&p->canvas)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TRootEmbeddedCanvas),-1,-1,1,"canvas=",0,"the inner canvas");
   G__memvar_setup((void*)((long)(&p->hframe)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGHorizontalFrame),-1,-1,1,"hframe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->exitb)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGTextButton),-1,-1,1,"exitb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->expandb)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGTextButton),-1,-1,1,"expandb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->contractb)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGTextButton),-1,-1,1,"contractb=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->plotclone)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot),-1,-1,1,"plotclone=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyMainFrame */
static void G__setup_memvarMyMainFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_MyMainFrame));
   { MyMainFrame *p; p=(MyMainFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGMainFrame),-1,-1,4,"fMain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TRootEmbeddedCanvas),-1,-1,4,"fEcanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGPopupMenu),-1,-1,4,"fileMenu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGPopupMenu),-1,-1,4,"aaaMenu=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGButton),-1,-1,4,"update=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGButton),-1,-1,4,"autoupdate=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2),-1,-1,4,"tabs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DrawFrame */
static void G__setup_memvarDrawFrame(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__Jevp_CintLN_DrawFrame));
   { DrawFrame *p; p=(DrawFrame*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TF1),-1,-1,1,"f1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->canvas)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TRootEmbeddedCanvas),-1,-1,1,"canvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__Jevp_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarJevp_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncPlotHisto(void) {
   /* PlotHisto */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_PlotHisto));
   G__memfunc_setup("PlotHisto",934,G__Jevp_Cint_306_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_PlotHisto), -1, 0, 1, 1, 1, 0, "U 'TH1' - 0 'NULL' hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotHisto",934,G__Jevp_Cint_306_0_2, 105, G__get_linked_tagnum(&G__Jevp_CintLN_PlotHisto), -1, 0, 1, 1, 1, 0, "u 'PlotHisto' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotHisto",934,G__Jevp_Cint_306_0_3, 105, G__get_linked_tagnum(&G__Jevp_CintLN_PlotHisto), -1, 0, 1, 1, 1, 0, "u 'PlotHisto' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLegText",1033,G__Jevp_Cint_306_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - text", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLegArgs",1009,G__Jevp_Cint_306_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - text", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_306_0_6, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PlotHisto::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_306_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PlotHisto::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_306_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PlotHisto::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_306_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PlotHisto::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_306_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_306_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PlotHisto::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_306_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PlotHisto::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_306_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PlotHisto::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_306_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PlotHisto::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~PlotHisto", 1060, G__Jevp_Cint_306_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Jevp_Cint_306_0_19, (int) ('u'), G__get_linked_tagnum(&G__Jevp_CintLN_PlotHisto), -1, 1, 1, 1, 1, 0, "u 'PlotHisto' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncJevpPlot(void) {
   /* JevpPlot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot));
   G__memfunc_setup("getMaxY",703,G__Jevp_Cint_307_0_1, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxY",715,G__Jevp_Cint_307_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - ymax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMinY",713,G__Jevp_Cint_307_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - ymin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRefComment",1340,G__Jevp_Cint_307_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - comment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addHisto",816,G__Jevp_Cint_307_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'PlotHisto' - 0 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addHisto",816,G__Jevp_Cint_307_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1' - 0 - roothist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeHisto",1173,G__Jevp_Cint_307_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHisto",839,G__Jevp_Cint_307_0_8, 85, G__get_linked_tagnum(&G__Jevp_CintLN_PlotHisto), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isDataPresent",1335,G__Jevp_Cint_307_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHistos",744,G__Jevp_Cint_307_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPlotName",1088,G__Jevp_Cint_307_0_12, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPalette",1051,G__Jevp_Cint_307_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("draw",430,G__Jevp_Cint_307_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLegend",923,G__Jevp_Cint_307_0_15, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - x1 d - - 0 - y1 "
"d - - 0 - x2 d - - 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOptStat",1051,G__Jevp_Cint_307_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDrawOpts",1152,G__Jevp_Cint_307_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - opts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JevpPlot",820,G__Jevp_Cint_307_0_18, 105, G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot), -1, 0, 1, 1, 1, 0, "U 'TH1' - 0 'NULL' firsthisto", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JevpPlot",820,G__Jevp_Cint_307_0_19, 105, G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot), -1, 0, 1, 1, 1, 0, "u 'JevpPlot' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__Jevp_Cint_307_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParent",950,G__Jevp_Cint_307_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParent",938,G__Jevp_Cint_307_0_22, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addElement",1011,G__Jevp_Cint_307_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - element", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeElement",1368,G__Jevp_Cint_307_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - element", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getElements",1149,G__Jevp_Cint_307_0_25, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hash",388,(G__InterfaceMethod) NULL,107, -1, G__defined_typename("ULong_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__Jevp_Cint_307_0_27, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JevpPlot::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_307_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpPlot::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_307_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JevpPlot::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_307_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JevpPlot::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_307_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_307_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpPlot::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_307_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JevpPlot::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_307_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpPlot::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_307_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JevpPlot::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~JevpPlot", 946, G__Jevp_Cint_307_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBuilderStatus(void) {
   /* BuilderStatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_BuilderStatus));
   G__memfunc_setup("BuilderStatus",1355,G__Jevp_Cint_308_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_BuilderStatus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setName",717,G__Jevp_Cint_308_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStatus",976,G__Jevp_Cint_308_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("running",769,G__Jevp_Cint_308_0_4, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_308_0_5, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BuilderStatus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_308_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BuilderStatus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_308_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BuilderStatus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_308_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BuilderStatus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_308_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_308_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BuilderStatus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_308_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BuilderStatus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_308_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BuilderStatus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_308_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BuilderStatus::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BuilderStatus", 1355, G__Jevp_Cint_308_0_17, (int) ('i'), G__get_linked_tagnum(&G__Jevp_CintLN_BuilderStatus), -1, 0, 1, 1, 1, 0, "u 'BuilderStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BuilderStatus", 1481, G__Jevp_Cint_308_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Jevp_Cint_308_0_19, (int) ('u'), G__get_linked_tagnum(&G__Jevp_CintLN_BuilderStatus), -1, 1, 1, 1, 1, 0, "u 'BuilderStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncJLatex(void) {
   /* JLatex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JLatex));
   G__memfunc_setup("SetNDC_x",728,G__Jevp_Cint_316_0_1, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ndc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNDC_y",729,G__Jevp_Cint_316_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ndc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetY",389,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("JLatex",584,G__Jevp_Cint_316_0_5, 105, G__get_linked_tagnum(&G__Jevp_CintLN_JLatex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JLatex",584,G__Jevp_Cint_316_0_6, 105, G__get_linked_tagnum(&G__Jevp_CintLN_JLatex), -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"C - - 10 - text i - - 0 '0' ndcX "
"i - - 0 '1' ndcY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JLatex",584,G__Jevp_Cint_316_0_7, 105, G__get_linked_tagnum(&G__Jevp_CintLN_JLatex), -1, 0, 1, 1, 1, 0, "u 'JLatex' - 1 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetText",721,G__Jevp_Cint_316_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - text", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetText",721,G__Jevp_Cint_316_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "H - 'wchar_t' 10 - text", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetText",721,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"C - - 10 - text", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetText",721,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"H - 'wchar_t' 10 - text", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__Jevp_Cint_316_0_13, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JLatex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_316_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JLatex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_316_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JLatex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_316_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JLatex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_316_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_316_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JLatex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_316_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JLatex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_316_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JLatex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_316_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JLatex::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~JLatex", 710, G__Jevp_Cint_316_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncJLine(void) {
   /* JLine */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JLine));
   G__memfunc_setup("SetNDC_x",728,G__Jevp_Cint_319_0_1, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ndc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNDC_y",729,G__Jevp_Cint_319_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ndc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX1",437,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetX2",438,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetY1",438,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetY2",439,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetXY",477,G__Jevp_Cint_319_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JLine",466,G__Jevp_Cint_319_0_8, 105, G__get_linked_tagnum(&G__Jevp_CintLN_JLine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JLine",466,G__Jevp_Cint_319_0_9, 105, G__get_linked_tagnum(&G__Jevp_CintLN_JLine), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__Jevp_Cint_319_0_11, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JLine::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_319_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JLine::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_319_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JLine::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_319_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JLine::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_319_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_319_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JLine::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_319_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JLine::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_319_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JLine::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_319_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JLine::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("JLine", 466, G__Jevp_Cint_319_0_23, (int) ('i'), G__get_linked_tagnum(&G__Jevp_CintLN_JLine), -1, 0, 1, 1, 1, 0, "u 'JLine' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~JLine", 592, G__Jevp_Cint_319_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Jevp_Cint_319_0_25, (int) ('u'), G__get_linked_tagnum(&G__Jevp_CintLN_JLine), -1, 1, 1, 1, 1, 0, "u 'JLine' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEvpMessage(void) {
   /* EvpMessage */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_EvpMessage));
   G__memfunc_setup("setSource",957,G__Jevp_Cint_621_0_1, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCmd",608,G__Jevp_Cint_621_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - cmd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setArgs",729,G__Jevp_Cint_621_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - args", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSource",945,G__Jevp_Cint_621_0_4, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCmd",596,G__Jevp_Cint_621_0_5, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getArgs",717,G__Jevp_Cint_621_0_6, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvpMessage",1008,G__Jevp_Cint_621_0_7, 105, G__get_linked_tagnum(&G__Jevp_CintLN_EvpMessage), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_621_0_8, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EvpMessage::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_621_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EvpMessage::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_621_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EvpMessage::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_621_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EvpMessage::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_621_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_621_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EvpMessage::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_621_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EvpMessage::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_621_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EvpMessage::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_621_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EvpMessage::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EvpMessage", 1008, G__Jevp_Cint_621_0_20, (int) ('i'), G__get_linked_tagnum(&G__Jevp_CintLN_EvpMessage), -1, 0, 1, 1, 1, 0, "u 'EvpMessage' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EvpMessage", 1134, G__Jevp_Cint_621_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Jevp_Cint_621_0_22, (int) ('u'), G__get_linked_tagnum(&G__Jevp_CintLN_EvpMessage), -1, 1, 1, 1, 1, 0, "u 'EvpMessage' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRunStatus(void) {
   /* RunStatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_RunStatus));
   G__memfunc_setup("RunStatus",953,G__Jevp_Cint_626_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_RunStatus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStatus",976,G__Jevp_Cint_626_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dump",438,G__Jevp_Cint_626_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumericStatus",1687,G__Jevp_Cint_626_0_4, 105, -1, -1, 0, 1, 3, 1, 0, "C - - 0 - str", (char*)NULL, (void*) G__func2void( (int (*)(char*))(&RunStatus::getNumericStatus) ), 0);
   G__memfunc_setup("running",769,G__Jevp_Cint_626_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addEvent",811,G__Jevp_Cint_626_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - seq i - - 0 - tm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_626_0_7, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RunStatus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_626_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RunStatus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_626_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RunStatus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_626_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RunStatus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_626_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_626_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RunStatus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_626_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RunStatus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_626_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RunStatus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_626_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RunStatus::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RunStatus", 953, G__Jevp_Cint_626_0_19, (int) ('i'), G__get_linked_tagnum(&G__Jevp_CintLN_RunStatus), -1, 0, 1, 1, 1, 0, "u 'RunStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RunStatus", 1079, G__Jevp_Cint_626_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Jevp_Cint_626_0_21, (int) ('u'), G__get_linked_tagnum(&G__Jevp_CintLN_RunStatus), -1, 1, 1, 1, 1, 0, "u 'RunStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncJevpPlotSet(void) {
   /* JevpPlotSet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet));
   G__memfunc_setup("JevpPlotSet",1120,G__Jevp_Cint_632_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotSet), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' server", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMemUse",908,G__Jevp_Cint_632_0_2, 109, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPlotSetName",1420,G__Jevp_Cint_632_0_3, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDebugInfo",1203,G__Jevp_Cint_632_0_4, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPlot",712,G__Jevp_Cint_632_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'JevpPlot' - 0 - plot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPlot",735,G__Jevp_Cint_632_0_6, 85, G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot), -1, 0, 1, 1, 1, 0, "C - - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removePlot",1069,G__Jevp_Cint_632_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumberOfPlots",1648,G__Jevp_Cint_632_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPlotByIndex",1426,G__Jevp_Cint_632_0_9, 85, G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dump",438,G__Jevp_Cint_632_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDisabled",1124,G__Jevp_Cint_632_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("_initialize",1169,G__Jevp_Cint_632_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,G__Jevp_Cint_632_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("_startrun",994,G__Jevp_Cint_632_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("startrun",899,G__Jevp_Cint_632_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,G__Jevp_Cint_632_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("_stoprun",890,G__Jevp_Cint_632_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("_event",641,G__Jevp_Cint_632_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event",546,G__Jevp_Cint_632_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("selectEvent",1154,G__Jevp_Cint_632_0_20, 105, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("selectRun",949,G__Jevp_Cint_632_0_21, 105, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Main",389,G__Jevp_Cint_632_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetAllPlots",1358,G__Jevp_Cint_632_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addServerTags",1327,G__Jevp_Cint_632_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - tags", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAverageProcessingTime",2471,G__Jevp_Cint_632_0_25, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("buildTheXml",1122,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parseArgs",936,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writePdfFile",1221,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_632_0_29, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JevpPlotSet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_632_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpPlotSet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_632_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JevpPlotSet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_632_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JevpPlotSet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_632_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_632_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpPlotSet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_632_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JevpPlotSet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_632_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpPlotSet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_632_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JevpPlotSet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~JevpPlotSet", 1246, G__Jevp_Cint_632_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncJevpBuilder(void) {
   /* JevpBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder));
   G__memfunc_setup("JevpBuilder",1116,G__Jevp_Cint_701_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_JevpBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStTriggerData",1621,G__Jevp_Cint_701_0_2, 85, G__get_linked_tagnum(&G__Jevp_CintLN_StTriggerData), -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_701_0_3, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JevpBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_701_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_701_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JevpBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_701_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JevpBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_701_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_701_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_701_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JevpBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_701_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_701_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JevpBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~JevpBuilder", 1242, G__Jevp_Cint_701_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncbaseBuilder(void) {
   /* baseBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_baseBuilder));
   G__memfunc_setup("baseBuilder",1122,G__Jevp_Cint_711_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_baseBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_711_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&baseBuilder::main) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_711_0_7, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&baseBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_711_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&baseBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_711_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&baseBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_711_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&baseBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_711_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_711_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&baseBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_711_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&baseBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_711_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&baseBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_711_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&baseBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~baseBuilder", 1248, G__Jevp_Cint_711_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncbbcBuilder(void) {
   /* bbcBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_bbcBuilder));
   G__memfunc_setup("bbcBuilder",1006,G__Jevp_Cint_712_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_bbcBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_712_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&bbcBuilder::main) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_712_0_7, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&bbcBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_712_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bbcBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_712_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&bbcBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_712_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&bbcBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_712_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_712_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bbcBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_712_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bbcBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_712_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bbcBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_712_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bbcBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~bbcBuilder", 1132, G__Jevp_Cint_712_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncbemcBuilder(void) {
   /* bemcBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_bemcBuilder));
   G__memfunc_setup("bemcBuilder",1118,G__Jevp_Cint_716_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_bemcBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_716_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&bemcBuilder::main) ), 0);
   G__memfunc_setup("addCrateIDs",1048,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 0, 
"U 'JevpPlot' - 0 - plot i - 'Int_t' 0 - numBoxes "
"I - 'Int_t' 0 - min I - 'Int_t' 0 - max "
"C - - 10 - labelFormat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPatchSumIndex",1606,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'JevpPlot' - 0 - plot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTowerIndex",1330,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'JevpPlot' - 0 - plot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addDsmL1TowerIndex",1747,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'JevpPlot' - 0 - plot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addDsmL1PatchIndex",1714,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'JevpPlot' - 0 - plot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addDsmL2TowerIndex",1748,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'JevpPlot' - 0 - plot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addDsmL2PatchIndex",1715,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'JevpPlot' - 0 - plot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addDsmL2PatchSumIndex",2024,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'JevpPlot' - 0 - plot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addSmdFeeSumIndex",1674,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'JevpPlot' - 0 - plot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPsdFeeSumIndex",1677,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'JevpPlot' - 0 - plot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_716_0_17, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&bemcBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_716_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bemcBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_716_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&bemcBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_716_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&bemcBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_716_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_716_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bemcBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_716_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bemcBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_716_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&bemcBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_716_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&bemcBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~bemcBuilder", 1244, G__Jevp_Cint_716_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdaqBuilder(void) {
   /* daqBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_daqBuilder));
   G__memfunc_setup("daqBuilder",1021,G__Jevp_Cint_717_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_daqBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_717_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&daqBuilder::main) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_717_0_7, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&daqBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_717_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&daqBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_717_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&daqBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_717_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&daqBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_717_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_717_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&daqBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_717_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&daqBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_717_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&daqBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_717_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&daqBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~daqBuilder", 1147, G__Jevp_Cint_717_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfunceemcBuilder(void) {
   /* eemcBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_eemcBuilder));
   G__memfunc_setup("eemcBuilder",1121,G__Jevp_Cint_721_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_eemcBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_721_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&eemcBuilder::main) ), 0);
   G__memfunc_setup("eeJpQaMinMax",1152,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TH1' - 0 - hh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_721_0_8, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&eemcBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_721_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&eemcBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_721_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&eemcBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_721_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&eemcBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_721_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_721_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&eemcBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_721_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&eemcBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_721_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&eemcBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_721_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&eemcBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~eemcBuilder", 1247, G__Jevp_Cint_721_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncepdBuilder(void) {
   /* epdBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_epdBuilder));
   G__memfunc_setup("epdBuilder",1024,G__Jevp_Cint_725_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_epdBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_725_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&epdBuilder::main) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_725_0_7, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&epdBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_725_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&epdBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_725_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&epdBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_725_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&epdBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_725_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_725_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&epdBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_725_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&epdBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_725_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&epdBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_725_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&epdBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~epdBuilder", 1150, G__Jevp_Cint_725_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncetofBuilder(void) {
   /* etofBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_etofBuilder));
   G__memfunc_setup("etofBuilder",1141,G__Jevp_Cint_731_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_etofBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_731_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&etofBuilder::main) ), 0);
   G__memfunc_setup("processMessages",1591,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"M - 'uint64_t' 0 - messageBuffer h - 'size_t' 0 - nFullMessagesToRead "
"f - - 1 - tofTrgMult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hardwareMapElinkGet4Id",2144,(G__InterfaceMethod) NULL, 104, -1, -1, 0, 1, 1, 4, 0, "h - - 11 - chip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hardwareMapChannelNumberInFee",2901,(G__InterfaceMethod) NULL, 104, -1, -1, 0, 2, 1, 4, 0, 
"h - - 11 - chip h - - 11 - chan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hardwareMapFeeNumber",2021,(G__InterfaceMethod) NULL, 104, -1, -1, 0, 1, 1, 4, 0, "h - - 11 - chip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hardwareMapChannelNumber",2446,(G__InterfaceMethod) NULL, 104, -1, -1, 0, 2, 1, 4, 0, 
"h - - 11 - chip h - - 11 - chan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hardwareMapSector",1756,(G__InterfaceMethod) NULL, 104, -1, -1, 0, 1, 1, 4, 0, "h - - 11 - gdpb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hardwareMapModule",1746,(G__InterfaceMethod) NULL, 104, -1, -1, 0, 1, 1, 4, 0, "h - - 11 - mappedChannelNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hardwareMapCounter",1868,(G__InterfaceMethod) NULL, 104, -1, -1, 0, 1, 1, 4, 0, "h - - 11 - mappedChannelNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hardwareMapSide",1521,(G__InterfaceMethod) NULL, 104, -1, -1, 0, 1, 1, 4, 0, "h - - 11 - mappedChannelNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hardwareMapStrip",1662,(G__InterfaceMethod) NULL, 104, -1, -1, 0, 1, 1, 4, 0, "h - - 11 - mappedChannelNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("processMessages2018",1794,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"M - 'uint64_t' 0 - messageBuffer h - 'size_t' 0 - nFullMessagesToRead "
"f - - 1 - tofTrgMult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_731_0_18, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&etofBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_731_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&etofBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_731_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&etofBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_731_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&etofBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_731_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_731_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&etofBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_731_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&etofBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_731_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&etofBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_731_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&etofBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~etofBuilder", 1267, G__Jevp_Cint_731_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncfgtBuilder(void) {
   /* fgtBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fgtBuilder));
   G__memfunc_setup("fgtBuilder",1032,G__Jevp_Cint_738_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_fgtBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_738_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&fgtBuilder::main) ), 0);
   G__memfunc_setup("fillSumHistos",1366,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_738_0_8, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&fgtBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_738_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&fgtBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_738_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&fgtBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_738_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&fgtBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_738_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_738_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&fgtBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_738_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&fgtBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_738_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&fgtBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_738_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&fgtBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~fgtBuilder", 1158, G__Jevp_Cint_738_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncfmsBuilder(void) {
   /* fmsBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fmsBuilder));
   G__memfunc_setup("fmsBuilder",1037,G__Jevp_Cint_770_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_fmsBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_770_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&fmsBuilder::main) ), 0);
   G__memfunc_setup("initMaps",837,G__Jevp_Cint_770_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_770_0_8, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&fmsBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_770_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&fmsBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_770_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&fmsBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_770_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&fmsBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_770_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_770_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&fmsBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_770_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&fmsBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_770_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&fmsBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_770_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&fmsBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~fmsBuilder", 1163, G__Jevp_Cint_770_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncfpdBuilder(void) {
   /* fpdBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fpdBuilder));
   G__memfunc_setup("fpdBuilder",1025,G__Jevp_Cint_782_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_fpdBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_782_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&fpdBuilder::main) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_782_0_7, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&fpdBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_782_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&fpdBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_782_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&fpdBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_782_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&fpdBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_782_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_782_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&fpdBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_782_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&fpdBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_782_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&fpdBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_782_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&fpdBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~fpdBuilder", 1151, G__Jevp_Cint_782_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncfpsBuilder(void) {
   /* fpsBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fpsBuilder));
   G__memfunc_setup("fpsBuilder",1040,G__Jevp_Cint_785_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_fpsBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_785_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&fpsBuilder::main) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_785_0_7, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&fpsBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_785_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&fpsBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_785_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&fpsBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_785_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&fpsBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_785_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_785_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&fpsBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_785_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&fpsBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_785_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&fpsBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_785_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&fpsBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~fpsBuilder", 1166, G__Jevp_Cint_785_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncfstBuilder(void) {
   /* fstBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_fstBuilder));
   G__memfunc_setup("fstBuilder",1044,G__Jevp_Cint_788_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_fstBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_788_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&fstBuilder::main) ), 0);
   G__memfunc_setup("fillSumHistos",1366,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_788_0_8, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&fstBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_788_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&fstBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_788_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&fstBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_788_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&fstBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_788_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_788_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&fstBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_788_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&fstBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_788_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&fstBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_788_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&fstBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~fstBuilder", 1170, G__Jevp_Cint_788_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgmtBuilder(void) {
   /* gmtBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_gmtBuilder));
   G__memfunc_setup("gmtBuilder",1039,G__Jevp_Cint_806_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_gmtBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAPV",551,G__Jevp_Cint_806_0_6, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - i_arm i - - 0 - i_port "
"i - - 0 - i_apv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLayer",829,G__Jevp_Cint_806_0_7, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - iarm i - - 0 - iport "
"i - - 0 - iapv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("usedAPV",664,G__Jevp_Cint_806_0_8, 103, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - i_rdo i - - 0 - i_arm "
"i - - 0 - i_port i - - 0 - i_apv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("main",421,G__Jevp_Cint_806_0_9, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&gmtBuilder::main) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_806_0_10, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&gmtBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_806_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&gmtBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_806_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&gmtBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_806_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&gmtBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_806_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_806_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&gmtBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_806_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&gmtBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_806_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&gmtBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_806_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&gmtBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~gmtBuilder", 1165, G__Jevp_Cint_806_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfunchltBuilder(void) {
   /* hltBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_hltBuilder));
   G__memfunc_setup("hltBuilder",1039,G__Jevp_Cint_1035_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_hltBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("selectEvent",1154,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("selectRun",949,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getPID",541,G__Jevp_Cint_1035_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "U 'hlt_track' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getQinv",734,G__Jevp_Cint_1035_0_9, 102, -1, -1, 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - trackA U 'hlt_track' - 0 - trackB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getQinv",734,G__Jevp_Cint_1035_0_10, 102, -1, -1, 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - trackA F - - 0 - trackB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getQout",745,G__Jevp_Cint_1035_0_11, 102, -1, -1, 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - trackA U 'hlt_track' - 0 - trackB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getQout",745,G__Jevp_Cint_1035_0_12, 102, -1, -1, 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - trackA F - - 0 - trackB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getQside",822,G__Jevp_Cint_1035_0_13, 102, -1, -1, 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - trackA U 'hlt_track' - 0 - trackB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getQside",822,G__Jevp_Cint_1035_0_14, 102, -1, -1, 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - trackA F - - 0 - trackB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getQlong",833,G__Jevp_Cint_1035_0_15, 102, -1, -1, 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - trackA U 'hlt_track' - 0 - trackB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getQlong",833,G__Jevp_Cint_1035_0_16, 102, -1, -1, 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - trackA F - - 0 - trackB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vertexEventCut",1484,G__Jevp_Cint_1035_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HLT_EVE' - 0 - hlt_eve U 'hltBuilder::eventCut_info' - 0 - eventCuts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("multiplicityEventCut",2135,G__Jevp_Cint_1035_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - - 0 - MULTIPLICITY U 'hltBuilder::eventCut_info' - 0 - eventCuts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BemcEventCut",1189,G__Jevp_Cint_1035_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"f - - 0 - BemcEastEnergy f - - 0 - BemcWestEnergy "
"U 'hltBuilder::eventCut_info' - 0 - eventCuts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trackCut",833,G__Jevp_Cint_1035_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'hlt_track' - 0 - track U 'HLT_EVE' - 0 - eve "
"U 'hltBuilder::trackCut_info' - 0 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dipAngleCut",1104,G__Jevp_Cint_1035_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - trackA U 'hlt_track' - 0 - trackB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dipAngleCut",1104,G__Jevp_Cint_1035_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - trackA F - - 0 - trackB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("antiTrackSplittingCut",2187,G__Jevp_Cint_1035_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - trackA U 'hlt_track' - 0 - trackB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("antiTrackSplittingCut",2187,G__Jevp_Cint_1035_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - trackA F - - 0 - trackB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pairCut",728,G__Jevp_Cint_1035_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - trackA U 'hlt_track' - 0 - trackB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pairCut",728,G__Jevp_Cint_1035_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - trackA F - - 0 - trackB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("updateCurrentHbtEvent",2182,G__Jevp_Cint_1035_0_27, 121, -1, -1, 0, 5, 1, 1, 0, 
"U 'hltBuilder::hbt_event_info' - 0 - hbt_current i - - 0 - multiplicity "
"U 'hlt_track' - 0 - track U 'HLT_EVE' - 0 - event "
"i - - 0 - trackindex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("updateHbtEventBuffer",2045,G__Jevp_Cint_1035_0_28, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - vmb i - - 0 - mmb "
"U 'hltBuilder::hbt_event_info' - 0 - hbt_current", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRap",611,G__Jevp_Cint_1035_0_29, 102, -1, -1, 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - track i - - 0 - species", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEta",602,G__Jevp_Cint_1035_0_30, 102, -1, -1, 0, 1, 1, 1, 0, "U 'hlt_track' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDCA",520,G__Jevp_Cint_1035_0_31, 102, -1, -1, 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - track U 'HLT_EVE' - 0 - eve", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUpdateSwitch",1569,G__Jevp_Cint_1035_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getUpdateSwitch",1557,G__Jevp_Cint_1035_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sameSignCheck",1301,G__Jevp_Cint_1035_0_34, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - trkA U 'hlt_track' - 0 - trkB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sameSignCheck",1301,G__Jevp_Cint_1035_0_35, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'hlt_track' - 0 - trkA F - - 0 - trkB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fullBuffer",1037,G__Jevp_Cint_1035_0_36, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - - 0 - vb i - - 0 - mb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMultMixingBin",1639,G__Jevp_Cint_1035_0_37, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - mult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVertexMixingBin",1859,G__Jevp_Cint_1035_0_38, 105, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - vertZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("computeYieldsHistogram",2325,G__Jevp_Cint_1035_0_39, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("computeHbtCorrelationFunction",3043,G__Jevp_Cint_1035_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("computeV2Corrected",1824,G__Jevp_Cint_1035_0_41, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("main",421,G__Jevp_Cint_1035_0_42, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&hltBuilder::main) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1035_0_43, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&hltBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1035_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&hltBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1035_0_45, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&hltBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1035_0_46, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&hltBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1035_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1035_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&hltBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1035_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&hltBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1035_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&hltBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1035_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&hltBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~hltBuilder", 1165, G__Jevp_Cint_1035_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHltphiBuilder(void) {
   /* HltphiBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_HltphiBuilder));
   G__memfunc_setup("HltphiBuilder",1328,G__Jevp_Cint_1086_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_HltphiBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteHistogram",1465,G__Jevp_Cint_1086_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - outFile", "kinds of histograms of current run", (void*) NULL, 0);
   G__memfunc_setup("TempPhiWgtCal",1273,G__Jevp_Cint_1086_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "open phiwgt of last run", (void*) NULL, 0);
   G__memfunc_setup("WriteList",935,G__Jevp_Cint_1086_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - outFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Jpsiflow",846,G__Jevp_Cint_1086_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chi",308,G__Jevp_Cint_1086_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - res", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resEventPlane",1340,G__Jevp_Cint_1086_0_7, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - chi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("selectEvent",1154,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("selectRun",949,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_1086_0_14, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&HltphiBuilder::main) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1086_0_15, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HltphiBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1086_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HltphiBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1086_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HltphiBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1086_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HltphiBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1086_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1086_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HltphiBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1086_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HltphiBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1086_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HltphiBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1086_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HltphiBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HltphiBuilder", 1454, G__Jevp_Cint_1086_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncistBuilder(void) {
   /* istBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_istBuilder));
   G__memfunc_setup("istBuilder",1047,G__Jevp_Cint_1087_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_istBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_1087_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&istBuilder::main) ), 0);
   G__memfunc_setup("fillSumHistos",1366,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1087_0_8, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&istBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1087_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&istBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1087_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&istBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1087_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&istBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1087_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1087_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&istBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1087_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&istBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1087_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&istBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1087_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&istBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~istBuilder", 1173, G__Jevp_Cint_1087_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncitpcBuilder(void) {
   /* itpcBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_itpcBuilder));
   G__memfunc_setup("itpcBuilder",1143,G__Jevp_Cint_1106_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_itpcBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_1106_0_5, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&itpcBuilder::main) ), 0);
   G__memfunc_setup("setPhiAngleMap",1394,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1106_0_7, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&itpcBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1106_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&itpcBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1106_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&itpcBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1106_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&itpcBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1106_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1106_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&itpcBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1106_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&itpcBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1106_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&itpcBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1106_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&itpcBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~itpcBuilder", 1269, G__Jevp_Cint_1106_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncl3Builder(void) {
   /* l3Builder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_l3Builder));
   G__memfunc_setup("l3Builder",870,G__Jevp_Cint_1111_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_l3Builder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_1111_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&l3Builder::main) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1111_0_7, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&l3Builder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1111_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&l3Builder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1111_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&l3Builder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1111_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&l3Builder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1111_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1111_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&l3Builder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1111_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&l3Builder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1111_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&l3Builder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1111_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&l3Builder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~l3Builder", 996, G__Jevp_Cint_1111_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncl4Builder(void) {
   /* l4Builder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_l4Builder));
   G__memfunc_setup("l4Builder",871,G__Jevp_Cint_1117_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_l4Builder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_1117_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&l4Builder::main) ), 0);
   G__memfunc_setup("inputDedx",949,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDedx",709,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 0, 
"d - - 0 - p i - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineHltPlots",1445,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineBeamPlots",1522,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineBesGoodPlots",1824,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineHLTGood2Plots",1824,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineBesMonitorPlots",2175,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineFixedTargetPlots",2260,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineFixedTargetMonitorPlots",3004,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineHeavyFragmentPlots",2478,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineDiElectronPlots",2150,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineDiPionPlots",1728,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineDiMuonPlots",1737,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineHltPlots_UPC",1772,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineUPCDiElectronPlots",2382,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineDiElectron2TwrPlots",2517,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAllPlots",1143,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeHistogram",1497,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1117_0_25, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&l4Builder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1117_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&l4Builder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1117_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&l4Builder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1117_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&l4Builder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1117_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1117_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&l4Builder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1117_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&l4Builder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1117_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&l4Builder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1117_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&l4Builder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~l4Builder", 997, G__Jevp_Cint_1117_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmtdBuilder(void) {
   /* mtdBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_mtdBuilder));
   G__memfunc_setup("mtdBuilder",1036,G__Jevp_Cint_1118_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_mtdBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_1118_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&mtdBuilder::main) ), 0);
   G__memfunc_setup("ReadValidBunchidPhase",2074,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMtdQTmap",1076,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTraymaskoutList",1980,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tdcchan2globalstrip",1962,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 3, 1, 4, 0, 
"i - - 0 - - i - - 0 - - "
"i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tdig2slot",924,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - - i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("istray3bl",925,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("istray5bl",927,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValidDataword",1318,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iGlobalSlot",1116,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - - i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1118_0_16, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&mtdBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1118_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&mtdBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1118_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&mtdBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1118_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&mtdBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1118_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1118_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&mtdBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1118_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&mtdBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1118_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&mtdBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1118_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&mtdBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~mtdBuilder", 1162, G__Jevp_Cint_1118_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncppBuilder(void) {
   /* ppBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ppBuilder));
   G__memfunc_setup("ppBuilder",935,G__Jevp_Cint_1121_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_ppBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_1121_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&ppBuilder::main) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1121_0_7, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ppBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1121_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ppBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1121_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ppBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1121_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ppBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1121_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1121_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ppBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1121_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ppBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1121_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ppBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1121_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ppBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ppBuilder", 1061, G__Jevp_Cint_1121_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpxlBuilder(void) {
   /* pxlBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_pxlBuilder));
   G__memfunc_setup("pxlBuilder",1051,G__Jevp_Cint_1134_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_pxlBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_1134_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&pxlBuilder::main) ), 0);
   G__memfunc_setup("IncrementMultiplicity",2222,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - sensor_number i - - 0 - row_count", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WhichLadder",1087,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - sector_number i - - 0 - sensor_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateLadderCount",1720,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"i - - 0 - sector_number i - - 0 - sensor_number "
"i - - 0 - sensor_count", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateTH1",816,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"U 'TH1' - 0 - hist i - - 0 - bin "
"d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateTH1_Scale",1399,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 4, 1, 4, 0, 
"U 'TH1' - 0 - hist i - - 0 - bin "
"d - - 0 - value i - - 0 - number_of_events_old", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateTH2",817,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 4, 1, 4, 0, 
"U 'TH1' - 0 - hist i - - 0 - x_bin "
"i - - 0 - y_bin d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateTH2_Scale",1400,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 5, 1, 4, 0, 
"U 'TH1' - 0 - hist i - - 0 - x_bin "
"i - - 0 - y_bin d - - 0 - value "
"i - - 0 - number_of_events_old", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateTH2_Scale2",1450,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 6, 1, 4, 0, 
"C - - 10 - name U 'TH1' - 0 - hist "
"i - - 0 - x_bin i - - 0 - y_bin "
"d - - 0 - value i - - 0 - number_of_events_old", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncrementArray",1444,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 3, 1, 4, 0, 
"C - - 10 - name i - - 0 - x_bin "
"i - - 0 - y_bin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateSectorErrorTypeTH2",2381,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"U 'TH1' - 0 - hist i - - 0 - ret "
"i - - 0 - sector_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLadderCount",1397,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - ladder_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillLadderHistogram",1921,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TH1' - 0 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateLadderHistogram",2141,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"U 'TH1' - 0 - hist U 'TH1' - 0 - hist_single_evt "
"i - - 0 - number_of_events_old", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateLayerHistograms",2177,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 0, 
"U 'TH1' - 0 - h_hits_inner U 'TH1' - 0 - h_rl_inner "
"U 'TH1' - 0 - h_hits_outer U 'TH1' - 0 - h_rl_outer "
"i - - 0 - number_of_events", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1134_0_21, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&pxlBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1134_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&pxlBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1134_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&pxlBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1134_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&pxlBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1134_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1134_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&pxlBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1134_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&pxlBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1134_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&pxlBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1134_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&pxlBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~pxlBuilder", 1177, G__Jevp_Cint_1134_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncssdBuilder(void) {
   /* ssdBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ssdBuilder));
   G__memfunc_setup("ssdBuilder",1041,G__Jevp_Cint_1166_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_ssdBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_1166_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&ssdBuilder::main) ), 0);
   G__memfunc_setup("FindLadderSide",1362,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"i - - 0 - RDO i - - 0 - channel "
"i - - 1 - ladder i - - 1 - side", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindStripNumber",1532,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 1 - strip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillSumHistos",1366,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateRatio",1122,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"f - 'Float_t' 1 - ratio i - 'Int_t' 0 - Nevent "
"i - 'Int_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mid",282,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"h - 'UInt_t' 0 - start h - 'UInt_t' 0 - end "
"h - 'UInt_t' 0 - input", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("globleStyle",1158,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setstyle",893,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1166_0_14, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ssdBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1166_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ssdBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1166_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ssdBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1166_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ssdBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1166_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1166_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ssdBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1166_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ssdBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1166_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ssdBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1166_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ssdBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ssdBuilder", 1167, G__Jevp_Cint_1166_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfunctofBuilder(void) {
   /* tofBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_tofBuilder));
   G__memfunc_setup("tofBuilder",1040,G__Jevp_Cint_1167_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_tofBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_1167_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&tofBuilder::main) ), 0);
   G__memfunc_setup("parseData",917,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get_TOFTHUB",923,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - trayid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TDIGChan2TINOChan",1416,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - tdc i - - 0 - chan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValidBunchid",1197,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 4, 1, 4, 0, 
"i - - 0 - trayid i - - 0 - halftrayid "
"i - - 0 - bunchid i - - 0 - refbunchid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValidDataword",1318,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - packetid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTrayList",1208,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadValidBunchidPhase",2074,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInfoTF00X",1022,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - it I - - 0 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadHistConfig",1386,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTraymaskoutList",1980,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tdcchan2upvpdPMTchan",1985,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 3, 1, 4, 0, 
"i - - 0 - globaltdcchan i - - 0 - edgeid "
"i - - 0 - trayid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1167_0_18, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&tofBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1167_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&tofBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1167_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&tofBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1167_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&tofBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1167_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1167_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&tofBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1167_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&tofBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1167_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&tofBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1167_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&tofBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~tofBuilder", 1166, G__Jevp_Cint_1167_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfunctpcBuilder(void) {
   /* tpcBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_tpcBuilder));
   G__memfunc_setup("tpcBuilder",1038,G__Jevp_Cint_1172_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_tpcBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_1172_0_5, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&tpcBuilder::main) ), 0);
   G__memfunc_setup("setPhiAngleMap",1394,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1172_0_7, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&tpcBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1172_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&tpcBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1172_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&tpcBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1172_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&tpcBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1172_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1172_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&tpcBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1172_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&tpcBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1172_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&tpcBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1172_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&tpcBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~tpcBuilder", 1164, G__Jevp_Cint_1172_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfunctpxBuilder(void) {
   /* tpxBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_tpxBuilder));
   G__memfunc_setup("tpxBuilder",1059,G__Jevp_Cint_1177_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_tpxBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_1177_0_5, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&tpxBuilder::main) ), 0);
   G__memfunc_setup("setPhiAngleMap",1394,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1177_0_7, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&tpxBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1177_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&tpxBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1177_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&tpxBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1177_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&tpxBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1177_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1177_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&tpxBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1177_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&tpxBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1177_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&tpxBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1177_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&tpxBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~tpxBuilder", 1185, G__Jevp_Cint_1177_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfunctrgBuilder(void) {
   /* trgBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_trgBuilder));
   G__memfunc_setup("trgBuilder",1044,G__Jevp_Cint_1183_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_trgBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillQtHisto",1139,G__Jevp_Cint_1183_0_2, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - conf_num U 'TriggerDataBlk' 'TriggerDataBlk' 0 - trg "
"U 'TH1D' - 0 - sz U 'TH1D' - 0 - usec "
"U 'TProfile' - 0 - board_occ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("handleQTOccupancyPlots",2248,G__Jevp_Cint_1183_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("main",421,G__Jevp_Cint_1183_0_8, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&trgBuilder::main) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1183_0_9, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&trgBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1183_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&trgBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1183_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&trgBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1183_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&trgBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1183_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1183_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&trgBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1183_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&trgBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1183_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&trgBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1183_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&trgBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~trgBuilder", 1170, G__Jevp_Cint_1183_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncupcBuilder(void) {
   /* upcBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_upcBuilder));
   G__memfunc_setup("upcBuilder",1039,G__Jevp_Cint_1186_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_upcBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("main",421,G__Jevp_Cint_1186_0_6, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&upcBuilder::main) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1186_0_7, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&upcBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1186_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&upcBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1186_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&upcBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1186_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&upcBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1186_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1186_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&upcBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1186_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&upcBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1186_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&upcBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1186_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&upcBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~upcBuilder", 1165, G__Jevp_Cint_1186_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvpdBuilder(void) {
   /* vpdBuilder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_vpdBuilder));
   G__memfunc_setup("vpdBuilder",1041,G__Jevp_Cint_1203_0_1, 105, G__get_linked_tagnum(&G__Jevp_CintLN_vpdBuilder), -1, 0, 1, 1, 1, 0, "U 'JevpServer' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadConfig",978,G__Jevp_Cint_1203_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pulserCh",838,G__Jevp_Cint_1203_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ich", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pulserChToIndex",1537,G__Jevp_Cint_1203_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pCh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("goodHit",718,G__Jevp_Cint_1203_0_5, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - adc i - - 0 - tdc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("correctedTAC",1171,G__Jevp_Cint_1203_0_6, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'StTriggerData2016' - 0 - td i - - 0 - side "
"i - - 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("startrun",899,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stoprun",795,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("event",546,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'daqReader' - 0 - rdr", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("readParams",1024,G__Jevp_Cint_1203_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readTokenVector",1552,G__Jevp_Cint_1203_0_12, 117, G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 0, 1, 1, 1, 0, "u 'TString' - 1 - str", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readIntVector",1338,G__Jevp_Cint_1203_0_13, 117, G__get_linked_tagnum(&G__Jevp_CintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 2, 1, 1, 0, 
"u 'TString' - 1 - str i - - 0 '0' start", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("corrEast",835,G__Jevp_Cint_1203_0_14, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - iCh i - - 0 - adc "
"i - - 0 - tac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("corrWest",857,G__Jevp_Cint_1203_0_15, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - iCh i - - 0 - adc "
"i - - 0 - tac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("corrBin",719,G__Jevp_Cint_1203_0_16, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - iCh i - - 0 - adc "
"I - - 0 - bins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("main",421,G__Jevp_Cint_1203_0_17, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&vpdBuilder::main) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1203_0_18, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&vpdBuilder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1203_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vpdBuilder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1203_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&vpdBuilder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1203_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&vpdBuilder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1203_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1203_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vpdBuilder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1203_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vpdBuilder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1203_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vpdBuilder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1203_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vpdBuilder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~vpdBuilder", 1167, G__Jevp_Cint_1203_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncJevpServerMain(void) {
   /* JevpServerMain */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpServerMain));
   G__memfunc_setup("main",421,G__Jevp_Cint_1212_0_1, 121, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) G__func2void( (void (*)(int, char**))(&JevpServerMain::main) ), 0);
   G__memfunc_setup("testDisplayDef",1445,G__Jevp_Cint_1212_0_2, 121, -1, -1, 0, 1, 3, 1, 0, "C - - 0 - args", (char*)NULL, (void*) G__func2void( (void (*)(char*))(&JevpServerMain::testDisplayDef) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1212_0_3, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JevpServerMain::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1212_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpServerMain::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1212_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JevpServerMain::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1212_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JevpServerMain::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__Jevp_Cint_1212_0_7, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__Jevp_Cint_1212_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__Jevp_Cint_1212_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1212_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1212_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpServerMain::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1212_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JevpServerMain::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1212_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpServerMain::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1212_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JevpServerMain::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("JevpServerMain", 1425, G__Jevp_Cint_1212_0_15, (int) ('i'), G__get_linked_tagnum(&G__Jevp_CintLN_JevpServerMain), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("JevpServerMain", 1425, G__Jevp_Cint_1212_0_16, (int) ('i'), G__get_linked_tagnum(&G__Jevp_CintLN_JevpServerMain), -1, 0, 1, 1, 1, 0, "u 'JevpServerMain' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~JevpServerMain", 1551, G__Jevp_Cint_1212_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Jevp_Cint_1212_0_18, (int) ('u'), G__get_linked_tagnum(&G__Jevp_CintLN_JevpServerMain), -1, 1, 1, 1, 1, 0, "u 'JevpServerMain' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGTabElement2(void) {
   /* TGTabElement2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTabElement2));
   G__memfunc_setup("TGTabElement2",1198,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__Jevp_CintLN_TGTabElement2), -1, 0, 1, 1, 4, 0, "u 'TGTabElement2' - 11 - -", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__Jevp_CintLN_TGTabElement2), -1, 1, 1, 1, 4, 0, "u 'TGTabElement2' - 11 - -", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("TGTabElement2",1198,G__Jevp_Cint_1304_0_3, 105, G__get_linked_tagnum(&G__Jevp_CintLN_TGTabElement2), -1, 0, 8, 1, 1, 0, 
"U 'TGWindow' - 10 '0' p U 'TGString' - 0 '0' text "
"h - 'UInt_t' 0 '1' w h - 'UInt_t' 0 '1' h "
"k - 'GContext_t' 0 'TGTab2::GetDefaultGC()()' norm k - 'FontStruct_t' 0 'TGTab2::GetDefaultFontStruct()' font "
"h - 'UInt_t' 0 'kRaisedFrame' options k - 'Pixel_t' 0 'GetDefaultFrameBackground()' back", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawBorder",1004,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDefaultSize",1408,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__Jevp_CintLN_TGDimension), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetText",709,G__Jevp_Cint_1304_0_6, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TGString), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetString",919,G__Jevp_Cint_1304_0_7, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleButton",1224,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'Event_t' - 0 - event", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetText",721,G__Jevp_Cint_1304_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGString' - 0 - text", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnabled",983,G__Jevp_Cint_1304_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsEnabled",871,G__Jevp_Cint_1304_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEditDisabled",1482,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowClose",919,G__Jevp_Cint_1304_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsCloseShown",1217,G__Jevp_Cint_1304_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActive",904,G__Jevp_Cint_1304_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsActive",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1304_0_17, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGTabElement2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1304_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGTabElement2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1304_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGTabElement2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1304_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGTabElement2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1304_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1304_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGTabElement2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1304_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGTabElement2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1304_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGTabElement2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1304_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGTabElement2::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGTabElement2", 1324, G__Jevp_Cint_1304_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGTab2(void) {
   /* TGTab2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2));
   G__memfunc_setup("ChangeTab",861,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - tabIndex g - 'Bool_t' 0 'kTRUE' emit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGTab2",484,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2), -1, 0, 1, 1, 4, 0, "u 'TGTab2' - 11 - -", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2), -1, 1, 1, 1, 4, 0, "u 'TGTab2' - 11 - -", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("GetDefaultFontStruct",2049,G__Jevp_Cint_1305_0_4, 107, -1, G__defined_typename("FontStruct_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (FontStruct_t (*)())(&TGTab2::GetDefaultFontStruct) ), 0);
   G__memfunc_setup("GetDefaultGC",1135,G__Jevp_Cint_1305_0_5, 117, G__get_linked_tagnum(&G__Jevp_CintLN_TGGC), -1, 1, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const TGGC& (*)())(&TGTab2::GetDefaultGC) ), 0);
   G__memfunc_setup("HandleDisplayShift",1824,G__Jevp_Cint_1305_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - direction", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MapWindow",918,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MapSubwindows",1363,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "override mapsubwindows...", (void*) NULL, 1);
   G__memfunc_setup("TGTab2",484,G__Jevp_Cint_1305_0_9, 105, G__get_linked_tagnum(&G__Jevp_CintLN_TGTab2), -1, 0, 7, 1, 1, 0, 
"U 'TGWindow' - 10 '0' p h - 'UInt_t' 0 '1' w "
"h - 'UInt_t' 0 '1' h k - 'GContext_t' 0 'GetDefaultGC()()' norm "
"k - 'FontStruct_t' 0 'GetDefaultFontStruct()' font h - 'UInt_t' 0 'kChildFrame' options "
"k - 'Pixel_t' 0 'GetDefaultFrameBackground()' back", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTab",544,G__Jevp_Cint_1305_0_10, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TGCompositeFrame), -1, 0, 1, 1, 1, 0, "U 'TGString' - 0 - text", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddTab",544,G__Jevp_Cint_1305_0_11, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TGCompositeFrame), -1, 0, 1, 1, 1, 0, "C - - 10 - text", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddTab",544,G__Jevp_Cint_1305_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - text U 'TGCompositeFrame' - 0 - cf", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddTab",544,G__Jevp_Cint_1305_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGString' - 0 - text U 'TGCompositeFrame' - 0 - cf", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NewTab",577,G__Jevp_Cint_1305_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"tab\"' text", "*MENU*icon=bld_newtab.png*", (void*) NULL, 1);
   G__memfunc_setup("RemoveTab",901,G__Jevp_Cint_1305_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '-1' tabIndex g - 'Bool_t' 0 'kTRUE' storeRemoved", "*MENU*icon=bld_removetab.png*", (void*) NULL, 1);
   G__memfunc_setup("SetTab",579,G__Jevp_Cint_1305_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - tabIndex g - 'Bool_t' 0 'kTRUE' emit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTab",579,G__Jevp_Cint_1305_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - name g - 'Bool_t' 0 'kTRUE' emit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawBorder",1004,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetContainer",1219,G__Jevp_Cint_1305_0_19, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TGCompositeFrame), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrent",1027,G__Jevp_Cint_1305_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTabContainer",1498,G__Jevp_Cint_1305_0_21, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TGCompositeFrame), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - tabIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTabContainer",1498,G__Jevp_Cint_1305_0_22, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TGCompositeFrame), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTabTab",846,G__Jevp_Cint_1305_0_23, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TGTabElement2), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - tabIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTabTab",846,G__Jevp_Cint_1305_0_24, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TGTabElement2), -1, 0, 1, 1, 1, 8, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentContainer",1958,G__Jevp_Cint_1305_0_25, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TGCompositeFrame), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrentTab",1306,G__Jevp_Cint_1305_0_26, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TGTabElement2), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTabHeight",1168,G__Jevp_Cint_1305_0_27, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfTabs",1480,G__Jevp_Cint_1305_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnabled",983,G__Jevp_Cint_1305_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - tabIndex g - 'Bool_t' 0 'kTRUE' on", "*MENU*", (void*) NULL, 1);
   G__memfunc_setup("SetText",721,G__Jevp_Cint_1305_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"tab\"' text", "*MENU*icon=bld_rename.png*", (void*) NULL, 1);
   G__memfunc_setup("IsEnabled",871,G__Jevp_Cint_1305_0_31, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - tabIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CloseTab",781,G__Jevp_Cint_1305_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("Removed",722,G__Jevp_Cint_1305_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("Selected",809,G__Jevp_Cint_1305_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", "*SIGNAL*", (void*) NULL, 1);
   G__memfunc_setup("GetLayoutManager",1625,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TGLayoutManager), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1305_0_37, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGTab2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1305_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGTab2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1305_0_39, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGTab2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1305_0_40, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGTab2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1305_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1305_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGTab2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1305_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGTab2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1305_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGTab2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1305_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGTab2::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGTab2", 610, G__Jevp_Cint_1305_0_49, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGTabLayout2(void) {
   /* TGTabLayout2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TGTabLayout2));
   G__memfunc_setup("TGTabLayout2",1122,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__Jevp_CintLN_TGTabLayout2), -1, 0, 1, 1, 4, 0, "u 'TGTabLayout2' - 11 - -", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__Jevp_CintLN_TGTabLayout2), -1, 1, 1, 1, 4, 0, "u 'TGTabLayout2' - 11 - -", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("TGTabLayout2",1122,G__Jevp_Cint_1306_0_3, 105, G__get_linked_tagnum(&G__Jevp_CintLN_TGTabLayout2), -1, 0, 1, 1, 1, 0, "U 'TGTab2' - 0 - main", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Layout",638,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDefaultSize",1408,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__Jevp_CintLN_TGDimension), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1306_0_7, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGTabLayout2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1306_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGTabLayout2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1306_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGTabLayout2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1306_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGTabLayout2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1306_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1306_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGTabLayout2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1306_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGTabLayout2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1306_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGTabLayout2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1306_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGTabLayout2::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGTabLayout2", 1248, G__Jevp_Cint_1306_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncJevpViewer(void) {
   /* JevpViewer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpViewer));
   G__memfunc_setup("GetListOfSignals",1602,G__Jevp_Cint_1336_0_1, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__Jevp_Cint_1336_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__Jevp_Cint_1336_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,G__Jevp_Cint_1336_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowPriority",1172,G__Jevp_Cint_1336_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmitVA",550,G__Jevp_Cint_1336_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1336_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1336_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1336_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1336_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1336_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1336_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1336_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1336_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1336_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1336_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1336_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1336_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1336_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1336_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1336_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1336_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,G__Jevp_Cint_1336_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangedBy",869,G__Jevp_Cint_1336_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Message",709,G__Jevp_Cint_1336_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JevpViewer",1031,G__Jevp_Cint_1336_0_26, 105, G__get_linked_tagnum(&G__Jevp_CintLN_JevpViewer), -1, 0, 4, 1, 1, 0, 
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h C - - 0 - args", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parseArgs",936,G__Jevp_Cint_1336_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - args", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("update",643,G__Jevp_Cint_1336_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("updateRunStatus",1596,G__Jevp_Cint_1336_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("updateServerTags",1673,G__Jevp_Cint_1336_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("updateCurrentPlot",1797,G__Jevp_Cint_1336_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doMenu",616,G__Jevp_Cint_1336_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExitViewer",1036,G__Jevp_Cint_1336_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("refreshTimerFired",1754,G__Jevp_Cint_1336_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("entryPoint",1084,G__Jevp_Cint_1336_0_35, 121, -1, -1, 0, 1, 3, 1, 0, "C - - 0 - args", (char*)NULL, (void*) G__func2void( (void (*)(char*))(&JevpViewer::entryPoint) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1336_0_36, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JevpViewer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1336_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpViewer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1336_0_38, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JevpViewer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1336_0_39, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JevpViewer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1336_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1336_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpViewer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1336_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JevpViewer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1336_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpViewer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1336_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JevpViewer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~JevpViewer", 1157, G__Jevp_Cint_1336_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCanvasFrame(void) {
   /* CanvasFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_CanvasFrame));
   G__memfunc_setup("GetListOfSignals",1602,G__Jevp_Cint_1337_0_1, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__Jevp_Cint_1337_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__Jevp_Cint_1337_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LowPriority",1172,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EmitVA",550,G__Jevp_Cint_1337_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1337_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1337_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1337_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1337_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1337_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1337_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1337_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1337_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1337_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1337_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1337_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1337_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1337_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1337_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1337_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1337_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChangedBy",869,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Message",709,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CanvasFrame",1095,G__Jevp_Cint_1337_0_26, 105, G__get_linked_tagnum(&G__Jevp_CintLN_CanvasFrame), -1, 0, 3, 1, 1, 0, 
"U 'TGWindow' - 10 - p U 'EthClient' - 0 - server "
"i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoEvent",693,G__Jevp_Cint_1337_0_27, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - cmd i - 'Int_t' 0 - x "
"i - 'Int_t' 0 - y U 'TObject' - 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1337_0_28, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&CanvasFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1337_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CanvasFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1337_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&CanvasFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1337_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&CanvasFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1337_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1337_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CanvasFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1337_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CanvasFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1337_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&CanvasFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1337_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&CanvasFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CanvasFrame", 1221, G__Jevp_Cint_1337_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTabHelper(void) {
   /* TabHelper */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_TabHelper));
   G__memfunc_setup("GetListOfSignals",1602,G__Jevp_Cint_1340_0_1, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__Jevp_Cint_1340_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__Jevp_Cint_1340_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,G__Jevp_Cint_1340_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowPriority",1172,G__Jevp_Cint_1340_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmitVA",550,G__Jevp_Cint_1340_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1340_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1340_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1340_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1340_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1340_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1340_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1340_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1340_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1340_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1340_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1340_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1340_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1340_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1340_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1340_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1340_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,G__Jevp_Cint_1340_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangedBy",869,G__Jevp_Cint_1340_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Message",709,G__Jevp_Cint_1340_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TabHelper",887,G__Jevp_Cint_1340_0_26, 105, G__get_linked_tagnum(&G__Jevp_CintLN_TabHelper), -1, 0, 1, 1, 1, 0, "U 'JevpViewer' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("buildTabs",922,G__Jevp_Cint_1340_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGTab2' - 0 - main", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rebuildTabs",1137,G__Jevp_Cint_1340_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCurrentContainer",1990,G__Jevp_Cint_1340_0_29, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TGCompositeFrame), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deleteTab",906,G__Jevp_Cint_1340_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGTab2' - 0 - tab i - - 0 '1' doDelete", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillTab",702,G__Jevp_Cint_1340_0_31, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TGTab2' - 0 - tab U 'EthClient' - 0 - client "
"h - 'u_int' 0 - combo_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tabSelected",1120,G__Jevp_Cint_1340_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1340_0_33, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TabHelper::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1340_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TabHelper::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1340_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TabHelper::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1340_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TabHelper::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1340_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1340_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TabHelper::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1340_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TabHelper::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1340_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TabHelper::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1340_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TabHelper::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TabHelper", 1013, G__Jevp_Cint_1340_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncJevpPlotInfo(void) {
   /* JevpPlotInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotInfo));
   G__memfunc_setup("GetListOfSignals",1602,G__Jevp_Cint_1341_0_1, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__Jevp_Cint_1341_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__Jevp_Cint_1341_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,G__Jevp_Cint_1341_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowPriority",1172,G__Jevp_Cint_1341_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmitVA",550,G__Jevp_Cint_1341_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1341_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1341_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1341_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1341_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1341_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1341_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1341_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1341_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1341_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1341_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1341_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1341_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1341_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1341_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1341_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1341_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,G__Jevp_Cint_1341_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangedBy",869,G__Jevp_Cint_1341_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Message",709,G__Jevp_Cint_1341_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deleteItems",1141,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addJevpPlot",1117,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'JevpPlot' - 0 - plot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getJevpPlot",1140,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot), -1, 0, 1, 1, 4, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPlotItem",1111,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TObject' - 0 - mplot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("downloadPlot",1271,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("downloadAllPlots",1667,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawEmptySpace",1449,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawNoDataPresent",1734,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawCrossOfDeath",1619,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JevpPlotInfo",1216,G__Jevp_Cint_1341_0_35, 105, G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlotInfo), -1, 0, 3, 1, 1, 0, 
"U 'CanvasFrame' - 0 - parent U 'EthClient' - 0 - ethclient "
"i - - 0 - combo_index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawOnScreen",1195,G__Jevp_Cint_1341_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPlotAtIdx",1209,G__Jevp_Cint_1341_0_37, 85, G__get_linked_tagnum(&G__Jevp_CintLN_JevpPlot), -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDisplay",1046,G__Jevp_Cint_1341_0_38, 85, G__get_linked_tagnum(&G__Jevp_CintLN_DisplayNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1341_0_39, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JevpPlotInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1341_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpPlotInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1341_0_41, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JevpPlotInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1341_0_42, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JevpPlotInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1341_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1341_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpPlotInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1341_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JevpPlotInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1341_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JevpPlotInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1341_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JevpPlotInfo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~JevpPlotInfo", 1342, G__Jevp_Cint_1341_0_51, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDummyFrame(void) {
   /* DummyFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_DummyFrame));
   G__memfunc_setup("GetListOfSignals",1602,G__Jevp_Cint_1342_0_1, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__Jevp_Cint_1342_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__Jevp_Cint_1342_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LowPriority",1172,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EmitVA",550,G__Jevp_Cint_1342_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1342_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1342_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1342_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1342_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1342_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1342_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1342_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1342_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1342_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1342_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1342_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1342_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1342_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1342_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1342_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1342_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChangedBy",869,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Message",709,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DummyFrame",1015,G__Jevp_Cint_1342_0_26, 105, G__get_linked_tagnum(&G__Jevp_CintLN_DummyFrame), -1, 0, 3, 1, 1, 0, 
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1342_0_27, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DummyFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1342_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DummyFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1342_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DummyFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1342_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DummyFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1342_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1342_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DummyFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1342_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DummyFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1342_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DummyFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1342_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DummyFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~DummyFrame", 1141, G__Jevp_Cint_1342_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncZoomFrame(void) {
   /* ZoomFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_ZoomFrame));
   G__memfunc_setup("GetListOfSignals",1602,G__Jevp_Cint_1343_0_1, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__Jevp_Cint_1343_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__Jevp_Cint_1343_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LowPriority",1172,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EmitVA",550,G__Jevp_Cint_1343_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1343_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1343_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1343_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1343_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1343_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1343_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1343_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1343_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1343_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1343_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1343_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1343_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1343_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1343_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1343_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1343_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChangedBy",869,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Message",709,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ZoomFrame",912,G__Jevp_Cint_1343_0_26, 105, G__get_linked_tagnum(&G__Jevp_CintLN_ZoomFrame), -1, 0, 2, 1, 1, 0, 
"U 'TGWindow' - 0 - p U 'JevpPlot' - 0 - plot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("exit",442,G__Jevp_Cint_1343_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("expand",640,G__Jevp_Cint_1343_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("contract",862,G__Jevp_Cint_1343_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1343_0_30, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ZoomFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1343_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ZoomFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1343_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ZoomFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1343_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ZoomFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1343_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1343_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ZoomFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1343_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ZoomFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1343_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ZoomFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1343_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ZoomFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ZoomFrame", 1038, G__Jevp_Cint_1343_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyMainFrame(void) {
   /* MyMainFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_MyMainFrame));
   G__memfunc_setup("GetListOfSignals",1602,G__Jevp_Cint_1344_0_1, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__Jevp_Cint_1344_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__Jevp_Cint_1344_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,G__Jevp_Cint_1344_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowPriority",1172,G__Jevp_Cint_1344_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmitVA",550,G__Jevp_Cint_1344_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1344_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1344_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1344_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1344_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1344_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1344_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1344_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1344_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1344_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1344_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1344_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1344_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1344_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1344_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1344_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1344_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,G__Jevp_Cint_1344_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangedBy",869,G__Jevp_Cint_1344_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Message",709,G__Jevp_Cint_1344_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyMainFrame",1078,G__Jevp_Cint_1344_0_26, 105, G__get_linked_tagnum(&G__Jevp_CintLN_MyMainFrame), -1, 0, 3, 1, 1, 0, 
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("buildTabs1",971,G__Jevp_Cint_1344_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("buildTabs2",972,G__Jevp_Cint_1344_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoTab",458,G__Jevp_Cint_1344_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("doMenu",616,G__Jevp_Cint_1344_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoButton",815,G__Jevp_Cint_1344_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("example",748,G__Jevp_Cint_1344_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyMainFrame::example) ), 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1344_0_33, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MyMainFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1344_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyMainFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1344_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MyMainFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1344_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MyMainFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1344_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1344_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyMainFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1344_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyMainFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1344_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MyMainFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1344_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MyMainFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MyMainFrame", 1204, G__Jevp_Cint_1344_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDrawFrame(void) {
   /* DrawFrame */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__Jevp_CintLN_DrawFrame));
   G__memfunc_setup("GetListOfSignals",1602,G__Jevp_Cint_1345_0_1, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__Jevp_Cint_1345_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__Jevp_Cint_1345_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LowPriority",1172,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EmitVA",550,G__Jevp_Cint_1345_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1345_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1345_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1345_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1345_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1345_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1345_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1345_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1345_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1345_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1345_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1345_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1345_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1345_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1345_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1345_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__Jevp_Cint_1345_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChangedBy",869,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Message",709,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawFrame",889,G__Jevp_Cint_1345_0_26, 105, G__get_linked_tagnum(&G__Jevp_CintLN_DrawFrame), -1, 0, 4, 1, 1, 0, 
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoDraw",577,G__Jevp_Cint_1345_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Jevp_Cint_1345_0_28, 85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DrawFrame::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Jevp_Cint_1345_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DrawFrame::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Jevp_Cint_1345_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DrawFrame::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Jevp_Cint_1345_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DrawFrame::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__Jevp_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Jevp_Cint_1345_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Jevp_Cint_1345_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DrawFrame::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Jevp_Cint_1345_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DrawFrame::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Jevp_Cint_1345_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DrawFrame::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Jevp_Cint_1345_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DrawFrame::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~DrawFrame", 1015, G__Jevp_Cint_1345_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncJevp_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {
}

static void G__cpp_setup_global9() {
}

static void G__cpp_setup_global10() {
}

static void G__cpp_setup_global11() {
}

static void G__cpp_setup_global12() {
}

static void G__cpp_setup_global13() {
}

static void G__cpp_setup_global14() {
}

static void G__cpp_setup_global15() {
}

static void G__cpp_setup_global16() {
}

static void G__cpp_setup_global17() {
}

static void G__cpp_setup_global18() {
}

static void G__cpp_setup_global19() {
}

static void G__cpp_setup_global20() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalJevp_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
  G__cpp_setup_global9();
  G__cpp_setup_global10();
  G__cpp_setup_global11();
  G__cpp_setup_global12();
  G__cpp_setup_global13();
  G__cpp_setup_global14();
  G__cpp_setup_global15();
  G__cpp_setup_global16();
  G__cpp_setup_global17();
  G__cpp_setup_global18();
  G__cpp_setup_global19();
  G__cpp_setup_global20();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcJevp_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__Jevp_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TTimer = { "TTimer" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__Jevp_CintLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_THashTable = { "THashTable" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_THashList = { "THashList" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TH1I = { "TH1I" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_Event_t = { "Event_t" , 115 , -1 };
G__linked_taginfo G__Jevp_CintLN_TAttBBox2D = { "TAttBBox2D" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TAttText = { "TAttText" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TLegendEntry = { "TLegendEntry" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TLegend = { "TLegend" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_PlotHisto = { "PlotHisto" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_JevpPlot = { "JevpPlot" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_BuilderStatus = { "BuilderStatus" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TText = { "TText" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TLatex = { "TLatex" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_JLatex = { "JLatex" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TLine = { "TLine" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_JLine = { "JLine" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TQObjSender = { "TQObjSender" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_daqReader = { "daqReader" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_EvpMessage = { "EvpMessage" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_DisplayNode = { "DisplayNode" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_RunStatus = { "RunStatus" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_JevpServer = { "JevpServer" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_RtsTimer_root = { "RtsTimer_root" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_JevpPlotSet = { "JevpPlotSet" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_StTriggerData = { "StTriggerData" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_JevpBuilder = { "JevpBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TH2I = { "TH2I" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_baseBuilder = { "baseBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_bbcBuilder = { "bbcBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_bbcBuildercLcL713 = { "bbcBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_StEmcDecoder = { "StEmcDecoder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_bemcBuilder = { "bemcBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_daqBuilder = { "daqBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_daqBuildercLcL718 = { "daqBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_eemcBuilder = { "eemcBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_epdBuilder = { "epdBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_epdBuildercLcL726 = { "epdBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_epdBuildercLcLEPDAnalysisMap = { "epdBuilder::EPDAnalysisMap" , 115 , -1 };
G__linked_taginfo G__Jevp_CintLN_etofBuilder = { "etofBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_etofBuildercLcL732 = { "etofBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_etofBuildercLcL734 = { "etofBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_TRandom = { "TRandom" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_daq_dta = { "daq_dta" , 115 , -1 };
G__linked_taginfo G__Jevp_CintLN_fgtBuilder = { "fgtBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_fgtBuildercLcL739 = { "fgtBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_fgtBuildercLcL741 = { "fgtBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_fgtBuildercLcL743 = { "fgtBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_fgtBuildercLcL745 = { "fgtBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_fmsBuilder = { "fmsBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_listlEJevpPlotmUcOallocatorlEJevpPlotmUgRsPgR = { "list<JevpPlot*,allocator<JevpPlot*> >" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_maplEintcOTH1mUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH1mUgRsPgRsPgR = { "map<int,TH1*,less<int>,allocator<pair<const int,TH1*> > >" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_fpdBuilder = { "fpdBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_fpdBuildercLcL783 = { "fpdBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_fpsBuilder = { "fpsBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_fpsBuildercLcL786 = { "fpsBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_fstBuilder = { "fstBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_fstBuildercLcL789 = { "fstBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_fstBuildercLcL791 = { "fstBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_fstBuildercLcL793 = { "fstBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_fstBuildercLcL795 = { "fstBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_fstBuildercLcL797 = { "fstBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_fstBuildercLcL799 = { "fstBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_fstBuildercLcL801 = { "fstBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_fstBuildercLcL803 = { "fstBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_fstBuildercLcL805 = { "fstBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_gmtBuilder = { "gmtBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_gmtBuildercLcL807 = { "gmtBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_gmtBuildercLcL809 = { "gmtBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_gmtBuildercLcL811 = { "gmtBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_gmtBuildercLcL813 = { "gmtBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_gmtBuildercLcL815 = { "gmtBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_TriggerDataBlk = { "TriggerDataBlk" , 115 , -1 };
G__linked_taginfo G__Jevp_CintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TH3D = { "TH3D" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TStopwatch = { "TStopwatch" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_hlt_track = { "hlt_track" , 115 , -1 };
G__linked_taginfo G__Jevp_CintLN_HLT_EVE = { "HLT_EVE" , 115 , -1 };
G__linked_taginfo G__Jevp_CintLN_hltBuilder = { "hltBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_hltBuildercLcLhbt_event_info = { "hltBuilder::hbt_event_info" , 115 , -1 };
G__linked_taginfo G__Jevp_CintLN_hltBuildercLcLeventCut_info = { "hltBuilder::eventCut_info" , 115 , -1 };
G__linked_taginfo G__Jevp_CintLN_hltBuildercLcLtrackCut_info = { "hltBuilder::trackCut_info" , 115 , -1 };
G__linked_taginfo G__Jevp_CintLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__Jevp_CintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_HltphiBuilder = { "HltphiBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_istBuilder = { "istBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_istBuildercLcL1088 = { "istBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_istBuildercLcL1090 = { "istBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_istBuildercLcL1092 = { "istBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_istBuildercLcL1094 = { "istBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_istBuildercLcL1096 = { "istBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_istBuildercLcL1098 = { "istBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_istBuildercLcL1100 = { "istBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_istBuildercLcL1102 = { "istBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_istBuildercLcL1104 = { "istBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_LaserReader = { "LaserReader" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_itpcBuilder = { "itpcBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_itpcBuildercLcL1107 = { "itpcBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_itpcBuildercLcL1109 = { "itpcBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_l3Builder = { "l3Builder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_l3BuildercLcL1112 = { "l3Builder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_l4Builder = { "l4Builder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_mtdBuilder = { "mtdBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_mtdBuildercLcL1119 = { "mtdBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_ppBuilder = { "ppBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_ppBuildercLcL1122 = { "ppBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_ppBuildercLcL1124 = { "ppBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_ppBuildercLcL1126 = { "ppBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_ppBuildercLcL1128 = { "ppBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_bitset2DlE928cO960gR = { "bitset2D<928,960>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_bitsetlE890880gR = { "bitset<890880>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_pxlBuilder = { "pxlBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_pxlBuildercLcL1135 = { "pxlBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_ssdBuilder = { "ssdBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_tofBuilder = { "tofBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_tofBuildercLcL1168 = { "tofBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_tofBuildercLcL1170 = { "tofBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_tpcBuilder = { "tpcBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_tpcBuildercLcL1173 = { "tpcBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_tpcBuildercLcL1175 = { "tpcBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_tpxBuilder = { "tpxBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_tpxBuildercLcL1178 = { "tpxBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_tpxBuildercLcL1180 = { "tpxBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_trgBuilder = { "trgBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_trgBuildercLcL1184 = { "trgBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_upcBuilder = { "upcBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_upcBuildercLcL1187 = { "upcBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_StTriggerData2016 = { "StTriggerData2016" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_vpdBuilder = { "vpdBuilder" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_vpdBuildercLcL1207 = { "vpdBuilder::" , 117 , -1 };
G__linked_taginfo G__Jevp_CintLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_JevpServerMain = { "JevpServerMain" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGPicture = { "TGPicture" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGGC = { "TGGC" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGFont = { "TGFont" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGDimension = { "TGDimension" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGLayoutManager = { "TGLayoutManager" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGString = { "TGString" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGTextButton = { "TGTextButton" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGHorizontalFrame = { "TGHorizontalFrame" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGWidget = { "TGWidget" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGPopupMenu = { "TGPopupMenu" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGButton = { "TGButton" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGCanvas = { "TGCanvas" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TRootEmbeddedCanvas = { "TRootEmbeddedCanvas" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGTabElement2 = { "TGTabElement2" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGTab2 = { "TGTab2" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TGTabLayout2 = { "TGTabLayout2" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_EthClient = { "EthClient" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_JevpViewer = { "JevpViewer" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_CanvasFrame = { "CanvasFrame" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_EthServers = { "EthServers" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_MenuHelper = { "MenuHelper" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_TabHelper = { "TabHelper" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_JevpPlotInfo = { "JevpPlotInfo" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_DummyFrame = { "DummyFrame" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_ZoomFrame = { "ZoomFrame" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_MyMainFrame = { "MyMainFrame" , 99 , -1 };
G__linked_taginfo G__Jevp_CintLN_DrawFrame = { "DrawFrame" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableJevp_Cint() {
  G__Jevp_CintLN_TClass.tagnum = -1 ;
  G__Jevp_CintLN_TBuffer.tagnum = -1 ;
  G__Jevp_CintLN_TMemberInspector.tagnum = -1 ;
  G__Jevp_CintLN_TObject.tagnum = -1 ;
  G__Jevp_CintLN_TNamed.tagnum = -1 ;
  G__Jevp_CintLN_TString.tagnum = -1 ;
  G__Jevp_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__Jevp_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__Jevp_CintLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__Jevp_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__Jevp_CintLN_string.tagnum = -1 ;
  G__Jevp_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__Jevp_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Jevp_CintLN_TList.tagnum = -1 ;
  G__Jevp_CintLN_TObjArray.tagnum = -1 ;
  G__Jevp_CintLN_TTimer.tagnum = -1 ;
  G__Jevp_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__Jevp_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Jevp_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__Jevp_CintLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__Jevp_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Jevp_CintLN_THashTable.tagnum = -1 ;
  G__Jevp_CintLN_THashList.tagnum = -1 ;
  G__Jevp_CintLN_TAttLine.tagnum = -1 ;
  G__Jevp_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__Jevp_CintLN_TF1.tagnum = -1 ;
  G__Jevp_CintLN_TH1D.tagnum = -1 ;
  G__Jevp_CintLN_TH1.tagnum = -1 ;
  G__Jevp_CintLN_TH1I.tagnum = -1 ;
  G__Jevp_CintLN_TH1F.tagnum = -1 ;
  G__Jevp_CintLN_Event_t.tagnum = -1 ;
  G__Jevp_CintLN_TAttBBox2D.tagnum = -1 ;
  G__Jevp_CintLN_TAttText.tagnum = -1 ;
  G__Jevp_CintLN_TLegendEntry.tagnum = -1 ;
  G__Jevp_CintLN_TLegend.tagnum = -1 ;
  G__Jevp_CintLN_PlotHisto.tagnum = -1 ;
  G__Jevp_CintLN_JevpPlot.tagnum = -1 ;
  G__Jevp_CintLN_BuilderStatus.tagnum = -1 ;
  G__Jevp_CintLN_TText.tagnum = -1 ;
  G__Jevp_CintLN_TLatex.tagnum = -1 ;
  G__Jevp_CintLN_JLatex.tagnum = -1 ;
  G__Jevp_CintLN_TLine.tagnum = -1 ;
  G__Jevp_CintLN_JLine.tagnum = -1 ;
  G__Jevp_CintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__Jevp_CintLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Jevp_CintLN_TQObject.tagnum = -1 ;
  G__Jevp_CintLN_TQObjSender.tagnum = -1 ;
  G__Jevp_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__Jevp_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__Jevp_CintLN_daqReader.tagnum = -1 ;
  G__Jevp_CintLN_EvpMessage.tagnum = -1 ;
  G__Jevp_CintLN_DisplayNode.tagnum = -1 ;
  G__Jevp_CintLN_RunStatus.tagnum = -1 ;
  G__Jevp_CintLN_JevpServer.tagnum = -1 ;
  G__Jevp_CintLN_RtsTimer_root.tagnum = -1 ;
  G__Jevp_CintLN_JevpPlotSet.tagnum = -1 ;
  G__Jevp_CintLN_StTriggerData.tagnum = -1 ;
  G__Jevp_CintLN_JevpBuilder.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__Jevp_CintLN_TProfile.tagnum = -1 ;
  G__Jevp_CintLN_TH2I.tagnum = -1 ;
  G__Jevp_CintLN_TH2F.tagnum = -1 ;
  G__Jevp_CintLN_TH2D.tagnum = -1 ;
  G__Jevp_CintLN_baseBuilder.tagnum = -1 ;
  G__Jevp_CintLN_bbcBuilder.tagnum = -1 ;
  G__Jevp_CintLN_bbcBuildercLcL713.tagnum = -1 ;
  G__Jevp_CintLN_StEmcDecoder.tagnum = -1 ;
  G__Jevp_CintLN_bemcBuilder.tagnum = -1 ;
  G__Jevp_CintLN_daqBuilder.tagnum = -1 ;
  G__Jevp_CintLN_daqBuildercLcL718.tagnum = -1 ;
  G__Jevp_CintLN_eemcBuilder.tagnum = -1 ;
  G__Jevp_CintLN_epdBuilder.tagnum = -1 ;
  G__Jevp_CintLN_epdBuildercLcL726.tagnum = -1 ;
  G__Jevp_CintLN_epdBuildercLcLEPDAnalysisMap.tagnum = -1 ;
  G__Jevp_CintLN_etofBuilder.tagnum = -1 ;
  G__Jevp_CintLN_etofBuildercLcL732.tagnum = -1 ;
  G__Jevp_CintLN_etofBuildercLcL734.tagnum = -1 ;
  G__Jevp_CintLN_TRandom.tagnum = -1 ;
  G__Jevp_CintLN_daq_dta.tagnum = -1 ;
  G__Jevp_CintLN_fgtBuilder.tagnum = -1 ;
  G__Jevp_CintLN_fgtBuildercLcL739.tagnum = -1 ;
  G__Jevp_CintLN_fgtBuildercLcL741.tagnum = -1 ;
  G__Jevp_CintLN_fgtBuildercLcL743.tagnum = -1 ;
  G__Jevp_CintLN_fgtBuildercLcL745.tagnum = -1 ;
  G__Jevp_CintLN_fmsBuilder.tagnum = -1 ;
  G__Jevp_CintLN_listlEJevpPlotmUcOallocatorlEJevpPlotmUgRsPgR.tagnum = -1 ;
  G__Jevp_CintLN_maplEintcOTH1mUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH1mUgRsPgRsPgR.tagnum = -1 ;
  G__Jevp_CintLN_fpdBuilder.tagnum = -1 ;
  G__Jevp_CintLN_fpdBuildercLcL783.tagnum = -1 ;
  G__Jevp_CintLN_fpsBuilder.tagnum = -1 ;
  G__Jevp_CintLN_fpsBuildercLcL786.tagnum = -1 ;
  G__Jevp_CintLN_fstBuilder.tagnum = -1 ;
  G__Jevp_CintLN_fstBuildercLcL789.tagnum = -1 ;
  G__Jevp_CintLN_fstBuildercLcL791.tagnum = -1 ;
  G__Jevp_CintLN_fstBuildercLcL793.tagnum = -1 ;
  G__Jevp_CintLN_fstBuildercLcL795.tagnum = -1 ;
  G__Jevp_CintLN_fstBuildercLcL797.tagnum = -1 ;
  G__Jevp_CintLN_fstBuildercLcL799.tagnum = -1 ;
  G__Jevp_CintLN_fstBuildercLcL801.tagnum = -1 ;
  G__Jevp_CintLN_fstBuildercLcL803.tagnum = -1 ;
  G__Jevp_CintLN_fstBuildercLcL805.tagnum = -1 ;
  G__Jevp_CintLN_gmtBuilder.tagnum = -1 ;
  G__Jevp_CintLN_gmtBuildercLcL807.tagnum = -1 ;
  G__Jevp_CintLN_gmtBuildercLcL809.tagnum = -1 ;
  G__Jevp_CintLN_gmtBuildercLcL811.tagnum = -1 ;
  G__Jevp_CintLN_gmtBuildercLcL813.tagnum = -1 ;
  G__Jevp_CintLN_gmtBuildercLcL815.tagnum = -1 ;
  G__Jevp_CintLN_TriggerDataBlk.tagnum = -1 ;
  G__Jevp_CintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__Jevp_CintLN_TH3D.tagnum = -1 ;
  G__Jevp_CintLN_TStopwatch.tagnum = -1 ;
  G__Jevp_CintLN_hlt_track.tagnum = -1 ;
  G__Jevp_CintLN_HLT_EVE.tagnum = -1 ;
  G__Jevp_CintLN_hltBuilder.tagnum = -1 ;
  G__Jevp_CintLN_hltBuildercLcLhbt_event_info.tagnum = -1 ;
  G__Jevp_CintLN_hltBuildercLcLeventCut_info.tagnum = -1 ;
  G__Jevp_CintLN_hltBuildercLcLtrackCut_info.tagnum = -1 ;
  G__Jevp_CintLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__Jevp_CintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__Jevp_CintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Jevp_CintLN_HltphiBuilder.tagnum = -1 ;
  G__Jevp_CintLN_istBuilder.tagnum = -1 ;
  G__Jevp_CintLN_istBuildercLcL1088.tagnum = -1 ;
  G__Jevp_CintLN_istBuildercLcL1090.tagnum = -1 ;
  G__Jevp_CintLN_istBuildercLcL1092.tagnum = -1 ;
  G__Jevp_CintLN_istBuildercLcL1094.tagnum = -1 ;
  G__Jevp_CintLN_istBuildercLcL1096.tagnum = -1 ;
  G__Jevp_CintLN_istBuildercLcL1098.tagnum = -1 ;
  G__Jevp_CintLN_istBuildercLcL1100.tagnum = -1 ;
  G__Jevp_CintLN_istBuildercLcL1102.tagnum = -1 ;
  G__Jevp_CintLN_istBuildercLcL1104.tagnum = -1 ;
  G__Jevp_CintLN_LaserReader.tagnum = -1 ;
  G__Jevp_CintLN_itpcBuilder.tagnum = -1 ;
  G__Jevp_CintLN_itpcBuildercLcL1107.tagnum = -1 ;
  G__Jevp_CintLN_itpcBuildercLcL1109.tagnum = -1 ;
  G__Jevp_CintLN_l3Builder.tagnum = -1 ;
  G__Jevp_CintLN_l3BuildercLcL1112.tagnum = -1 ;
  G__Jevp_CintLN_l4Builder.tagnum = -1 ;
  G__Jevp_CintLN_mtdBuilder.tagnum = -1 ;
  G__Jevp_CintLN_mtdBuildercLcL1119.tagnum = -1 ;
  G__Jevp_CintLN_ppBuilder.tagnum = -1 ;
  G__Jevp_CintLN_ppBuildercLcL1122.tagnum = -1 ;
  G__Jevp_CintLN_ppBuildercLcL1124.tagnum = -1 ;
  G__Jevp_CintLN_ppBuildercLcL1126.tagnum = -1 ;
  G__Jevp_CintLN_ppBuildercLcL1128.tagnum = -1 ;
  G__Jevp_CintLN_bitset2DlE928cO960gR.tagnum = -1 ;
  G__Jevp_CintLN_bitsetlE890880gR.tagnum = -1 ;
  G__Jevp_CintLN_pxlBuilder.tagnum = -1 ;
  G__Jevp_CintLN_pxlBuildercLcL1135.tagnum = -1 ;
  G__Jevp_CintLN_TTree.tagnum = -1 ;
  G__Jevp_CintLN_ssdBuilder.tagnum = -1 ;
  G__Jevp_CintLN_tofBuilder.tagnum = -1 ;
  G__Jevp_CintLN_tofBuildercLcL1168.tagnum = -1 ;
  G__Jevp_CintLN_tofBuildercLcL1170.tagnum = -1 ;
  G__Jevp_CintLN_tpcBuilder.tagnum = -1 ;
  G__Jevp_CintLN_tpcBuildercLcL1173.tagnum = -1 ;
  G__Jevp_CintLN_tpcBuildercLcL1175.tagnum = -1 ;
  G__Jevp_CintLN_tpxBuilder.tagnum = -1 ;
  G__Jevp_CintLN_tpxBuildercLcL1178.tagnum = -1 ;
  G__Jevp_CintLN_tpxBuildercLcL1180.tagnum = -1 ;
  G__Jevp_CintLN_trgBuilder.tagnum = -1 ;
  G__Jevp_CintLN_trgBuildercLcL1184.tagnum = -1 ;
  G__Jevp_CintLN_upcBuilder.tagnum = -1 ;
  G__Jevp_CintLN_upcBuildercLcL1187.tagnum = -1 ;
  G__Jevp_CintLN_StTriggerData2016.tagnum = -1 ;
  G__Jevp_CintLN_vpdBuilder.tagnum = -1 ;
  G__Jevp_CintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__Jevp_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Jevp_CintLN_vpdBuildercLcL1207.tagnum = -1 ;
  G__Jevp_CintLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__Jevp_CintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__Jevp_CintLN_JevpServerMain.tagnum = -1 ;
  G__Jevp_CintLN_TGWindow.tagnum = -1 ;
  G__Jevp_CintLN_TGPicture.tagnum = -1 ;
  G__Jevp_CintLN_TGGC.tagnum = -1 ;
  G__Jevp_CintLN_TGFont.tagnum = -1 ;
  G__Jevp_CintLN_TGObject.tagnum = -1 ;
  G__Jevp_CintLN_TGDimension.tagnum = -1 ;
  G__Jevp_CintLN_TGFrame.tagnum = -1 ;
  G__Jevp_CintLN_TGCompositeFrame.tagnum = -1 ;
  G__Jevp_CintLN_TGLayoutManager.tagnum = -1 ;
  G__Jevp_CintLN_TGString.tagnum = -1 ;
  G__Jevp_CintLN_TGTextButton.tagnum = -1 ;
  G__Jevp_CintLN_TGHorizontalFrame.tagnum = -1 ;
  G__Jevp_CintLN_TGMainFrame.tagnum = -1 ;
  G__Jevp_CintLN_TGWidget.tagnum = -1 ;
  G__Jevp_CintLN_TGPopupMenu.tagnum = -1 ;
  G__Jevp_CintLN_TGButton.tagnum = -1 ;
  G__Jevp_CintLN_TGCanvas.tagnum = -1 ;
  G__Jevp_CintLN_TRootEmbeddedCanvas.tagnum = -1 ;
  G__Jevp_CintLN_TGTabElement2.tagnum = -1 ;
  G__Jevp_CintLN_TGTab2.tagnum = -1 ;
  G__Jevp_CintLN_TGTabLayout2.tagnum = -1 ;
  G__Jevp_CintLN_EthClient.tagnum = -1 ;
  G__Jevp_CintLN_JevpViewer.tagnum = -1 ;
  G__Jevp_CintLN_CanvasFrame.tagnum = -1 ;
  G__Jevp_CintLN_EthServers.tagnum = -1 ;
  G__Jevp_CintLN_MenuHelper.tagnum = -1 ;
  G__Jevp_CintLN_TabHelper.tagnum = -1 ;
  G__Jevp_CintLN_JevpPlotInfo.tagnum = -1 ;
  G__Jevp_CintLN_DummyFrame.tagnum = -1 ;
  G__Jevp_CintLN_ZoomFrame.tagnum = -1 ;
  G__Jevp_CintLN_MyMainFrame.tagnum = -1 ;
  G__Jevp_CintLN_DrawFrame.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableJevp_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TString);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_string);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TList);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TTimer);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_THashTable);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_THashList);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TF1);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TH1D);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TH1);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TH1I);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_Event_t);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TAttBBox2D);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TAttText);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TLegendEntry);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TLegend);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_PlotHisto),sizeof(PlotHisto),-1,292608,(char*)NULL,G__setup_memvarPlotHisto,G__setup_memfuncPlotHisto);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_JevpPlot),sizeof(JevpPlot),-1,292608,(char*)NULL,G__setup_memvarJevpPlot,G__setup_memfuncJevpPlot);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_BuilderStatus),sizeof(BuilderStatus),-1,292096,(char*)NULL,G__setup_memvarBuilderStatus,G__setup_memfuncBuilderStatus);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TText);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TLatex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_JLatex),sizeof(JLatex),-1,325376,(char*)NULL,G__setup_memvarJLatex,G__setup_memfuncJLatex);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TLine);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_JLine),sizeof(JLine),-1,323840,(char*)NULL,G__setup_memvarJLine,G__setup_memfuncJLine);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TQObject);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TQObjSender);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_daqReader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_EvpMessage),sizeof(EvpMessage),-1,292096,(char*)NULL,G__setup_memvarEvpMessage,G__setup_memfuncEvpMessage);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_DisplayNode);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_RunStatus),sizeof(RunStatus),-1,292096,(char*)NULL,G__setup_memvarRunStatus,G__setup_memfuncRunStatus);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_JevpServer);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_RtsTimer_root);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_JevpPlotSet),sizeof(JevpPlotSet),-1,291072,(char*)NULL,G__setup_memvarJevpPlotSet,G__setup_memfuncJevpPlotSet);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_StTriggerData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_JevpBuilder),sizeof(JevpBuilder),-1,291072,(char*)NULL,G__setup_memvarJevpBuilder,G__setup_memfuncJevpBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TProfile);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TH2I);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TH2F);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TH2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_baseBuilder),sizeof(baseBuilder),-1,291072,(char*)NULL,G__setup_memvarbaseBuilder,G__setup_memfuncbaseBuilder);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_bbcBuilder),sizeof(bbcBuilder),-1,292096,(char*)NULL,G__setup_memvarbbcBuilder,G__setup_memfuncbbcBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_bbcBuildercLcL713);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_StEmcDecoder);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_bemcBuilder),sizeof(bemcBuilder),-1,292096,(char*)NULL,G__setup_memvarbemcBuilder,G__setup_memfuncbemcBuilder);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_daqBuilder),sizeof(daqBuilder),-1,292096,(char*)NULL,G__setup_memvardaqBuilder,G__setup_memfuncdaqBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_daqBuildercLcL718);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_eemcBuilder),sizeof(eemcBuilder),-1,292096,(char*)NULL,G__setup_memvareemcBuilder,G__setup_memfunceemcBuilder);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_epdBuilder),sizeof(epdBuilder),-1,292096,(char*)NULL,G__setup_memvarepdBuilder,G__setup_memfuncepdBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_epdBuildercLcL726);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_epdBuildercLcLEPDAnalysisMap);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_etofBuilder),sizeof(etofBuilder),-1,292096,(char*)NULL,G__setup_memvaretofBuilder,G__setup_memfuncetofBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_etofBuildercLcL732);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_etofBuildercLcL734);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TRandom);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_daq_dta);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fgtBuilder),sizeof(fgtBuilder),-1,292096,(char*)NULL,G__setup_memvarfgtBuilder,G__setup_memfuncfgtBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fgtBuildercLcL739);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fgtBuildercLcL741);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fgtBuildercLcL743);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fgtBuildercLcL745);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fmsBuilder),sizeof(fmsBuilder),-1,292096,(char*)NULL,G__setup_memvarfmsBuilder,G__setup_memfuncfmsBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_listlEJevpPlotmUcOallocatorlEJevpPlotmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_maplEintcOTH1mUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTH1mUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fpdBuilder),sizeof(fpdBuilder),-1,292096,(char*)NULL,G__setup_memvarfpdBuilder,G__setup_memfuncfpdBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fpdBuildercLcL783);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fpsBuilder),sizeof(fpsBuilder),-1,292096,(char*)NULL,G__setup_memvarfpsBuilder,G__setup_memfuncfpsBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fpsBuildercLcL786);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fstBuilder),sizeof(fstBuilder),-1,292096,(char*)NULL,G__setup_memvarfstBuilder,G__setup_memfuncfstBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fstBuildercLcL789);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fstBuildercLcL791);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fstBuildercLcL793);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fstBuildercLcL795);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fstBuildercLcL797);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fstBuildercLcL799);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fstBuildercLcL801);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fstBuildercLcL803);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_fstBuildercLcL805);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_gmtBuilder),sizeof(gmtBuilder),-1,292096,(char*)NULL,G__setup_memvargmtBuilder,G__setup_memfuncgmtBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_gmtBuildercLcL807);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_gmtBuildercLcL809);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_gmtBuildercLcL811);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_gmtBuildercLcL813);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_gmtBuildercLcL815);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TriggerDataBlk);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TH3D);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TStopwatch);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_hlt_track);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_HLT_EVE);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_hltBuilder),sizeof(hltBuilder),-1,291072,(char*)NULL,G__setup_memvarhltBuilder,G__setup_memfunchltBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_hltBuildercLcLhbt_event_info);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_hltBuildercLcLeventCut_info);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_hltBuildercLcLtrackCut_info);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_HltphiBuilder),sizeof(HltphiBuilder),-1,291072,(char*)NULL,G__setup_memvarHltphiBuilder,G__setup_memfuncHltphiBuilder);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_istBuilder),sizeof(istBuilder),-1,292096,(char*)NULL,G__setup_memvaristBuilder,G__setup_memfuncistBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_istBuildercLcL1088);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_istBuildercLcL1090);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_istBuildercLcL1092);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_istBuildercLcL1094);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_istBuildercLcL1096);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_istBuildercLcL1098);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_istBuildercLcL1100);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_istBuildercLcL1102);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_istBuildercLcL1104);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_LaserReader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_itpcBuilder),sizeof(itpcBuilder),-1,292096,(char*)NULL,G__setup_memvaritpcBuilder,G__setup_memfuncitpcBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_itpcBuildercLcL1107);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_itpcBuildercLcL1109);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_l3Builder),sizeof(l3Builder),-1,292096,(char*)NULL,G__setup_memvarl3Builder,G__setup_memfuncl3Builder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_l3BuildercLcL1112);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_l4Builder),sizeof(l4Builder),-1,291072,(char*)NULL,G__setup_memvarl4Builder,G__setup_memfuncl4Builder);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_mtdBuilder),sizeof(mtdBuilder),-1,292096,(char*)NULL,G__setup_memvarmtdBuilder,G__setup_memfuncmtdBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_mtdBuildercLcL1119);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_ppBuilder),sizeof(ppBuilder),-1,292096,(char*)NULL,G__setup_memvarppBuilder,G__setup_memfuncppBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_ppBuildercLcL1122);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_ppBuildercLcL1124);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_ppBuildercLcL1126);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_ppBuildercLcL1128);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_bitset2DlE928cO960gR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_bitsetlE890880gR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_pxlBuilder),sizeof(pxlBuilder),-1,292096,(char*)NULL,G__setup_memvarpxlBuilder,G__setup_memfuncpxlBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_pxlBuildercLcL1135);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_ssdBuilder),sizeof(ssdBuilder),-1,292096,(char*)NULL,G__setup_memvarssdBuilder,G__setup_memfuncssdBuilder);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_tofBuilder),sizeof(tofBuilder),-1,292096,(char*)NULL,G__setup_memvartofBuilder,G__setup_memfunctofBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_tofBuildercLcL1168);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_tofBuildercLcL1170);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_tpcBuilder),sizeof(tpcBuilder),-1,292096,(char*)NULL,G__setup_memvartpcBuilder,G__setup_memfunctpcBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_tpcBuildercLcL1173);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_tpcBuildercLcL1175);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_tpxBuilder),sizeof(tpxBuilder),-1,292096,(char*)NULL,G__setup_memvartpxBuilder,G__setup_memfunctpxBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_tpxBuildercLcL1178);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_tpxBuildercLcL1180);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_trgBuilder),sizeof(trgBuilder),-1,292096,(char*)NULL,G__setup_memvartrgBuilder,G__setup_memfunctrgBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_trgBuildercLcL1184);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_upcBuilder),sizeof(upcBuilder),-1,292096,(char*)NULL,G__setup_memvarupcBuilder,G__setup_memfuncupcBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_upcBuildercLcL1187);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_StTriggerData2016);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_vpdBuilder),sizeof(vpdBuilder),-1,292096,(char*)NULL,G__setup_memvarvpdBuilder,G__setup_memfuncvpdBuilder);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_vpdBuildercLcL1207);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_JevpServerMain),sizeof(JevpServerMain),-1,263168,(char*)NULL,G__setup_memvarJevpServerMain,G__setup_memfuncJevpServerMain);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGPicture);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGGC);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGFont);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGObject);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGDimension);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGLayoutManager);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGString);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGTextButton);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGHorizontalFrame);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGWidget);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGPopupMenu);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGButton);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGCanvas);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TRootEmbeddedCanvas);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGTabElement2),sizeof(TGTabElement2),-1,327424,"Little tab on tab widget",G__setup_memvarTGTabElement2,G__setup_memfuncTGTabElement2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGTab2),sizeof(TGTab2),-1,327424,"Tab widget",G__setup_memvarTGTab2,G__setup_memfuncTGTab2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TGTabLayout2),sizeof(TGTabLayout2),-1,326144,"Layout manager for TGTab widget",G__setup_memvarTGTabLayout2,G__setup_memfuncTGTabLayout2);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_EthClient);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_JevpViewer),sizeof(JevpViewer),-1,324608,(char*)NULL,G__setup_memvarJevpViewer,G__setup_memfuncJevpViewer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_CanvasFrame),sizeof(CanvasFrame),-1,324608,(char*)NULL,G__setup_memvarCanvasFrame,G__setup_memfuncCanvasFrame);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_EthServers);
   G__get_linked_tagnum_fwd(&G__Jevp_CintLN_MenuHelper);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_TabHelper),sizeof(TabHelper),-1,323584,(char*)NULL,G__setup_memvarTabHelper,G__setup_memfuncTabHelper);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_JevpPlotInfo),sizeof(JevpPlotInfo),-1,324608,(char*)NULL,G__setup_memvarJevpPlotInfo,G__setup_memfuncJevpPlotInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_DummyFrame),sizeof(DummyFrame),-1,323584,(char*)NULL,G__setup_memvarDummyFrame,G__setup_memfuncDummyFrame);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_ZoomFrame),sizeof(ZoomFrame),-1,324608,(char*)NULL,G__setup_memvarZoomFrame,G__setup_memfuncZoomFrame);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_MyMainFrame),sizeof(MyMainFrame),-1,324608,(char*)NULL,G__setup_memvarMyMainFrame,G__setup_memfuncMyMainFrame);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__Jevp_CintLN_DrawFrame),sizeof(DrawFrame),-1,323584,(char*)NULL,G__setup_memvarDrawFrame,G__setup_memfuncDrawFrame);
}
extern "C" void G__cpp_setupJevp_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupJevp_Cint()");
  G__set_cpp_environmentJevp_Cint();
  G__cpp_setup_tagtableJevp_Cint();

  G__cpp_setup_inheritanceJevp_Cint();

  G__cpp_setup_typetableJevp_Cint();

  G__cpp_setup_memvarJevp_Cint();

  G__cpp_setup_memfuncJevp_Cint();
  G__cpp_setup_globalJevp_Cint();
  G__cpp_setup_funcJevp_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncJevp_Cint();
  return;
}
class G__cpp_setup_initJevp_Cint {
  public:
    G__cpp_setup_initJevp_Cint() { G__add_setup_func("Jevp_Cint",(G__incsetup)(&G__cpp_setupJevp_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initJevp_Cint() { G__remove_setup_func("Jevp_Cint"); }
};
G__cpp_setup_initJevp_Cint G__cpp_setup_initializerJevp_Cint;

