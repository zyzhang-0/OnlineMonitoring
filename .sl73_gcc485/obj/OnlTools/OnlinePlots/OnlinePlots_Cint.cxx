//
// File generated by rootcint at Fri Nov 12 19:48:34 2021

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl73_gcc485dIobjdIOnlToolsdIOnlinePlotsdIOnlinePlots_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "OnlinePlots_Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void HistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HistogramGroup(void *p = 0);
   static void *newArray_HistogramGroup(Long_t size, void *p);
   static void delete_HistogramGroup(void *p);
   static void deleteArray_HistogramGroup(void *p);
   static void destruct_HistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HistogramGroup*)
   {
      ::HistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HistogramGroup", ::HistogramGroup::Class_Version(), "OnlTools/OnlinePlots/Infrastructure/HistogramGroup.h", 31,
                  typeid(::HistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::HistogramGroup) );
      instance.SetNew(&new_HistogramGroup);
      instance.SetNewArray(&newArray_HistogramGroup);
      instance.SetDelete(&delete_HistogramGroup);
      instance.SetDeleteArray(&deleteArray_HistogramGroup);
      instance.SetDestructor(&destruct_HistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HistogramGroup*)
   {
      return GenerateInitInstanceLocal((::HistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BESHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BESHistogramGroup(void *p = 0);
   static void *newArray_BESHistogramGroup(Long_t size, void *p);
   static void delete_BESHistogramGroup(void *p);
   static void deleteArray_BESHistogramGroup(void *p);
   static void destruct_BESHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BESHistogramGroup*)
   {
      ::BESHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BESHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BESHistogramGroup", ::BESHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/BESHistogramGroup.h", 11,
                  typeid(::BESHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BESHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::BESHistogramGroup) );
      instance.SetNew(&new_BESHistogramGroup);
      instance.SetNewArray(&newArray_BESHistogramGroup);
      instance.SetDelete(&delete_BESHistogramGroup);
      instance.SetDeleteArray(&deleteArray_BESHistogramGroup);
      instance.SetDestructor(&destruct_BESHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BESHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::BESHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BESHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FMSHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FMSHistogramGroup(void *p = 0);
   static void *newArray_FMSHistogramGroup(Long_t size, void *p);
   static void delete_FMSHistogramGroup(void *p);
   static void deleteArray_FMSHistogramGroup(void *p);
   static void destruct_FMSHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FMSHistogramGroup*)
   {
      ::FMSHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FMSHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FMSHistogramGroup", ::FMSHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/FMSHistogramGroup.h", 7,
                  typeid(::FMSHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FMSHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::FMSHistogramGroup) );
      instance.SetNew(&new_FMSHistogramGroup);
      instance.SetNewArray(&newArray_FMSHistogramGroup);
      instance.SetDelete(&delete_FMSHistogramGroup);
      instance.SetDeleteArray(&deleteArray_FMSHistogramGroup);
      instance.SetDestructor(&destruct_FMSHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FMSHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::FMSHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FMSHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void GroupStatisticsHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GroupStatisticsHistogramGroup(void *p = 0);
   static void *newArray_GroupStatisticsHistogramGroup(Long_t size, void *p);
   static void delete_GroupStatisticsHistogramGroup(void *p);
   static void deleteArray_GroupStatisticsHistogramGroup(void *p);
   static void destruct_GroupStatisticsHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::GroupStatisticsHistogramGroup*)
   {
      ::GroupStatisticsHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GroupStatisticsHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GroupStatisticsHistogramGroup", ::GroupStatisticsHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/GroupStatisticsHistogramGroup.h", 9,
                  typeid(::GroupStatisticsHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::GroupStatisticsHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::GroupStatisticsHistogramGroup) );
      instance.SetNew(&new_GroupStatisticsHistogramGroup);
      instance.SetNewArray(&newArray_GroupStatisticsHistogramGroup);
      instance.SetDelete(&delete_GroupStatisticsHistogramGroup);
      instance.SetDeleteArray(&deleteArray_GroupStatisticsHistogramGroup);
      instance.SetDestructor(&destruct_GroupStatisticsHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::GroupStatisticsHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::GroupStatisticsHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GroupStatisticsHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void L2UpsilonCountsHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_L2UpsilonCountsHistogramGroup(void *p = 0);
   static void *newArray_L2UpsilonCountsHistogramGroup(Long_t size, void *p);
   static void delete_L2UpsilonCountsHistogramGroup(void *p);
   static void deleteArray_L2UpsilonCountsHistogramGroup(void *p);
   static void destruct_L2UpsilonCountsHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::L2UpsilonCountsHistogramGroup*)
   {
      ::L2UpsilonCountsHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::L2UpsilonCountsHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("L2UpsilonCountsHistogramGroup", ::L2UpsilonCountsHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/L2UpsilonCountsHistogramGroup.h", 8,
                  typeid(::L2UpsilonCountsHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::L2UpsilonCountsHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::L2UpsilonCountsHistogramGroup) );
      instance.SetNew(&new_L2UpsilonCountsHistogramGroup);
      instance.SetNewArray(&newArray_L2UpsilonCountsHistogramGroup);
      instance.SetDelete(&delete_L2UpsilonCountsHistogramGroup);
      instance.SetDeleteArray(&deleteArray_L2UpsilonCountsHistogramGroup);
      instance.SetDestructor(&destruct_L2UpsilonCountsHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::L2UpsilonCountsHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::L2UpsilonCountsHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::L2UpsilonCountsHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void L2UpsilonMassHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_L2UpsilonMassHistogramGroup(void *p = 0);
   static void *newArray_L2UpsilonMassHistogramGroup(Long_t size, void *p);
   static void delete_L2UpsilonMassHistogramGroup(void *p);
   static void deleteArray_L2UpsilonMassHistogramGroup(void *p);
   static void destruct_L2UpsilonMassHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::L2UpsilonMassHistogramGroup*)
   {
      ::L2UpsilonMassHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::L2UpsilonMassHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("L2UpsilonMassHistogramGroup", ::L2UpsilonMassHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/L2UpsilonMassHistogramGroup.h", 8,
                  typeid(::L2UpsilonMassHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::L2UpsilonMassHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::L2UpsilonMassHistogramGroup) );
      instance.SetNew(&new_L2UpsilonMassHistogramGroup);
      instance.SetNewArray(&newArray_L2UpsilonMassHistogramGroup);
      instance.SetDelete(&delete_L2UpsilonMassHistogramGroup);
      instance.SetDeleteArray(&deleteArray_L2UpsilonMassHistogramGroup);
      instance.SetDestructor(&destruct_L2UpsilonMassHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::L2UpsilonMassHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::L2UpsilonMassHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::L2UpsilonMassHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void L2UpsilonTowersHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_L2UpsilonTowersHistogramGroup(void *p = 0);
   static void *newArray_L2UpsilonTowersHistogramGroup(Long_t size, void *p);
   static void delete_L2UpsilonTowersHistogramGroup(void *p);
   static void deleteArray_L2UpsilonTowersHistogramGroup(void *p);
   static void destruct_L2UpsilonTowersHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::L2UpsilonTowersHistogramGroup*)
   {
      ::L2UpsilonTowersHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::L2UpsilonTowersHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("L2UpsilonTowersHistogramGroup", ::L2UpsilonTowersHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/L2UpsilonTowersHistogramGroup.h", 10,
                  typeid(::L2UpsilonTowersHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::L2UpsilonTowersHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::L2UpsilonTowersHistogramGroup) );
      instance.SetNew(&new_L2UpsilonTowersHistogramGroup);
      instance.SetNewArray(&newArray_L2UpsilonTowersHistogramGroup);
      instance.SetDelete(&delete_L2UpsilonTowersHistogramGroup);
      instance.SetDeleteArray(&deleteArray_L2UpsilonTowersHistogramGroup);
      instance.SetDestructor(&destruct_L2UpsilonTowersHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::L2UpsilonTowersHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::L2UpsilonTowersHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::L2UpsilonTowersHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void LaserDriftTimeHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LaserDriftTimeHistogramGroup(void *p = 0);
   static void *newArray_LaserDriftTimeHistogramGroup(Long_t size, void *p);
   static void delete_LaserDriftTimeHistogramGroup(void *p);
   static void deleteArray_LaserDriftTimeHistogramGroup(void *p);
   static void destruct_LaserDriftTimeHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::LaserDriftTimeHistogramGroup*)
   {
      ::LaserDriftTimeHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LaserDriftTimeHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LaserDriftTimeHistogramGroup", ::LaserDriftTimeHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/LaserDriftTimeHistogramGroup.h", 10,
                  typeid(::LaserDriftTimeHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::LaserDriftTimeHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::LaserDriftTimeHistogramGroup) );
      instance.SetNew(&new_LaserDriftTimeHistogramGroup);
      instance.SetNewArray(&newArray_LaserDriftTimeHistogramGroup);
      instance.SetDelete(&delete_LaserDriftTimeHistogramGroup);
      instance.SetDeleteArray(&deleteArray_LaserDriftTimeHistogramGroup);
      instance.SetDestructor(&destruct_LaserDriftTimeHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::LaserDriftTimeHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::LaserDriftTimeHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LaserDriftTimeHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void LaserTpcPadChargeHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LaserTpcPadChargeHistogramGroup(void *p = 0);
   static void *newArray_LaserTpcPadChargeHistogramGroup(Long_t size, void *p);
   static void delete_LaserTpcPadChargeHistogramGroup(void *p);
   static void deleteArray_LaserTpcPadChargeHistogramGroup(void *p);
   static void destruct_LaserTpcPadChargeHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::LaserTpcPadChargeHistogramGroup*)
   {
      ::LaserTpcPadChargeHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LaserTpcPadChargeHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LaserTpcPadChargeHistogramGroup", ::LaserTpcPadChargeHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/LaserTpcPadChargeHistogramGroup.h", 9,
                  typeid(::LaserTpcPadChargeHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::LaserTpcPadChargeHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::LaserTpcPadChargeHistogramGroup) );
      instance.SetNew(&new_LaserTpcPadChargeHistogramGroup);
      instance.SetNewArray(&newArray_LaserTpcPadChargeHistogramGroup);
      instance.SetDelete(&delete_LaserTpcPadChargeHistogramGroup);
      instance.SetDeleteArray(&deleteArray_LaserTpcPadChargeHistogramGroup);
      instance.SetDestructor(&destruct_LaserTpcPadChargeHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::LaserTpcPadChargeHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::LaserTpcPadChargeHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LaserTpcPadChargeHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MTDhitsHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MTDhitsHistogramGroup(void *p = 0);
   static void *newArray_MTDhitsHistogramGroup(Long_t size, void *p);
   static void delete_MTDhitsHistogramGroup(void *p);
   static void deleteArray_MTDhitsHistogramGroup(void *p);
   static void destruct_MTDhitsHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MTDhitsHistogramGroup*)
   {
      ::MTDhitsHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTDhitsHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTDhitsHistogramGroup", ::MTDhitsHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/MTDhitsHistogramGroup.h", 6,
                  typeid(::MTDhitsHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MTDhitsHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::MTDhitsHistogramGroup) );
      instance.SetNew(&new_MTDhitsHistogramGroup);
      instance.SetNewArray(&newArray_MTDhitsHistogramGroup);
      instance.SetDelete(&delete_MTDhitsHistogramGroup);
      instance.SetDeleteArray(&deleteArray_MTDhitsHistogramGroup);
      instance.SetDestructor(&destruct_MTDhitsHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MTDhitsHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::MTDhitsHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTDhitsHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MTDtriggerinfoHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MTDtriggerinfoHistogramGroup(void *p = 0);
   static void *newArray_MTDtriggerinfoHistogramGroup(Long_t size, void *p);
   static void delete_MTDtriggerinfoHistogramGroup(void *p);
   static void deleteArray_MTDtriggerinfoHistogramGroup(void *p);
   static void destruct_MTDtriggerinfoHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MTDtriggerinfoHistogramGroup*)
   {
      ::MTDtriggerinfoHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MTDtriggerinfoHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MTDtriggerinfoHistogramGroup", ::MTDtriggerinfoHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/MTDtriggerinfoHistogramGroup.h", 8,
                  typeid(::MTDtriggerinfoHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MTDtriggerinfoHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::MTDtriggerinfoHistogramGroup) );
      instance.SetNew(&new_MTDtriggerinfoHistogramGroup);
      instance.SetNewArray(&newArray_MTDtriggerinfoHistogramGroup);
      instance.SetDelete(&delete_MTDtriggerinfoHistogramGroup);
      instance.SetDeleteArray(&deleteArray_MTDtriggerinfoHistogramGroup);
      instance.SetDestructor(&destruct_MTDtriggerinfoHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MTDtriggerinfoHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::MTDtriggerinfoHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MTDtriggerinfoHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SVTAnodeHybridHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SVTAnodeHybridHistogramGroup(void *p = 0);
   static void *newArray_SVTAnodeHybridHistogramGroup(Long_t size, void *p);
   static void delete_SVTAnodeHybridHistogramGroup(void *p);
   static void deleteArray_SVTAnodeHybridHistogramGroup(void *p);
   static void destruct_SVTAnodeHybridHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SVTAnodeHybridHistogramGroup*)
   {
      ::SVTAnodeHybridHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SVTAnodeHybridHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SVTAnodeHybridHistogramGroup", ::SVTAnodeHybridHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/SVTAnodeHybridHistogramGroup.h", 12,
                  typeid(::SVTAnodeHybridHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SVTAnodeHybridHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::SVTAnodeHybridHistogramGroup) );
      instance.SetNew(&new_SVTAnodeHybridHistogramGroup);
      instance.SetNewArray(&newArray_SVTAnodeHybridHistogramGroup);
      instance.SetDelete(&delete_SVTAnodeHybridHistogramGroup);
      instance.SetDeleteArray(&deleteArray_SVTAnodeHybridHistogramGroup);
      instance.SetDestructor(&destruct_SVTAnodeHybridHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SVTAnodeHybridHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::SVTAnodeHybridHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SVTAnodeHybridHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SVTAnodeSumHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SVTAnodeSumHistogramGroup(void *p = 0);
   static void *newArray_SVTAnodeSumHistogramGroup(Long_t size, void *p);
   static void delete_SVTAnodeSumHistogramGroup(void *p);
   static void deleteArray_SVTAnodeSumHistogramGroup(void *p);
   static void destruct_SVTAnodeSumHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SVTAnodeSumHistogramGroup*)
   {
      ::SVTAnodeSumHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SVTAnodeSumHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SVTAnodeSumHistogramGroup", ::SVTAnodeSumHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/SVTAnodeSumHistogramGroup.h", 12,
                  typeid(::SVTAnodeSumHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SVTAnodeSumHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::SVTAnodeSumHistogramGroup) );
      instance.SetNew(&new_SVTAnodeSumHistogramGroup);
      instance.SetNewArray(&newArray_SVTAnodeSumHistogramGroup);
      instance.SetDelete(&delete_SVTAnodeSumHistogramGroup);
      instance.SetDeleteArray(&deleteArray_SVTAnodeSumHistogramGroup);
      instance.SetDestructor(&destruct_SVTAnodeSumHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SVTAnodeSumHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::SVTAnodeSumHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SVTAnodeSumHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SsdPedestalHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SsdPedestalHistogramGroup(void *p = 0);
   static void *newArray_SsdPedestalHistogramGroup(Long_t size, void *p);
   static void delete_SsdPedestalHistogramGroup(void *p);
   static void deleteArray_SsdPedestalHistogramGroup(void *p);
   static void destruct_SsdPedestalHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SsdPedestalHistogramGroup*)
   {
      ::SsdPedestalHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SsdPedestalHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SsdPedestalHistogramGroup", ::SsdPedestalHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/SsdPedestalHistogramGroup.h", 12,
                  typeid(::SsdPedestalHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SsdPedestalHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::SsdPedestalHistogramGroup) );
      instance.SetNew(&new_SsdPedestalHistogramGroup);
      instance.SetNewArray(&newArray_SsdPedestalHistogramGroup);
      instance.SetDelete(&delete_SsdPedestalHistogramGroup);
      instance.SetDeleteArray(&deleteArray_SsdPedestalHistogramGroup);
      instance.SetDestructor(&destruct_SsdPedestalHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SsdPedestalHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::SsdPedestalHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SsdPedestalHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TOFL0HistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TOFL0HistogramGroup(void *p = 0);
   static void *newArray_TOFL0HistogramGroup(Long_t size, void *p);
   static void delete_TOFL0HistogramGroup(void *p);
   static void deleteArray_TOFL0HistogramGroup(void *p);
   static void destruct_TOFL0HistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TOFL0HistogramGroup*)
   {
      ::TOFL0HistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TOFL0HistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TOFL0HistogramGroup", ::TOFL0HistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/TOFL0HistogramGroup.h", 9,
                  typeid(::TOFL0HistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TOFL0HistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::TOFL0HistogramGroup) );
      instance.SetNew(&new_TOFL0HistogramGroup);
      instance.SetNewArray(&newArray_TOFL0HistogramGroup);
      instance.SetDelete(&delete_TOFL0HistogramGroup);
      instance.SetDeleteArray(&deleteArray_TOFL0HistogramGroup);
      instance.SetDestructor(&destruct_TOFL0HistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TOFL0HistogramGroup*)
   {
      return GenerateInitInstanceLocal((::TOFL0HistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TOFL0HistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TOFL1multHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TOFL1multHistogramGroup(void *p = 0);
   static void *newArray_TOFL1multHistogramGroup(Long_t size, void *p);
   static void delete_TOFL1multHistogramGroup(void *p);
   static void deleteArray_TOFL1multHistogramGroup(void *p);
   static void destruct_TOFL1multHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TOFL1multHistogramGroup*)
   {
      ::TOFL1multHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TOFL1multHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TOFL1multHistogramGroup", ::TOFL1multHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/TOFL1multHistogramGroup.h", 6,
                  typeid(::TOFL1multHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TOFL1multHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::TOFL1multHistogramGroup) );
      instance.SetNew(&new_TOFL1multHistogramGroup);
      instance.SetNewArray(&newArray_TOFL1multHistogramGroup);
      instance.SetDelete(&delete_TOFL1multHistogramGroup);
      instance.SetDeleteArray(&deleteArray_TOFL1multHistogramGroup);
      instance.SetDestructor(&destruct_TOFL1multHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TOFL1multHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::TOFL1multHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TOFL1multHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TOFcheckHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TOFcheckHistogramGroup(void *p = 0);
   static void *newArray_TOFcheckHistogramGroup(Long_t size, void *p);
   static void delete_TOFcheckHistogramGroup(void *p);
   static void deleteArray_TOFcheckHistogramGroup(void *p);
   static void destruct_TOFcheckHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TOFcheckHistogramGroup*)
   {
      ::TOFcheckHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TOFcheckHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TOFcheckHistogramGroup", ::TOFcheckHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/TOFcheckHistogramGroup.h", 6,
                  typeid(::TOFcheckHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TOFcheckHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::TOFcheckHistogramGroup) );
      instance.SetNew(&new_TOFcheckHistogramGroup);
      instance.SetNewArray(&newArray_TOFcheckHistogramGroup);
      instance.SetDelete(&delete_TOFcheckHistogramGroup);
      instance.SetDeleteArray(&deleteArray_TOFcheckHistogramGroup);
      instance.SetDestructor(&destruct_TOFcheckHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TOFcheckHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::TOFcheckHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TOFcheckHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TOFtrayHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TOFtrayHistogramGroup(void *p = 0);
   static void *newArray_TOFtrayHistogramGroup(Long_t size, void *p);
   static void delete_TOFtrayHistogramGroup(void *p);
   static void deleteArray_TOFtrayHistogramGroup(void *p);
   static void destruct_TOFtrayHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TOFtrayHistogramGroup*)
   {
      ::TOFtrayHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TOFtrayHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TOFtrayHistogramGroup", ::TOFtrayHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/TOFtrayHistogramGroup.h", 9,
                  typeid(::TOFtrayHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TOFtrayHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::TOFtrayHistogramGroup) );
      instance.SetNew(&new_TOFtrayHistogramGroup);
      instance.SetNewArray(&newArray_TOFtrayHistogramGroup);
      instance.SetDelete(&delete_TOFtrayHistogramGroup);
      instance.SetDeleteArray(&deleteArray_TOFtrayHistogramGroup);
      instance.SetDestructor(&destruct_TOFtrayHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TOFtrayHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::TOFtrayHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TOFtrayHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TOFupvpdHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TOFupvpdHistogramGroup(void *p = 0);
   static void *newArray_TOFupvpdHistogramGroup(Long_t size, void *p);
   static void delete_TOFupvpdHistogramGroup(void *p);
   static void deleteArray_TOFupvpdHistogramGroup(void *p);
   static void destruct_TOFupvpdHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TOFupvpdHistogramGroup*)
   {
      ::TOFupvpdHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TOFupvpdHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TOFupvpdHistogramGroup", ::TOFupvpdHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/TOFupvpdHistogramGroup.h", 6,
                  typeid(::TOFupvpdHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TOFupvpdHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::TOFupvpdHistogramGroup) );
      instance.SetNew(&new_TOFupvpdHistogramGroup);
      instance.SetNewArray(&newArray_TOFupvpdHistogramGroup);
      instance.SetDelete(&delete_TOFupvpdHistogramGroup);
      instance.SetDeleteArray(&deleteArray_TOFupvpdHistogramGroup);
      instance.SetDestructor(&destruct_TOFupvpdHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TOFupvpdHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::TOFupvpdHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TOFupvpdHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void UPCHistogramCtbGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_UPCHistogramCtbGroup(void *p = 0);
   static void *newArray_UPCHistogramCtbGroup(Long_t size, void *p);
   static void delete_UPCHistogramCtbGroup(void *p);
   static void deleteArray_UPCHistogramCtbGroup(void *p);
   static void destruct_UPCHistogramCtbGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::UPCHistogramCtbGroup*)
   {
      ::UPCHistogramCtbGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::UPCHistogramCtbGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("UPCHistogramCtbGroup", ::UPCHistogramCtbGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/UPCHistogramCtbGroup.h", 9,
                  typeid(::UPCHistogramCtbGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::UPCHistogramCtbGroup::Dictionary, isa_proxy, 4,
                  sizeof(::UPCHistogramCtbGroup) );
      instance.SetNew(&new_UPCHistogramCtbGroup);
      instance.SetNewArray(&newArray_UPCHistogramCtbGroup);
      instance.SetDelete(&delete_UPCHistogramCtbGroup);
      instance.SetDeleteArray(&deleteArray_UPCHistogramCtbGroup);
      instance.SetDestructor(&destruct_UPCHistogramCtbGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::UPCHistogramCtbGroup*)
   {
      return GenerateInitInstanceLocal((::UPCHistogramCtbGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::UPCHistogramCtbGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void UPCHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_UPCHistogramGroup(void *p = 0);
   static void *newArray_UPCHistogramGroup(Long_t size, void *p);
   static void delete_UPCHistogramGroup(void *p);
   static void deleteArray_UPCHistogramGroup(void *p);
   static void destruct_UPCHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::UPCHistogramGroup*)
   {
      ::UPCHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::UPCHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("UPCHistogramGroup", ::UPCHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/UPCHistogramGroup.h", 9,
                  typeid(::UPCHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::UPCHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::UPCHistogramGroup) );
      instance.SetNew(&new_UPCHistogramGroup);
      instance.SetNewArray(&newArray_UPCHistogramGroup);
      instance.SetDelete(&delete_UPCHistogramGroup);
      instance.SetDeleteArray(&deleteArray_UPCHistogramGroup);
      instance.SetDestructor(&destruct_UPCHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::UPCHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::UPCHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::UPCHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void UPCHistogramZdcGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_UPCHistogramZdcGroup(void *p = 0);
   static void *newArray_UPCHistogramZdcGroup(Long_t size, void *p);
   static void delete_UPCHistogramZdcGroup(void *p);
   static void deleteArray_UPCHistogramZdcGroup(void *p);
   static void destruct_UPCHistogramZdcGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::UPCHistogramZdcGroup*)
   {
      ::UPCHistogramZdcGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::UPCHistogramZdcGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("UPCHistogramZdcGroup", ::UPCHistogramZdcGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/UPCHistogramZdcGroup.h", 9,
                  typeid(::UPCHistogramZdcGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::UPCHistogramZdcGroup::Dictionary, isa_proxy, 4,
                  sizeof(::UPCHistogramZdcGroup) );
      instance.SetNew(&new_UPCHistogramZdcGroup);
      instance.SetNewArray(&newArray_UPCHistogramZdcGroup);
      instance.SetDelete(&delete_UPCHistogramZdcGroup);
      instance.SetDeleteArray(&deleteArray_UPCHistogramZdcGroup);
      instance.SetDestructor(&destruct_UPCHistogramZdcGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::UPCHistogramZdcGroup*)
   {
      return GenerateInitInstanceLocal((::UPCHistogramZdcGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::UPCHistogramZdcGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void VPDHiHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_VPDHiHistogramGroup(void *p = 0);
   static void *newArray_VPDHiHistogramGroup(Long_t size, void *p);
   static void delete_VPDHiHistogramGroup(void *p);
   static void deleteArray_VPDHiHistogramGroup(void *p);
   static void destruct_VPDHiHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::VPDHiHistogramGroup*)
   {
      ::VPDHiHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::VPDHiHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("VPDHiHistogramGroup", ::VPDHiHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/VPDHiHistogramGroup.h", 8,
                  typeid(::VPDHiHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::VPDHiHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::VPDHiHistogramGroup) );
      instance.SetNew(&new_VPDHiHistogramGroup);
      instance.SetNewArray(&newArray_VPDHiHistogramGroup);
      instance.SetDelete(&delete_VPDHiHistogramGroup);
      instance.SetDeleteArray(&deleteArray_VPDHiHistogramGroup);
      instance.SetDestructor(&destruct_VPDHiHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::VPDHiHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::VPDHiHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::VPDHiHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void VPDHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_VPDHistogramGroup(void *p = 0);
   static void *newArray_VPDHistogramGroup(Long_t size, void *p);
   static void delete_VPDHistogramGroup(void *p);
   static void deleteArray_VPDHistogramGroup(void *p);
   static void destruct_VPDHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::VPDHistogramGroup*)
   {
      ::VPDHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::VPDHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("VPDHistogramGroup", ::VPDHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/VPDHistogramGroup.h", 8,
                  typeid(::VPDHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::VPDHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::VPDHistogramGroup) );
      instance.SetNew(&new_VPDHistogramGroup);
      instance.SetNewArray(&newArray_VPDHistogramGroup);
      instance.SetDelete(&delete_VPDHistogramGroup);
      instance.SetDeleteArray(&deleteArray_VPDHistogramGroup);
      instance.SetDestructor(&destruct_VPDHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::VPDHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::VPDHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::VPDHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void pp2ppHistogramGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_pp2ppHistogramGroup(void *p = 0);
   static void *newArray_pp2ppHistogramGroup(Long_t size, void *p);
   static void delete_pp2ppHistogramGroup(void *p);
   static void deleteArray_pp2ppHistogramGroup(void *p);
   static void destruct_pp2ppHistogramGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::pp2ppHistogramGroup*)
   {
      ::pp2ppHistogramGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::pp2ppHistogramGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("pp2ppHistogramGroup", ::pp2ppHistogramGroup::Class_Version(), "OnlTools/OnlinePlots/HistogramGroups/pp2ppHistogramGroup.h", 15,
                  typeid(::pp2ppHistogramGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::pp2ppHistogramGroup::Dictionary, isa_proxy, 4,
                  sizeof(::pp2ppHistogramGroup) );
      instance.SetNew(&new_pp2ppHistogramGroup);
      instance.SetNewArray(&newArray_pp2ppHistogramGroup);
      instance.SetDelete(&delete_pp2ppHistogramGroup);
      instance.SetDeleteArray(&deleteArray_pp2ppHistogramGroup);
      instance.SetDestructor(&destruct_pp2ppHistogramGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::pp2ppHistogramGroup*)
   {
      return GenerateInitInstanceLocal((::pp2ppHistogramGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::pp2ppHistogramGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void DGHelp_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_DGHelp(void *p);
   static void deleteArray_DGHelp(void *p);
   static void destruct_DGHelp(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::DGHelp*)
   {
      ::DGHelp *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::DGHelp >(0);
      static ::ROOT::TGenericClassInfo 
         instance("DGHelp", ::DGHelp::Class_Version(), "OnlTools/OnlinePlots/Infrastructure/DGHelp.h", 20,
                  typeid(::DGHelp), ::ROOT::DefineBehavior(ptr, ptr),
                  &::DGHelp::Dictionary, isa_proxy, 4,
                  sizeof(::DGHelp) );
      instance.SetDelete(&delete_DGHelp);
      instance.SetDeleteArray(&deleteArray_DGHelp);
      instance.SetDestructor(&destruct_DGHelp);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::DGHelp*)
   {
      return GenerateInitInstanceLocal((::DGHelp*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::DGHelp*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void EvpServer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EvpServer(void *p = 0);
   static void *newArray_EvpServer(Long_t size, void *p);
   static void delete_EvpServer(void *p);
   static void deleteArray_EvpServer(void *p);
   static void destruct_EvpServer(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::EvpServer*)
   {
      ::EvpServer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EvpServer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EvpServer", ::EvpServer::Class_Version(), "OnlTools/OnlinePlots/Infrastructure/EvpServer.h", 36,
                  typeid(::EvpServer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::EvpServer::Dictionary, isa_proxy, 4,
                  sizeof(::EvpServer) );
      instance.SetNew(&new_EvpServer);
      instance.SetNewArray(&newArray_EvpServer);
      instance.SetDelete(&delete_EvpServer);
      instance.SetDeleteArray(&deleteArray_EvpServer);
      instance.SetDestructor(&destruct_EvpServer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::EvpServer*)
   {
      return GenerateInitInstanceLocal((::EvpServer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EvpServer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ServerGui_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_ServerGui(void *p);
   static void deleteArray_ServerGui(void *p);
   static void destruct_ServerGui(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ServerGui*)
   {
      ::ServerGui *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ServerGui >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ServerGui", ::ServerGui::Class_Version(), "OnlTools/OnlinePlots/Infrastructure/ServerGui.h", 66,
                  typeid(::ServerGui), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ServerGui::Dictionary, isa_proxy, 4,
                  sizeof(::ServerGui) );
      instance.SetDelete(&delete_ServerGui);
      instance.SetDeleteArray(&deleteArray_ServerGui);
      instance.SetDestructor(&destruct_ServerGui);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ServerGui*)
   {
      return GenerateInitInstanceLocal((::ServerGui*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ServerGui*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RunStatus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RunStatus(void *p = 0);
   static void *newArray_RunStatus(Long_t size, void *p);
   static void delete_RunStatus(void *p);
   static void deleteArray_RunStatus(void *p);
   static void destruct_RunStatus(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RunStatus*)
   {
      ::RunStatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RunStatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RunStatus", ::RunStatus::Class_Version(), "OnlTools/OnlinePlots/Infrastructure/RunStatus.h", 11,
                  typeid(::RunStatus), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RunStatus::Dictionary, isa_proxy, 4,
                  sizeof(::RunStatus) );
      instance.SetNew(&new_RunStatus);
      instance.SetNewArray(&newArray_RunStatus);
      instance.SetDelete(&delete_RunStatus);
      instance.SetDeleteArray(&deleteArray_RunStatus);
      instance.SetDestructor(&destruct_RunStatus);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RunStatus*)
   {
      return GenerateInitInstanceLocal((::RunStatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RunStatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ServerStatus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ServerStatus(void *p = 0);
   static void *newArray_ServerStatus(Long_t size, void *p);
   static void delete_ServerStatus(void *p);
   static void deleteArray_ServerStatus(void *p);
   static void destruct_ServerStatus(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ServerStatus*)
   {
      ::ServerStatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ServerStatus >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ServerStatus", ::ServerStatus::Class_Version(), "OnlTools/OnlinePlots/Infrastructure/ServerStatus.h", 8,
                  typeid(::ServerStatus), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ServerStatus::Dictionary, isa_proxy, 4,
                  sizeof(::ServerStatus) );
      instance.SetNew(&new_ServerStatus);
      instance.SetNewArray(&newArray_ServerStatus);
      instance.SetDelete(&delete_ServerStatus);
      instance.SetDeleteArray(&deleteArray_ServerStatus);
      instance.SetDestructor(&destruct_ServerStatus);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ServerStatus*)
   {
      return GenerateInitInstanceLocal((::ServerStatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ServerStatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void PGMessage_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_PGMessage(void *p);
   static void deleteArray_PGMessage(void *p);
   static void destruct_PGMessage(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PGMessage*)
   {
      ::PGMessage *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PGMessage >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PGMessage", ::PGMessage::Class_Version(), "OnlTools/OnlinePlots/Infrastructure/PGMessage.h", 17,
                  typeid(::PGMessage), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PGMessage::Dictionary, isa_proxy, 4,
                  sizeof(::PGMessage) );
      instance.SetDelete(&delete_PGMessage);
      instance.SetDeleteArray(&deleteArray_PGMessage);
      instance.SetDestructor(&destruct_PGMessage);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PGMessage*)
   {
      return GenerateInitInstanceLocal((::PGMessage*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PGMessage*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void endOfRunActionMain_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_endOfRunActionMain(void *p);
   static void deleteArray_endOfRunActionMain(void *p);
   static void destruct_endOfRunActionMain(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::endOfRunActionMain*)
   {
      ::endOfRunActionMain *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::endOfRunActionMain >(0);
      static ::ROOT::TGenericClassInfo 
         instance("endOfRunActionMain", ::endOfRunActionMain::Class_Version(), "OnlTools/OnlinePlots/Infrastructure/endOfRunActionMain.h", 7,
                  typeid(::endOfRunActionMain), ::ROOT::DefineBehavior(ptr, ptr),
                  &::endOfRunActionMain::Dictionary, isa_proxy, 4,
                  sizeof(::endOfRunActionMain) );
      instance.SetDelete(&delete_endOfRunActionMain);
      instance.SetDeleteArray(&deleteArray_endOfRunActionMain);
      instance.SetDestructor(&destruct_endOfRunActionMain);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::endOfRunActionMain*)
   {
      return GenerateInitInstanceLocal((::endOfRunActionMain*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::endOfRunActionMain*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void evpServerMain_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_evpServerMain(void *p = 0);
   static void *newArray_evpServerMain(Long_t size, void *p);
   static void delete_evpServerMain(void *p);
   static void deleteArray_evpServerMain(void *p);
   static void destruct_evpServerMain(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::evpServerMain*)
   {
      ::evpServerMain *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::evpServerMain >(0);
      static ::ROOT::TGenericClassInfo 
         instance("evpServerMain", ::evpServerMain::Class_Version(), "OnlTools/OnlinePlots/Infrastructure/evpServerMain.h", 8,
                  typeid(::evpServerMain), ::ROOT::DefineBehavior(ptr, ptr),
                  &::evpServerMain::Dictionary, isa_proxy, 4,
                  sizeof(::evpServerMain) );
      instance.SetNew(&new_evpServerMain);
      instance.SetNewArray(&newArray_evpServerMain);
      instance.SetDelete(&delete_evpServerMain);
      instance.SetDeleteArray(&deleteArray_evpServerMain);
      instance.SetDestructor(&destruct_evpServerMain);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::evpServerMain*)
   {
      return GenerateInitInstanceLocal((::evpServerMain*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::evpServerMain*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr HistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HistogramGroup::Class_Name()
{
   return "HistogramGroup";
}

//______________________________________________________________________________
const char *HistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BESHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BESHistogramGroup::Class_Name()
{
   return "BESHistogramGroup";
}

//______________________________________________________________________________
const char *BESHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BESHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BESHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BESHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BESHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BESHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BESHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BESHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FMSHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FMSHistogramGroup::Class_Name()
{
   return "FMSHistogramGroup";
}

//______________________________________________________________________________
const char *FMSHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FMSHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FMSHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FMSHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FMSHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FMSHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FMSHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FMSHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr GroupStatisticsHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GroupStatisticsHistogramGroup::Class_Name()
{
   return "GroupStatisticsHistogramGroup";
}

//______________________________________________________________________________
const char *GroupStatisticsHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GroupStatisticsHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GroupStatisticsHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GroupStatisticsHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GroupStatisticsHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GroupStatisticsHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GroupStatisticsHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GroupStatisticsHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr L2UpsilonCountsHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *L2UpsilonCountsHistogramGroup::Class_Name()
{
   return "L2UpsilonCountsHistogramGroup";
}

//______________________________________________________________________________
const char *L2UpsilonCountsHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::L2UpsilonCountsHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int L2UpsilonCountsHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::L2UpsilonCountsHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void L2UpsilonCountsHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::L2UpsilonCountsHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *L2UpsilonCountsHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::L2UpsilonCountsHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr L2UpsilonMassHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *L2UpsilonMassHistogramGroup::Class_Name()
{
   return "L2UpsilonMassHistogramGroup";
}

//______________________________________________________________________________
const char *L2UpsilonMassHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::L2UpsilonMassHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int L2UpsilonMassHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::L2UpsilonMassHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void L2UpsilonMassHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::L2UpsilonMassHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *L2UpsilonMassHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::L2UpsilonMassHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr L2UpsilonTowersHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *L2UpsilonTowersHistogramGroup::Class_Name()
{
   return "L2UpsilonTowersHistogramGroup";
}

//______________________________________________________________________________
const char *L2UpsilonTowersHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::L2UpsilonTowersHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int L2UpsilonTowersHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::L2UpsilonTowersHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void L2UpsilonTowersHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::L2UpsilonTowersHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *L2UpsilonTowersHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::L2UpsilonTowersHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr LaserDriftTimeHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LaserDriftTimeHistogramGroup::Class_Name()
{
   return "LaserDriftTimeHistogramGroup";
}

//______________________________________________________________________________
const char *LaserDriftTimeHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::LaserDriftTimeHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LaserDriftTimeHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::LaserDriftTimeHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LaserDriftTimeHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::LaserDriftTimeHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LaserDriftTimeHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::LaserDriftTimeHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr LaserTpcPadChargeHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LaserTpcPadChargeHistogramGroup::Class_Name()
{
   return "LaserTpcPadChargeHistogramGroup";
}

//______________________________________________________________________________
const char *LaserTpcPadChargeHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::LaserTpcPadChargeHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LaserTpcPadChargeHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::LaserTpcPadChargeHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LaserTpcPadChargeHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::LaserTpcPadChargeHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LaserTpcPadChargeHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::LaserTpcPadChargeHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MTDhitsHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MTDhitsHistogramGroup::Class_Name()
{
   return "MTDhitsHistogramGroup";
}

//______________________________________________________________________________
const char *MTDhitsHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MTDhitsHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MTDhitsHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MTDhitsHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MTDhitsHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MTDhitsHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MTDhitsHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MTDhitsHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MTDtriggerinfoHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MTDtriggerinfoHistogramGroup::Class_Name()
{
   return "MTDtriggerinfoHistogramGroup";
}

//______________________________________________________________________________
const char *MTDtriggerinfoHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MTDtriggerinfoHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MTDtriggerinfoHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MTDtriggerinfoHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MTDtriggerinfoHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MTDtriggerinfoHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MTDtriggerinfoHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MTDtriggerinfoHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SVTAnodeHybridHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SVTAnodeHybridHistogramGroup::Class_Name()
{
   return "SVTAnodeHybridHistogramGroup";
}

//______________________________________________________________________________
const char *SVTAnodeHybridHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SVTAnodeHybridHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SVTAnodeHybridHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SVTAnodeHybridHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SVTAnodeHybridHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SVTAnodeHybridHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SVTAnodeHybridHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SVTAnodeHybridHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SVTAnodeSumHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SVTAnodeSumHistogramGroup::Class_Name()
{
   return "SVTAnodeSumHistogramGroup";
}

//______________________________________________________________________________
const char *SVTAnodeSumHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SVTAnodeSumHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SVTAnodeSumHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SVTAnodeSumHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SVTAnodeSumHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SVTAnodeSumHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SVTAnodeSumHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SVTAnodeSumHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SsdPedestalHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SsdPedestalHistogramGroup::Class_Name()
{
   return "SsdPedestalHistogramGroup";
}

//______________________________________________________________________________
const char *SsdPedestalHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SsdPedestalHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SsdPedestalHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SsdPedestalHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SsdPedestalHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SsdPedestalHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SsdPedestalHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SsdPedestalHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TOFL0HistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TOFL0HistogramGroup::Class_Name()
{
   return "TOFL0HistogramGroup";
}

//______________________________________________________________________________
const char *TOFL0HistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TOFL0HistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TOFL0HistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TOFL0HistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TOFL0HistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TOFL0HistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TOFL0HistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TOFL0HistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TOFL1multHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TOFL1multHistogramGroup::Class_Name()
{
   return "TOFL1multHistogramGroup";
}

//______________________________________________________________________________
const char *TOFL1multHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TOFL1multHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TOFL1multHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TOFL1multHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TOFL1multHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TOFL1multHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TOFL1multHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TOFL1multHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TOFcheckHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TOFcheckHistogramGroup::Class_Name()
{
   return "TOFcheckHistogramGroup";
}

//______________________________________________________________________________
const char *TOFcheckHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TOFcheckHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TOFcheckHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TOFcheckHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TOFcheckHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TOFcheckHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TOFcheckHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TOFcheckHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TOFtrayHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TOFtrayHistogramGroup::Class_Name()
{
   return "TOFtrayHistogramGroup";
}

//______________________________________________________________________________
const char *TOFtrayHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TOFtrayHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TOFtrayHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TOFtrayHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TOFtrayHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TOFtrayHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TOFtrayHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TOFtrayHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TOFupvpdHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TOFupvpdHistogramGroup::Class_Name()
{
   return "TOFupvpdHistogramGroup";
}

//______________________________________________________________________________
const char *TOFupvpdHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TOFupvpdHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TOFupvpdHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TOFupvpdHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TOFupvpdHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TOFupvpdHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TOFupvpdHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TOFupvpdHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr UPCHistogramCtbGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *UPCHistogramCtbGroup::Class_Name()
{
   return "UPCHistogramCtbGroup";
}

//______________________________________________________________________________
const char *UPCHistogramCtbGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::UPCHistogramCtbGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int UPCHistogramCtbGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::UPCHistogramCtbGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void UPCHistogramCtbGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::UPCHistogramCtbGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *UPCHistogramCtbGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::UPCHistogramCtbGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr UPCHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *UPCHistogramGroup::Class_Name()
{
   return "UPCHistogramGroup";
}

//______________________________________________________________________________
const char *UPCHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::UPCHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int UPCHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::UPCHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void UPCHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::UPCHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *UPCHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::UPCHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr UPCHistogramZdcGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *UPCHistogramZdcGroup::Class_Name()
{
   return "UPCHistogramZdcGroup";
}

//______________________________________________________________________________
const char *UPCHistogramZdcGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::UPCHistogramZdcGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int UPCHistogramZdcGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::UPCHistogramZdcGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void UPCHistogramZdcGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::UPCHistogramZdcGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *UPCHistogramZdcGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::UPCHistogramZdcGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr VPDHiHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *VPDHiHistogramGroup::Class_Name()
{
   return "VPDHiHistogramGroup";
}

//______________________________________________________________________________
const char *VPDHiHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::VPDHiHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int VPDHiHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::VPDHiHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void VPDHiHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::VPDHiHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *VPDHiHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::VPDHiHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr VPDHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *VPDHistogramGroup::Class_Name()
{
   return "VPDHistogramGroup";
}

//______________________________________________________________________________
const char *VPDHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::VPDHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int VPDHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::VPDHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void VPDHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::VPDHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *VPDHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::VPDHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr pp2ppHistogramGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *pp2ppHistogramGroup::Class_Name()
{
   return "pp2ppHistogramGroup";
}

//______________________________________________________________________________
const char *pp2ppHistogramGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::pp2ppHistogramGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int pp2ppHistogramGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::pp2ppHistogramGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void pp2ppHistogramGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::pp2ppHistogramGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *pp2ppHistogramGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::pp2ppHistogramGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr DGHelp::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DGHelp::Class_Name()
{
   return "DGHelp";
}

//______________________________________________________________________________
const char *DGHelp::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DGHelp*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DGHelp::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::DGHelp*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DGHelp::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DGHelp*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DGHelp::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::DGHelp*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EvpServer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EvpServer::Class_Name()
{
   return "EvpServer";
}

//______________________________________________________________________________
const char *EvpServer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EvpServer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EvpServer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::EvpServer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EvpServer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EvpServer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EvpServer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::EvpServer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ServerGui::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ServerGui::Class_Name()
{
   return "ServerGui";
}

//______________________________________________________________________________
const char *ServerGui::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ServerGui*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ServerGui::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ServerGui*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ServerGui::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ServerGui*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ServerGui::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ServerGui*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RunStatus::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RunStatus::Class_Name()
{
   return "RunStatus";
}

//______________________________________________________________________________
const char *RunStatus::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RunStatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RunStatus::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RunStatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RunStatus::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RunStatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RunStatus::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RunStatus*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ServerStatus::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ServerStatus::Class_Name()
{
   return "ServerStatus";
}

//______________________________________________________________________________
const char *ServerStatus::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ServerStatus*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ServerStatus::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ServerStatus*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ServerStatus::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ServerStatus*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ServerStatus::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ServerStatus*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PGMessage::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PGMessage::Class_Name()
{
   return "PGMessage";
}

//______________________________________________________________________________
const char *PGMessage::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PGMessage*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PGMessage::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PGMessage*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PGMessage::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PGMessage*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PGMessage::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PGMessage*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr endOfRunActionMain::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *endOfRunActionMain::Class_Name()
{
   return "endOfRunActionMain";
}

//______________________________________________________________________________
const char *endOfRunActionMain::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::endOfRunActionMain*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int endOfRunActionMain::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::endOfRunActionMain*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void endOfRunActionMain::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::endOfRunActionMain*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *endOfRunActionMain::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::endOfRunActionMain*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr evpServerMain::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *evpServerMain::Class_Name()
{
   return "evpServerMain";
}

//______________________________________________________________________________
const char *evpServerMain::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::evpServerMain*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int evpServerMain::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::evpServerMain*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void evpServerMain::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::evpServerMain*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *evpServerMain::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::evpServerMain*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void BESHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class BESHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BESHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(BESHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void BESHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BESHistogramGroup.
      TClass *R__cl = ::BESHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_bbc_adc_west_vs_east", &h_bbc_adc_west_vs_east);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_bemc_energy_west_vs_east", &h_bemc_energy_west_vs_east);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_bemc_adc_west_vs_east", &h_bemc_adc_west_vs_east);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_bbc_adc_east", &h_bbc_adc_east);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_bbc_adc_west", &h_bbc_adc_west);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_bemc_adc_east", &h_bemc_adc_east);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_bemc_adc_west", &h_bemc_adc_west);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_event_type", &h_event_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_bemc_adc_all", &h_bemc_adc_all);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*bemcStatus", &bemcStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "towerPed[4800]", towerPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "towerGain[4800]", towerGain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "towerUnmask[4800]", towerUnmask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "towerUnmaskHT[4800]", towerUnmaskHT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "text1", &text1);
      R__insp.InspectMember(text1, "text1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "text2", &text2);
      R__insp.InspectMember(text2, "text2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "text3", &text3);
      R__insp.InspectMember(text3, "text3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "text4", &text4);
      R__insp.InspectMember(text4, "text4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "text5", &text5);
      R__insp.InspectMember(text5, "text5.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "text6", &text6);
      R__insp.InspectMember(text6, "text6.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "line1", &line1);
      R__insp.InspectMember(line1, "line1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "line2", &line2);
      R__insp.InspectMember(line2, "line2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "line3", &line3);
      R__insp.InspectMember(line3, "line3.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "line4", &line4);
      R__insp.InspectMember(line4, "line4.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "line5", &line5);
      R__insp.InspectMember(line5, "line5.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "line6", &line6);
      R__insp.InspectMember(line6, "line6.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "line7", &line7);
      R__insp.InspectMember(line7, "line7.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "line8", &line8);
      R__insp.InspectMember(line8, "line8.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "line9", &line9);
      R__insp.InspectMember(line9, "line9.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lin10", &lin10);
      R__insp.InspectMember(lin10, "lin10.");
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_BESHistogramGroup(void *p) {
      return  p ? new(p) ::BESHistogramGroup : new ::BESHistogramGroup;
   }
   static void *newArray_BESHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::BESHistogramGroup[nElements] : new ::BESHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_BESHistogramGroup(void *p) {
      delete ((::BESHistogramGroup*)p);
   }
   static void deleteArray_BESHistogramGroup(void *p) {
      delete [] ((::BESHistogramGroup*)p);
   }
   static void destruct_BESHistogramGroup(void *p) {
      typedef ::BESHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BESHistogramGroup

//______________________________________________________________________________
void FMSHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class FMSHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(FMSHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(FMSHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void FMSHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FMSHistogramGroup.
      TClass *R__cl = ::FMSHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_fms_quad_sum[4]", &h_fms_quad_sum);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FMSHistogramGroup(void *p) {
      return  p ? new(p) ::FMSHistogramGroup : new ::FMSHistogramGroup;
   }
   static void *newArray_FMSHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::FMSHistogramGroup[nElements] : new ::FMSHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_FMSHistogramGroup(void *p) {
      delete ((::FMSHistogramGroup*)p);
   }
   static void deleteArray_FMSHistogramGroup(void *p) {
      delete [] ((::FMSHistogramGroup*)p);
   }
   static void destruct_FMSHistogramGroup(void *p) {
      typedef ::FMSHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::FMSHistogramGroup

//______________________________________________________________________________
void GroupStatisticsHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class GroupStatisticsHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GroupStatisticsHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(GroupStatisticsHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void GroupStatisticsHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GroupStatisticsHistogramGroup.
      TClass *R__cl = ::GroupStatisticsHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hEventGroups", &hEventGroups);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDetectorGroups", &hDetectorGroups);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_GroupStatisticsHistogramGroup(void *p) {
      return  p ? new(p) ::GroupStatisticsHistogramGroup : new ::GroupStatisticsHistogramGroup;
   }
   static void *newArray_GroupStatisticsHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::GroupStatisticsHistogramGroup[nElements] : new ::GroupStatisticsHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_GroupStatisticsHistogramGroup(void *p) {
      delete ((::GroupStatisticsHistogramGroup*)p);
   }
   static void deleteArray_GroupStatisticsHistogramGroup(void *p) {
      delete [] ((::GroupStatisticsHistogramGroup*)p);
   }
   static void destruct_GroupStatisticsHistogramGroup(void *p) {
      typedef ::GroupStatisticsHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::GroupStatisticsHistogramGroup

//______________________________________________________________________________
void L2UpsilonCountsHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class L2UpsilonCountsHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(L2UpsilonCountsHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(L2UpsilonCountsHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void L2UpsilonCountsHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class L2UpsilonCountsHistogramGroup.
      TClass *R__cl = ::L2UpsilonCountsHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTag", &hTag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTime", &hTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hEvent", &hEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNumberOfHotTowers", &hNumberOfHotTowers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hAbordRate", &hAbordRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hAbordRateCurrent", &hAbordRateCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNumberOfHotTowers", &mNumberOfHotTowers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHotTowerChanges", &mHotTowerChanges);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_L2UpsilonCountsHistogramGroup(void *p) {
      return  p ? new(p) ::L2UpsilonCountsHistogramGroup : new ::L2UpsilonCountsHistogramGroup;
   }
   static void *newArray_L2UpsilonCountsHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::L2UpsilonCountsHistogramGroup[nElements] : new ::L2UpsilonCountsHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_L2UpsilonCountsHistogramGroup(void *p) {
      delete ((::L2UpsilonCountsHistogramGroup*)p);
   }
   static void deleteArray_L2UpsilonCountsHistogramGroup(void *p) {
      delete [] ((::L2UpsilonCountsHistogramGroup*)p);
   }
   static void destruct_L2UpsilonCountsHistogramGroup(void *p) {
      typedef ::L2UpsilonCountsHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::L2UpsilonCountsHistogramGroup

//______________________________________________________________________________
void L2UpsilonMassHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class L2UpsilonMassHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(L2UpsilonMassHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(L2UpsilonMassHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void L2UpsilonMassHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class L2UpsilonMassHistogramGroup.
      TClass *R__cl = ::L2UpsilonMassHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hEnergyL0", &hEnergyL0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hEnergyL2", &hEnergyL2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMass", &hMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCosTheta", &hCosTheta);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_L2UpsilonMassHistogramGroup(void *p) {
      return  p ? new(p) ::L2UpsilonMassHistogramGroup : new ::L2UpsilonMassHistogramGroup;
   }
   static void *newArray_L2UpsilonMassHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::L2UpsilonMassHistogramGroup[nElements] : new ::L2UpsilonMassHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_L2UpsilonMassHistogramGroup(void *p) {
      delete ((::L2UpsilonMassHistogramGroup*)p);
   }
   static void deleteArray_L2UpsilonMassHistogramGroup(void *p) {
      delete [] ((::L2UpsilonMassHistogramGroup*)p);
   }
   static void destruct_L2UpsilonMassHistogramGroup(void *p) {
      typedef ::L2UpsilonMassHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::L2UpsilonMassHistogramGroup

//______________________________________________________________________________
void L2UpsilonTowersHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class L2UpsilonTowersHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(L2UpsilonTowersHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(L2UpsilonTowersHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void L2UpsilonTowersHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class L2UpsilonTowersHistogramGroup.
      TClass *R__cl = ::L2UpsilonTowersHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTriggerTowerIdL0", &hTriggerTowerIdL0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTriggerTowerIdL2", &hTriggerTowerIdL2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNumberOfTowersL0", &hNumberOfTowersL0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNumberOfTowersL2", &hNumberOfTowersL2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hEtaPhiL0", &hEtaPhiL0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hEtaPhiL2", &hEtaPhiL2);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_L2UpsilonTowersHistogramGroup(void *p) {
      return  p ? new(p) ::L2UpsilonTowersHistogramGroup : new ::L2UpsilonTowersHistogramGroup;
   }
   static void *newArray_L2UpsilonTowersHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::L2UpsilonTowersHistogramGroup[nElements] : new ::L2UpsilonTowersHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_L2UpsilonTowersHistogramGroup(void *p) {
      delete ((::L2UpsilonTowersHistogramGroup*)p);
   }
   static void deleteArray_L2UpsilonTowersHistogramGroup(void *p) {
      delete [] ((::L2UpsilonTowersHistogramGroup*)p);
   }
   static void destruct_L2UpsilonTowersHistogramGroup(void *p) {
      typedef ::L2UpsilonTowersHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::L2UpsilonTowersHistogramGroup

//______________________________________________________________________________
void LaserDriftTimeHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class LaserDriftTimeHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LaserDriftTimeHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(LaserDriftTimeHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void LaserDriftTimeHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LaserDriftTimeHistogramGroup.
      TClass *R__cl = ::LaserDriftTimeHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDriftTime", &hDriftTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mLaser", &mLaser);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_LaserDriftTimeHistogramGroup(void *p) {
      return  p ? new(p) ::LaserDriftTimeHistogramGroup : new ::LaserDriftTimeHistogramGroup;
   }
   static void *newArray_LaserDriftTimeHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::LaserDriftTimeHistogramGroup[nElements] : new ::LaserDriftTimeHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_LaserDriftTimeHistogramGroup(void *p) {
      delete ((::LaserDriftTimeHistogramGroup*)p);
   }
   static void deleteArray_LaserDriftTimeHistogramGroup(void *p) {
      delete [] ((::LaserDriftTimeHistogramGroup*)p);
   }
   static void destruct_LaserDriftTimeHistogramGroup(void *p) {
      typedef ::LaserDriftTimeHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::LaserDriftTimeHistogramGroup

//______________________________________________________________________________
void LaserTpcPadChargeHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class LaserTpcPadChargeHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LaserTpcPadChargeHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(LaserTpcPadChargeHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void LaserTpcPadChargeHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LaserTpcPadChargeHistogramGroup.
      TClass *R__cl = ::LaserTpcPadChargeHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTpcSec[6]", &hTpcSec);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_LaserTpcPadChargeHistogramGroup(void *p) {
      return  p ? new(p) ::LaserTpcPadChargeHistogramGroup : new ::LaserTpcPadChargeHistogramGroup;
   }
   static void *newArray_LaserTpcPadChargeHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::LaserTpcPadChargeHistogramGroup[nElements] : new ::LaserTpcPadChargeHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_LaserTpcPadChargeHistogramGroup(void *p) {
      delete ((::LaserTpcPadChargeHistogramGroup*)p);
   }
   static void deleteArray_LaserTpcPadChargeHistogramGroup(void *p) {
      delete [] ((::LaserTpcPadChargeHistogramGroup*)p);
   }
   static void destruct_LaserTpcPadChargeHistogramGroup(void *p) {
      typedef ::LaserTpcPadChargeHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::LaserTpcPadChargeHistogramGroup

//______________________________________________________________________________
void MTDhitsHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTDhitsHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTDhitsHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTDhitsHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void MTDhitsHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MTDhitsHistogramGroup.
      TClass *R__cl = ::MTDhitsHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MTD26E_hitmap[2][2]", &MTD26E_hitmap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MTD26C_hitmap[2][2]", &MTD26C_hitmap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MTD26W_hitmap[2][2]", &MTD26W_hitmap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MTD1_hitmap[2][2]", &MTD1_hitmap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MTD_ToT", &MTD_ToT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MTD_eastT_vs_westT", &MTD_eastT_vs_westT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MTD_eastT_westT", &MTD_eastT_westT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MTD_hits_vs_TOF_hits", &MTD_hits_vs_TOF_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberforsort", &numberforsort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leadinghits", (void*)&leadinghits);
      R__insp.InspectMember("vector<double>", (void*)&leadinghits, "leadinghits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trailinghits", (void*)&trailinghits);
      R__insp.InspectMember("vector<double>", (void*)&trailinghits, "trailinghits.", false);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MTDhitsHistogramGroup(void *p) {
      return  p ? new(p) ::MTDhitsHistogramGroup : new ::MTDhitsHistogramGroup;
   }
   static void *newArray_MTDhitsHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::MTDhitsHistogramGroup[nElements] : new ::MTDhitsHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTDhitsHistogramGroup(void *p) {
      delete ((::MTDhitsHistogramGroup*)p);
   }
   static void deleteArray_MTDhitsHistogramGroup(void *p) {
      delete [] ((::MTDhitsHistogramGroup*)p);
   }
   static void destruct_MTDhitsHistogramGroup(void *p) {
      typedef ::MTDhitsHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MTDhitsHistogramGroup

//______________________________________________________________________________
void MTDtriggerinfoHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class MTDtriggerinfoHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(MTDtriggerinfoHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(MTDtriggerinfoHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void MTDtriggerinfoHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MTDtriggerinfoHistogramGroup.
      TClass *R__cl = ::MTDtriggerinfoHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MTD_adc[3][2]", &MTD_adc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MTD_tac[3][2]", &MTD_tac);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MTDtriggerinfoHistogramGroup(void *p) {
      return  p ? new(p) ::MTDtriggerinfoHistogramGroup : new ::MTDtriggerinfoHistogramGroup;
   }
   static void *newArray_MTDtriggerinfoHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::MTDtriggerinfoHistogramGroup[nElements] : new ::MTDtriggerinfoHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_MTDtriggerinfoHistogramGroup(void *p) {
      delete ((::MTDtriggerinfoHistogramGroup*)p);
   }
   static void deleteArray_MTDtriggerinfoHistogramGroup(void *p) {
      delete [] ((::MTDtriggerinfoHistogramGroup*)p);
   }
   static void destruct_MTDtriggerinfoHistogramGroup(void *p) {
      typedef ::MTDtriggerinfoHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MTDtriggerinfoHistogramGroup

//______________________________________________________________________________
void SVTAnodeHybridHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class SVTAnodeHybridHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SVTAnodeHybridHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(SVTAnodeHybridHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void SVTAnodeHybridHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SVTAnodeHybridHistogramGroup.
      TClass *R__cl = ::SVTAnodeHybridHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hSVT[4]", &hSVT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEvents", &mEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBoard", &mBoard);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SVTAnodeHybridHistogramGroup(void *p) {
      return  p ? new(p) ::SVTAnodeHybridHistogramGroup : new ::SVTAnodeHybridHistogramGroup;
   }
   static void *newArray_SVTAnodeHybridHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::SVTAnodeHybridHistogramGroup[nElements] : new ::SVTAnodeHybridHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_SVTAnodeHybridHistogramGroup(void *p) {
      delete ((::SVTAnodeHybridHistogramGroup*)p);
   }
   static void deleteArray_SVTAnodeHybridHistogramGroup(void *p) {
      delete [] ((::SVTAnodeHybridHistogramGroup*)p);
   }
   static void destruct_SVTAnodeHybridHistogramGroup(void *p) {
      typedef ::SVTAnodeHybridHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SVTAnodeHybridHistogramGroup

//______________________________________________________________________________
void SVTAnodeSumHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class SVTAnodeSumHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SVTAnodeSumHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(SVTAnodeSumHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void SVTAnodeSumHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SVTAnodeSumHistogramGroup.
      TClass *R__cl = ::SVTAnodeSumHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hSVT[2]", &hSVT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEvents", &mEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRunNumber", &mRunNumber);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SVTAnodeSumHistogramGroup(void *p) {
      return  p ? new(p) ::SVTAnodeSumHistogramGroup : new ::SVTAnodeSumHistogramGroup;
   }
   static void *newArray_SVTAnodeSumHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::SVTAnodeSumHistogramGroup[nElements] : new ::SVTAnodeSumHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_SVTAnodeSumHistogramGroup(void *p) {
      delete ((::SVTAnodeSumHistogramGroup*)p);
   }
   static void deleteArray_SVTAnodeSumHistogramGroup(void *p) {
      delete [] ((::SVTAnodeSumHistogramGroup*)p);
   }
   static void destruct_SVTAnodeSumHistogramGroup(void *p) {
      typedef ::SVTAnodeSumHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SVTAnodeSumHistogramGroup

//______________________________________________________________________________
void SsdPedestalHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class SsdPedestalHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SsdPedestalHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(SsdPedestalHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void SsdPedestalHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SsdPedestalHistogramGroup.
      TClass *R__cl = ::SsdPedestalHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h1SsdMeanPedestal", &h1SsdMeanPedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h1SsdMeanNoise", &h1SsdMeanNoise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "good_ssd", &good_ssd);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SsdPedestalHistogramGroup(void *p) {
      return  p ? new(p) ::SsdPedestalHistogramGroup : new ::SsdPedestalHistogramGroup;
   }
   static void *newArray_SsdPedestalHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::SsdPedestalHistogramGroup[nElements] : new ::SsdPedestalHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_SsdPedestalHistogramGroup(void *p) {
      delete ((::SsdPedestalHistogramGroup*)p);
   }
   static void deleteArray_SsdPedestalHistogramGroup(void *p) {
      delete [] ((::SsdPedestalHistogramGroup*)p);
   }
   static void destruct_SsdPedestalHistogramGroup(void *p) {
      typedef ::SsdPedestalHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SsdPedestalHistogramGroup

//______________________________________________________________________________
void TOFL0HistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class TOFL0HistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TOFL0HistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(TOFL0HistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void TOFL0HistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TOFL0HistogramGroup.
      TClass *R__cl = ::TOFL0HistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_L0_hit[30]", &TOF_L0_hit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_L0_trg[30]", &TOF_L0_trg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPart", &mPart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNtray", &mNtray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "actualTrayNum[30]", actualTrayNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NotActiveTray[128]", NotActiveTray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaskoutTray[128]", MaskoutTray);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TOFL0HistogramGroup(void *p) {
      return  p ? new(p) ::TOFL0HistogramGroup : new ::TOFL0HistogramGroup;
   }
   static void *newArray_TOFL0HistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::TOFL0HistogramGroup[nElements] : new ::TOFL0HistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_TOFL0HistogramGroup(void *p) {
      delete ((::TOFL0HistogramGroup*)p);
   }
   static void deleteArray_TOFL0HistogramGroup(void *p) {
      delete [] ((::TOFL0HistogramGroup*)p);
   }
   static void destruct_TOFL0HistogramGroup(void *p) {
      typedef ::TOFL0HistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TOFL0HistogramGroup

//______________________________________________________________________________
void TOFL1multHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class TOFL1multHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TOFL1multHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(TOFL1multHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void TOFL1multHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TOFL1multHistogramGroup.
      TClass *R__cl = ::TOFL1multHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_L1mult_vs_ZDCadcsum", &TOF_L1mult_vs_ZDCadcsum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_L1mult_vs_sumL0", &TOF_L1mult_vs_sumL0);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TOFL1multHistogramGroup(void *p) {
      return  p ? new(p) ::TOFL1multHistogramGroup : new ::TOFL1multHistogramGroup;
   }
   static void *newArray_TOFL1multHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::TOFL1multHistogramGroup[nElements] : new ::TOFL1multHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_TOFL1multHistogramGroup(void *p) {
      delete ((::TOFL1multHistogramGroup*)p);
   }
   static void deleteArray_TOFL1multHistogramGroup(void *p) {
      delete [] ((::TOFL1multHistogramGroup*)p);
   }
   static void destruct_TOFL1multHistogramGroup(void *p) {
      typedef ::TOFL1multHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TOFL1multHistogramGroup

//______________________________________________________________________________
void TOFcheckHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class TOFcheckHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TOFcheckHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(TOFcheckHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void TOFcheckHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TOFcheckHistogramGroup.
      TClass *R__cl = ::TOFcheckHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_Error1", &TOF_Error1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_Error2", &TOF_Error2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_Error3", &TOF_Error3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_EventCount", &TOF_EventCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_Tray_hits1", &TOF_Tray_hits1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_Tray_hits2", &TOF_Tray_hits2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NotActiveTray[128]", NotActiveTray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mReferenceTray", &mReferenceTray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mValidShiftTray[2][4]", mValidShiftTray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mValidShift121[2][2]", mValidShift121);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mValidShift122[2][2]", mValidShift122);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TOFcheckHistogramGroup(void *p) {
      return  p ? new(p) ::TOFcheckHistogramGroup : new ::TOFcheckHistogramGroup;
   }
   static void *newArray_TOFcheckHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::TOFcheckHistogramGroup[nElements] : new ::TOFcheckHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_TOFcheckHistogramGroup(void *p) {
      delete ((::TOFcheckHistogramGroup*)p);
   }
   static void deleteArray_TOFcheckHistogramGroup(void *p) {
      delete [] ((::TOFcheckHistogramGroup*)p);
   }
   static void destruct_TOFcheckHistogramGroup(void *p) {
      typedef ::TOFcheckHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TOFcheckHistogramGroup

//______________________________________________________________________________
void TOFtrayHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class TOFtrayHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TOFtrayHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(TOFtrayHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void TOFtrayHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TOFtrayHistogramGroup.
      TClass *R__cl = ::TOFtrayHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_Tray_LEhitmap[30]", &TOF_Tray_LEhitmap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF_Tray_TEhitmap[30]", &TOF_Tray_TEhitmap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPart", &mPart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNtray", &mNtray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "actualTrayNum[30]", actualTrayNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NotActiveTray[128]", NotActiveTray);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TOFtrayHistogramGroup(void *p) {
      return  p ? new(p) ::TOFtrayHistogramGroup : new ::TOFtrayHistogramGroup;
   }
   static void *newArray_TOFtrayHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::TOFtrayHistogramGroup[nElements] : new ::TOFtrayHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_TOFtrayHistogramGroup(void *p) {
      delete ((::TOFtrayHistogramGroup*)p);
   }
   static void deleteArray_TOFtrayHistogramGroup(void *p) {
      delete [] ((::TOFtrayHistogramGroup*)p);
   }
   static void destruct_TOFtrayHistogramGroup(void *p) {
      typedef ::TOFtrayHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TOFtrayHistogramGroup

//______________________________________________________________________________
void TOFupvpdHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class TOFupvpdHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TOFupvpdHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(TOFupvpdHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void TOFupvpdHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TOFupvpdHistogramGroup.
      TClass *R__cl = ::TOFupvpdHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*upvpd_hitmap[2]", &upvpd_hitmap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*upvpd_ToT", &upvpd_ToT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*upvpd_eastT_vs_westT", &upvpd_eastT_vs_westT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numberforsort", &numberforsort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leadinghits", (void*)&leadinghits);
      R__insp.InspectMember("vector<double>", (void*)&leadinghits, "leadinghits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trailinghits", (void*)&trailinghits);
      R__insp.InspectMember("vector<double>", (void*)&trailinghits, "trailinghits.", false);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TOFupvpdHistogramGroup(void *p) {
      return  p ? new(p) ::TOFupvpdHistogramGroup : new ::TOFupvpdHistogramGroup;
   }
   static void *newArray_TOFupvpdHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::TOFupvpdHistogramGroup[nElements] : new ::TOFupvpdHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_TOFupvpdHistogramGroup(void *p) {
      delete ((::TOFupvpdHistogramGroup*)p);
   }
   static void deleteArray_TOFupvpdHistogramGroup(void *p) {
      delete [] ((::TOFupvpdHistogramGroup*)p);
   }
   static void destruct_TOFupvpdHistogramGroup(void *p) {
      typedef ::TOFupvpdHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TOFupvpdHistogramGroup

//______________________________________________________________________________
void UPCHistogramCtbGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class UPCHistogramCtbGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(UPCHistogramCtbGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(UPCHistogramCtbGroup::Class(),this);
   }
}

//______________________________________________________________________________
void UPCHistogramCtbGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class UPCHistogramCtbGroup.
      TClass *R__cl = ::UPCHistogramCtbGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_ctb_adc_sum", &h_ctb_adc_sum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_ctb_count_vs_tray", &h_ctb_count_vs_tray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_ctb_cdb", &h_ctb_cdb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_ctb_cdb_zoom", &h_ctb_cdb_zoom);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_UPCHistogramCtbGroup(void *p) {
      return  p ? new(p) ::UPCHistogramCtbGroup : new ::UPCHistogramCtbGroup;
   }
   static void *newArray_UPCHistogramCtbGroup(Long_t nElements, void *p) {
      return p ? new(p) ::UPCHistogramCtbGroup[nElements] : new ::UPCHistogramCtbGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_UPCHistogramCtbGroup(void *p) {
      delete ((::UPCHistogramCtbGroup*)p);
   }
   static void deleteArray_UPCHistogramCtbGroup(void *p) {
      delete [] ((::UPCHistogramCtbGroup*)p);
   }
   static void destruct_UPCHistogramCtbGroup(void *p) {
      typedef ::UPCHistogramCtbGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::UPCHistogramCtbGroup

//______________________________________________________________________________
void UPCHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class UPCHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(UPCHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(UPCHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void UPCHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class UPCHistogramGroup.
      TClass *R__cl = ::UPCHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_zdc_time_east", &h_zdc_time_east);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_zdc_time_west", &h_zdc_time_west);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_zdc_timediff_east_west", &h_zdc_timediff_east_west);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_zdc_time_east_vs_west", &h_zdc_time_east_vs_west);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_zdc_unatt_east", &h_zdc_unatt_east);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_zdc_unatt_west", &h_zdc_unatt_west);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_UPCHistogramGroup(void *p) {
      return  p ? new(p) ::UPCHistogramGroup : new ::UPCHistogramGroup;
   }
   static void *newArray_UPCHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::UPCHistogramGroup[nElements] : new ::UPCHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_UPCHistogramGroup(void *p) {
      delete ((::UPCHistogramGroup*)p);
   }
   static void deleteArray_UPCHistogramGroup(void *p) {
      delete [] ((::UPCHistogramGroup*)p);
   }
   static void destruct_UPCHistogramGroup(void *p) {
      typedef ::UPCHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::UPCHistogramGroup

//______________________________________________________________________________
void UPCHistogramZdcGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class UPCHistogramZdcGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(UPCHistogramZdcGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(UPCHistogramZdcGroup::Class(),this);
   }
}

//______________________________________________________________________________
void UPCHistogramZdcGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class UPCHistogramZdcGroup.
      TClass *R__cl = ::UPCHistogramZdcGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_zdce_sum", &h_zdce_sum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_zdcw_sum", &h_zdcw_sum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_zdce_sum_vs_ctb_sum", &h_zdce_sum_vs_ctb_sum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_zdcw_sum_vs_ctb_sum", &h_zdcw_sum_vs_ctb_sum);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_UPCHistogramZdcGroup(void *p) {
      return  p ? new(p) ::UPCHistogramZdcGroup : new ::UPCHistogramZdcGroup;
   }
   static void *newArray_UPCHistogramZdcGroup(Long_t nElements, void *p) {
      return p ? new(p) ::UPCHistogramZdcGroup[nElements] : new ::UPCHistogramZdcGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_UPCHistogramZdcGroup(void *p) {
      delete ((::UPCHistogramZdcGroup*)p);
   }
   static void deleteArray_UPCHistogramZdcGroup(void *p) {
      delete [] ((::UPCHistogramZdcGroup*)p);
   }
   static void destruct_UPCHistogramZdcGroup(void *p) {
      typedef ::UPCHistogramZdcGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::UPCHistogramZdcGroup

//______________________________________________________________________________
void VPDHiHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class VPDHiHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(VPDHiHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(VPDHiHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void VPDHiHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class VPDHiHistogramGroup.
      TClass *R__cl = ::VPDHiHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_vpd_cdb[4]", &h_vpd_cdb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_vpd_tac_east_vs_tac_west", &h_vpd_tac_east_vs_tac_west);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_vpd_vertex_vs_l3_vertex", &h_vpd_vertex_vs_l3_vertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_vpd_earliestTAC_vs_eastchan", &h_vpd_earliestTAC_vs_eastchan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_vpd_earliestTAC_vs_westchan", &h_vpd_earliestTAC_vs_westchan);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_VPDHiHistogramGroup(void *p) {
      return  p ? new(p) ::VPDHiHistogramGroup : new ::VPDHiHistogramGroup;
   }
   static void *newArray_VPDHiHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::VPDHiHistogramGroup[nElements] : new ::VPDHiHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_VPDHiHistogramGroup(void *p) {
      delete ((::VPDHiHistogramGroup*)p);
   }
   static void deleteArray_VPDHiHistogramGroup(void *p) {
      delete [] ((::VPDHiHistogramGroup*)p);
   }
   static void destruct_VPDHiHistogramGroup(void *p) {
      typedef ::VPDHiHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::VPDHiHistogramGroup

//______________________________________________________________________________
void VPDHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class VPDHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(VPDHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(VPDHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void VPDHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class VPDHistogramGroup.
      TClass *R__cl = ::VPDHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_vpd_cdb[4]", &h_vpd_cdb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_vpd_tac_east_vs_tac_west", &h_vpd_tac_east_vs_tac_west);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_vpd_vertex_vs_l3_vertex", &h_vpd_vertex_vs_l3_vertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_vpd_earliestTAC_vs_eastchan", &h_vpd_earliestTAC_vs_eastchan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_vpd_earliestTAC_vs_westchan", &h_vpd_earliestTAC_vs_westchan);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_VPDHistogramGroup(void *p) {
      return  p ? new(p) ::VPDHistogramGroup : new ::VPDHistogramGroup;
   }
   static void *newArray_VPDHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::VPDHistogramGroup[nElements] : new ::VPDHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_VPDHistogramGroup(void *p) {
      delete ((::VPDHistogramGroup*)p);
   }
   static void deleteArray_VPDHistogramGroup(void *p) {
      delete [] ((::VPDHistogramGroup*)p);
   }
   static void destruct_VPDHistogramGroup(void *p) {
      typedef ::VPDHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::VPDHistogramGroup

//______________________________________________________________________________
void pp2ppHistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class pp2ppHistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(pp2ppHistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(pp2ppHistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void pp2ppHistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class pp2ppHistogramGroup.
      TClass *R__cl = ::pp2ppHistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRunNumber", &mRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h_P2P[16]", &h_P2P);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mswitch", &mswitch);
      HistogramGroup::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_pp2ppHistogramGroup(void *p) {
      return  p ? new(p) ::pp2ppHistogramGroup : new ::pp2ppHistogramGroup;
   }
   static void *newArray_pp2ppHistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::pp2ppHistogramGroup[nElements] : new ::pp2ppHistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_pp2ppHistogramGroup(void *p) {
      delete ((::pp2ppHistogramGroup*)p);
   }
   static void deleteArray_pp2ppHistogramGroup(void *p) {
      delete [] ((::pp2ppHistogramGroup*)p);
   }
   static void destruct_pp2ppHistogramGroup(void *p) {
      typedef ::pp2ppHistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::pp2ppHistogramGroup

//______________________________________________________________________________
void DGHelp::Streamer(TBuffer &R__b)
{
   // Stream an object of class DGHelp.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(DGHelp::Class(),this);
   } else {
      R__b.WriteClassBuffer(DGHelp::Class(),this);
   }
}

//______________________________________________________________________________
void DGHelp::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class DGHelp.
      TClass *R__cl = ::DGHelp::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQObject", &fQObject);
      R__insp.InspectMember(fQObject, "fQObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMemList", &fMemList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTextView", &fTextView);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fL0", &fL0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fL1", &fL1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCloseButton", &fCloseButton);
      TGTransientFrame::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_DGHelp(void *p) {
      delete ((::DGHelp*)p);
   }
   static void deleteArray_DGHelp(void *p) {
      delete [] ((::DGHelp*)p);
   }
   static void destruct_DGHelp(void *p) {
      typedef ::DGHelp current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::DGHelp

//______________________________________________________________________________
void EvpServer::Streamer(TBuffer &R__b)
{
   // Stream an object of class EvpServer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EvpServer::Class(),this);
   } else {
      R__b.WriteClassBuffer(EvpServer::Class(),this);
   }
}

//______________________________________________________________________________
void EvpServer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EvpServer.
      TClass *R__cl = ::EvpServer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mGoFlag", &mGoFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTarget[1024]", mTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDebugLevel", &mDebugLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mHistoSaved", &mHistoSaved);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDoEndOfRun", &mDoEndOfRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDoEndOfRunQuit", &mDoEndOfRunQuit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mQuit", &mQuit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mMaxEventsPerRun", &mMaxEventsPerRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*evp", &evp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mGroups", (void*)&mGroups);
      R__insp.InspectMember("GroupCollection", (void*)&mGroups, "mGroups.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mHistoHandler", &mHistoHandler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mFile", &mFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mRS", &mRS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mSS", &mSS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mGui", &mGui);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_EvpServer(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EvpServer : new ::EvpServer;
   }
   static void *newArray_EvpServer(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EvpServer[nElements] : new ::EvpServer[nElements];
   }
   // Wrapper around operator delete
   static void delete_EvpServer(void *p) {
      delete ((::EvpServer*)p);
   }
   static void deleteArray_EvpServer(void *p) {
      delete [] ((::EvpServer*)p);
   }
   static void destruct_EvpServer(void *p) {
      typedef ::EvpServer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::EvpServer

//______________________________________________________________________________
void HistogramGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class HistogramGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HistogramGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(HistogramGroup::Class(),this);
   }
}

//______________________________________________________________________________
void HistogramGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HistogramGroup.
      TClass *R__cl = ::HistogramGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mGroupName", &mGroupName);
      R__insp.InspectMember(mGroupName, "mGroupName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSubGroupName", &mSubGroupName);
      R__insp.InspectMember(mSubGroupName, "mSubGroupName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTriggerName", &mTriggerName);
      R__insp.InspectMember(mTriggerName, "mTriggerName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDetectorName", &mDetectorName);
      R__insp.InspectMember(mDetectorName, "mDetectorName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mId", &mId);
      R__insp.InspectMember(mId, "mId.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTriggerBits", &mTriggerBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDetectorBits", &mDetectorBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mActive", &mActive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPrinted", &mPrinted);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HistogramGroup(void *p) {
      return  p ? new(p) ::HistogramGroup : new ::HistogramGroup;
   }
   static void *newArray_HistogramGroup(Long_t nElements, void *p) {
      return p ? new(p) ::HistogramGroup[nElements] : new ::HistogramGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_HistogramGroup(void *p) {
      delete ((::HistogramGroup*)p);
   }
   static void deleteArray_HistogramGroup(void *p) {
      delete [] ((::HistogramGroup*)p);
   }
   static void destruct_HistogramGroup(void *p) {
      typedef ::HistogramGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::HistogramGroup

//______________________________________________________________________________
void PGMessage::Streamer(TBuffer &R__b)
{
   // Stream an object of class PGMessage.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PGMessage::Class(),this);
   } else {
      R__b.WriteClassBuffer(PGMessage::Class(),this);
   }
}

//______________________________________________________________________________
void PGMessage::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PGMessage.
      TClass *R__cl = ::PGMessage::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQObject", &fQObject);
      R__insp.InspectMember(fQObject, "fQObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMemList", &fMemList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTextView", &fTextView);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fL0", &fL0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fL1", &fL1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCloseButton", &fCloseButton);
      TGTransientFrame::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_PGMessage(void *p) {
      delete ((::PGMessage*)p);
   }
   static void deleteArray_PGMessage(void *p) {
      delete [] ((::PGMessage*)p);
   }
   static void destruct_PGMessage(void *p) {
      typedef ::PGMessage current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::PGMessage

//______________________________________________________________________________
void RunStatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class RunStatus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RunStatus::Class(),this);
   } else {
      R__b.WriteClassBuffer(RunStatus::Class(),this);
   }
}

//______________________________________________________________________________
void RunStatus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RunStatus.
      TClass *R__cl = ::RunStatus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRun", &mRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEvent", &mEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCount", &mCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEnd", &mEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mLive", &mLive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mToken", &mToken);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEmpty", &mEmpty);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mType", &mType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mStatus", &mStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTime", &mTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEndOfRunActionPerformed", &mEndOfRunActionPerformed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTriggerBits", &mTriggerBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDetectorBits", &mDetectorBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTriggerBitsRun", &mTriggerBitsRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDetectorBitsRun", &mDetectorBitsRun);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RunStatus(void *p) {
      return  p ? new(p) ::RunStatus : new ::RunStatus;
   }
   static void *newArray_RunStatus(Long_t nElements, void *p) {
      return p ? new(p) ::RunStatus[nElements] : new ::RunStatus[nElements];
   }
   // Wrapper around operator delete
   static void delete_RunStatus(void *p) {
      delete ((::RunStatus*)p);
   }
   static void deleteArray_RunStatus(void *p) {
      delete [] ((::RunStatus*)p);
   }
   static void destruct_RunStatus(void *p) {
      typedef ::RunStatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RunStatus

//______________________________________________________________________________
void ServerGui::Streamer(TBuffer &R__b)
{
   // Stream an object of class ServerGui.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ServerGui::Class(),this);
   } else {
      R__b.WriteClassBuffer(ServerGui::Class(),this);
   }
}

//______________________________________________________________________________
void ServerGui::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ServerGui.
      TClass *R__cl = ::ServerGui::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQObject", &fQObject);
      R__insp.InspectMember(fQObject, "fQObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMain", &fMain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMain1", &fMain1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fConnectionFrame", &fConnectionFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fControlFrame", &fControlFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunFrame", &fRunFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistoFrame", &fHistoFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMessagesFrame", &fMessagesFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunLoopFrame", &fRunLoopFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunInfoFrame", &fRunInfoFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunIDFrame", &fRunIDFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunLabel", &fRunLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRun", &fRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mRun", &mRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventCountFrame", &fEventCountFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventCountLabel", &fEventCountLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventCount", &fEventCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mEventCount", &mEventCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventNumberFrame", &fEventNumberFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventNumberLabel", &fEventNumberLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventNumber", &fEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mEventNumber", &mEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTokenNumberFrame", &fTokenNumberFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTokenNumberLabel", &fTokenNumberLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTokenNumber", &fTokenNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mTokenNumber", &mTokenNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSourceFileFrame", &fSourceFileFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSourceFileLabel", &fSourceFileLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSourceFile", &fSourceFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mSourceFileName", &mSourceFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunStatusFrame", &fRunStatusFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunStatusLabel", &fRunStatusLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRunStatus", &fRunStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mRunStatusName", &mRunStatusName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fButtonFrame", &fButtonFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStartButton", &fStartButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStopButton", &fStopButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextButton", &fNextButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLiveButton", &fLiveButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFileButton", &fFileButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistoControlFrame", &fHistoControlFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistoInfoFrame", &fHistoInfoFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDummyConnectionFrame", &fDummyConnectionFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDummyRunLoopFrame", &fDummyRunLoopFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDummyHistoFrame", &fDummyHistoFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDummyRunInfoFrame", &fDummyRunInfoFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistoFileFrame", &fHistoFileFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistoFileLabel", &fHistoFileLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistoFile", &fHistoFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mHistoOutFileName", &mHistoOutFileName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistoButtonFrame", &fHistoButtonFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistoResetButton", &fHistoResetButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistoSaveButton", &fHistoSaveButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistoSavePSButton", &fHistoSavePSButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistoPrintButton", &fHistoPrintButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistoViewButton", &fHistoViewButton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStarLogo", &fStarLogo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuBar", &fMenuBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuFile", &fMenuFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMenuHelp", &fMenuHelp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fL0", &fL0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fL1", &fL1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fL101", &fL101);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fL102", &fL102);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fL2", &fL2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fL3", &fL3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fL200", &fL200);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fL201", &fL201);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fL203", &fL203);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fL204", &fL204);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLDir", &fLDir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fButtonFrameLayout", &fButtonFrameLayout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fL5", &fL5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fL6", &fL6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCleanUp", &fCleanUp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mEvpServer", &mEvpServer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mDebugLevel", &mDebugLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "green", &green);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "blue", &blue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "grey", &grey);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "red", &red);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "black", &black);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_ServerGui(void *p) {
      delete ((::ServerGui*)p);
   }
   static void deleteArray_ServerGui(void *p) {
      delete [] ((::ServerGui*)p);
   }
   static void destruct_ServerGui(void *p) {
      typedef ::ServerGui current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ServerGui

//______________________________________________________________________________
void ServerStatus::Streamer(TBuffer &R__b)
{
   // Stream an object of class ServerStatus.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ServerStatus::Class(),this);
   } else {
      R__b.WriteClassBuffer(ServerStatus::Class(),this);
   }
}

//______________________________________________________________________________
void ServerStatus::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ServerStatus.
      TClass *R__cl = ::ServerStatus::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mReceiveTime", &mReceiveTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRequestTime", &mRequestTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mReceiveType", &mReceiveType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRequestType", &mRequestType);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ServerStatus(void *p) {
      return  p ? new(p) ::ServerStatus : new ::ServerStatus;
   }
   static void *newArray_ServerStatus(Long_t nElements, void *p) {
      return p ? new(p) ::ServerStatus[nElements] : new ::ServerStatus[nElements];
   }
   // Wrapper around operator delete
   static void delete_ServerStatus(void *p) {
      delete ((::ServerStatus*)p);
   }
   static void deleteArray_ServerStatus(void *p) {
      delete [] ((::ServerStatus*)p);
   }
   static void destruct_ServerStatus(void *p) {
      typedef ::ServerStatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ServerStatus

//______________________________________________________________________________
void endOfRunActionMain::Streamer(TBuffer &R__b)
{
   // Stream an object of class endOfRunActionMain.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(endOfRunActionMain::Class(),this);
   } else {
      R__b.WriteClassBuffer(endOfRunActionMain::Class(),this);
   }
}

//______________________________________________________________________________
void endOfRunActionMain::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class endOfRunActionMain.
      TClass *R__cl = ::endOfRunActionMain::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_endOfRunActionMain(void *p) {
      delete ((::endOfRunActionMain*)p);
   }
   static void deleteArray_endOfRunActionMain(void *p) {
      delete [] ((::endOfRunActionMain*)p);
   }
   static void destruct_endOfRunActionMain(void *p) {
      typedef ::endOfRunActionMain current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::endOfRunActionMain

//______________________________________________________________________________
void evpServerMain::Streamer(TBuffer &R__b)
{
   // Stream an object of class evpServerMain.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(evpServerMain::Class(),this);
   } else {
      R__b.WriteClassBuffer(evpServerMain::Class(),this);
   }
}

//______________________________________________________________________________
void evpServerMain::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class evpServerMain.
      TClass *R__cl = ::evpServerMain::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_evpServerMain(void *p) {
      return  p ? new(p) ::evpServerMain : new ::evpServerMain;
   }
   static void *newArray_evpServerMain(Long_t nElements, void *p) {
      return p ? new(p) ::evpServerMain[nElements] : new ::evpServerMain[nElements];
   }
   // Wrapper around operator delete
   static void delete_evpServerMain(void *p) {
      delete ((::evpServerMain*)p);
   }
   static void deleteArray_evpServerMain(void *p) {
      delete [] ((::evpServerMain*)p);
   }
   static void destruct_evpServerMain(void *p) {
      typedef ::evpServerMain current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::evpServerMain

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

/********************************************************
* .sl73_gcc485/obj/OnlTools/OnlinePlots/OnlinePlots_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableOnlinePlots_Cint();

extern "C" void G__set_cpp_environmentOnlinePlots_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("BESHistogramGroup.h");
  G__add_compiledheader("FMSHistogramGroup.h");
  G__add_compiledheader("GroupStatisticsHistogramGroup.h");
  G__add_compiledheader("L2UpsilonCountsHistogramGroup.h");
  G__add_compiledheader("L2UpsilonMassHistogramGroup.h");
  G__add_compiledheader("L2UpsilonTowersHistogramGroup.h");
  G__add_compiledheader("LaserDriftTimeHistogramGroup.h");
  G__add_compiledheader("LaserTpcPadChargeHistogramGroup.h");
  G__add_compiledheader("MTDhitsHistogramGroup.h");
  G__add_compiledheader("MTDtriggerinfoHistogramGroup.h");
  G__add_compiledheader("SVTAnodeHybridHistogramGroup.h");
  G__add_compiledheader("SVTAnodeSumHistogramGroup.h");
  G__add_compiledheader("SsdPedestalHistogramGroup.h");
  G__add_compiledheader("TOFL0HistogramGroup.h");
  G__add_compiledheader("TOFL1multHistogramGroup.h");
  G__add_compiledheader("TOFcheckHistogramGroup.h");
  G__add_compiledheader("TOFtrayHistogramGroup.h");
  G__add_compiledheader("TOFupvpdHistogramGroup.h");
  G__add_compiledheader("UPCHistogramCtbGroup.h");
  G__add_compiledheader("UPCHistogramGroup.h");
  G__add_compiledheader("UPCHistogramZdcGroup.h");
  G__add_compiledheader("VPDHiHistogramGroup.h");
  G__add_compiledheader("VPDHistogramGroup.h");
  G__add_compiledheader("pp2ppHistogramGroup.h");
  G__add_compiledheader("DGHelp.h");
  G__add_compiledheader("EvpServer.h");
  G__add_compiledheader("HistogramGroup.h");
  G__add_compiledheader("PGMessage.h");
  G__add_compiledheader("RunStatus.h");
  G__add_compiledheader("ServerGui.h");
  G__add_compiledheader("ServerStatus.h");
  G__add_compiledheader("endOfRunActionMain.h");
  G__add_compiledheader("evpServerMain.h");
  G__cpp_reset_tagtableOnlinePlots_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevOnlinePlots_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HistogramGroup */
static int G__OnlinePlots_Cint_605_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HistogramGroup[n];
     } else {
       p = new((void*) gvp) HistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HistogramGroup;
     } else {
       p = new((void*) gvp) HistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) HistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HistogramGroup*) G__getstructoffset())->fill((evpReader*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistogramGroup*) G__getstructoffset())->draw((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistogramGroup*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistogramGroup*) G__getstructoffset())->beginRun((evpReader*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistogramGroup*) G__getstructoffset())->endRun();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistogramGroup*) G__getstructoffset())->finish();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const HistogramGroup*) G__getstructoffset())->groupName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const HistogramGroup*) G__getstructoffset())->subGroupName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const HistogramGroup*) G__getstructoffset())->triggerName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const HistogramGroup*) G__getstructoffset())->detectorName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const HistogramGroup*) G__getstructoffset())->id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const HistogramGroup*) G__getstructoffset())->operator<(*(HistogramGroup*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HistogramGroup*) G__getstructoffset())->testBits((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistogramGroup*) G__getstructoffset())->setActive((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HistogramGroup*) G__getstructoffset())->active());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistogramGroup*) G__getstructoffset())->setPrinted((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HistogramGroup*) G__getstructoffset())->printed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_605_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_605_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HistogramGroup(*(HistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HistogramGroup G__THistogramGroup;
static int G__OnlinePlots_Cint_605_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HistogramGroup*) (soff+(sizeof(HistogramGroup)*i)))->~G__THistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HistogramGroup*) (soff))->~G__THistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_605_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HistogramGroup* dest = (HistogramGroup*) G__getstructoffset();
   *dest = *(HistogramGroup*) libp->para[0].ref;
   const HistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BESHistogramGroup */
static int G__OnlinePlots_Cint_619_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BESHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BESHistogramGroup[n];
     } else {
       p = new((void*) gvp) BESHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BESHistogramGroup;
     } else {
       p = new((void*) gvp) BESHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_BESHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_619_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BESHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BESHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) BESHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BESHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) BESHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BESHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) BESHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BESHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) BESHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_BESHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_619_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BESHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_619_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BESHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_619_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BESHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_619_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BESHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_619_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BESHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_619_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BESHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_619_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BESHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_619_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BESHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_619_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BESHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_619_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BESHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BESHistogramGroup(*(BESHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_BESHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BESHistogramGroup G__TBESHistogramGroup;
static int G__OnlinePlots_Cint_619_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BESHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BESHistogramGroup*) (soff+(sizeof(BESHistogramGroup)*i)))->~G__TBESHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BESHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BESHistogramGroup*) (soff))->~G__TBESHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FMSHistogramGroup */
static int G__OnlinePlots_Cint_620_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FMSHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FMSHistogramGroup[n];
     } else {
       p = new((void*) gvp) FMSHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FMSHistogramGroup;
     } else {
       p = new((void*) gvp) FMSHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_FMSHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_620_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FMSHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FMSHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) FMSHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FMSHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) FMSHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FMSHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) FMSHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FMSHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) FMSHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_FMSHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_620_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FMSHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_620_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_620_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FMSHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_620_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FMSHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_620_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FMSHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_620_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_620_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FMSHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_620_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FMSHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_620_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FMSHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_620_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FMSHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FMSHistogramGroup(*(FMSHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_FMSHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FMSHistogramGroup G__TFMSHistogramGroup;
static int G__OnlinePlots_Cint_620_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FMSHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FMSHistogramGroup*) (soff+(sizeof(FMSHistogramGroup)*i)))->~G__TFMSHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FMSHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FMSHistogramGroup*) (soff))->~G__TFMSHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_620_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FMSHistogramGroup* dest = (FMSHistogramGroup*) G__getstructoffset();
   *dest = *(FMSHistogramGroup*) libp->para[0].ref;
   const FMSHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GroupStatisticsHistogramGroup */
static int G__OnlinePlots_Cint_622_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GroupStatisticsHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GroupStatisticsHistogramGroup[n];
     } else {
       p = new((void*) gvp) GroupStatisticsHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GroupStatisticsHistogramGroup;
     } else {
       p = new((void*) gvp) GroupStatisticsHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_GroupStatisticsHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_622_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GroupStatisticsHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GroupStatisticsHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) GroupStatisticsHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GroupStatisticsHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) GroupStatisticsHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GroupStatisticsHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) GroupStatisticsHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GroupStatisticsHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) GroupStatisticsHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_GroupStatisticsHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_622_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GroupStatisticsHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_622_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GroupStatisticsHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_622_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GroupStatisticsHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_622_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GroupStatisticsHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_622_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GroupStatisticsHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_622_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GroupStatisticsHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_622_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GroupStatisticsHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_622_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GroupStatisticsHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_622_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GroupStatisticsHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_622_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GroupStatisticsHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GroupStatisticsHistogramGroup(*(GroupStatisticsHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_GroupStatisticsHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GroupStatisticsHistogramGroup G__TGroupStatisticsHistogramGroup;
static int G__OnlinePlots_Cint_622_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GroupStatisticsHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GroupStatisticsHistogramGroup*) (soff+(sizeof(GroupStatisticsHistogramGroup)*i)))->~G__TGroupStatisticsHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GroupStatisticsHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GroupStatisticsHistogramGroup*) (soff))->~G__TGroupStatisticsHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_622_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GroupStatisticsHistogramGroup* dest = (GroupStatisticsHistogramGroup*) G__getstructoffset();
   *dest = *(GroupStatisticsHistogramGroup*) libp->para[0].ref;
   const GroupStatisticsHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* L2UpsilonCountsHistogramGroup */
static int G__OnlinePlots_Cint_623_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   L2UpsilonCountsHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonCountsHistogramGroup[n];
     } else {
       p = new((void*) gvp) L2UpsilonCountsHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonCountsHistogramGroup;
     } else {
       p = new((void*) gvp) L2UpsilonCountsHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonCountsHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_623_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   L2UpsilonCountsHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonCountsHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) L2UpsilonCountsHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonCountsHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) L2UpsilonCountsHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonCountsHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) L2UpsilonCountsHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonCountsHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) L2UpsilonCountsHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonCountsHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_623_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) L2UpsilonCountsHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_623_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) L2UpsilonCountsHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_623_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) L2UpsilonCountsHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_623_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      L2UpsilonCountsHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_623_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((L2UpsilonCountsHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_623_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) L2UpsilonCountsHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_623_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) L2UpsilonCountsHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_623_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) L2UpsilonCountsHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_623_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) L2UpsilonCountsHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_623_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   L2UpsilonCountsHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new L2UpsilonCountsHistogramGroup(*(L2UpsilonCountsHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonCountsHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef L2UpsilonCountsHistogramGroup G__TL2UpsilonCountsHistogramGroup;
static int G__OnlinePlots_Cint_623_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (L2UpsilonCountsHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((L2UpsilonCountsHistogramGroup*) (soff+(sizeof(L2UpsilonCountsHistogramGroup)*i)))->~G__TL2UpsilonCountsHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (L2UpsilonCountsHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((L2UpsilonCountsHistogramGroup*) (soff))->~G__TL2UpsilonCountsHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_623_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   L2UpsilonCountsHistogramGroup* dest = (L2UpsilonCountsHistogramGroup*) G__getstructoffset();
   *dest = *(L2UpsilonCountsHistogramGroup*) libp->para[0].ref;
   const L2UpsilonCountsHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* L2UpsilonMassHistogramGroup */
static int G__OnlinePlots_Cint_624_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   L2UpsilonMassHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonMassHistogramGroup[n];
     } else {
       p = new((void*) gvp) L2UpsilonMassHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonMassHistogramGroup;
     } else {
       p = new((void*) gvp) L2UpsilonMassHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonMassHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_624_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   L2UpsilonMassHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonMassHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) L2UpsilonMassHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonMassHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) L2UpsilonMassHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonMassHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) L2UpsilonMassHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonMassHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) L2UpsilonMassHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonMassHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_624_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) L2UpsilonMassHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_624_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) L2UpsilonMassHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_624_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) L2UpsilonMassHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_624_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      L2UpsilonMassHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_624_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((L2UpsilonMassHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_624_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) L2UpsilonMassHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_624_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) L2UpsilonMassHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_624_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) L2UpsilonMassHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_624_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) L2UpsilonMassHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_624_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   L2UpsilonMassHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new L2UpsilonMassHistogramGroup(*(L2UpsilonMassHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonMassHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef L2UpsilonMassHistogramGroup G__TL2UpsilonMassHistogramGroup;
static int G__OnlinePlots_Cint_624_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (L2UpsilonMassHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((L2UpsilonMassHistogramGroup*) (soff+(sizeof(L2UpsilonMassHistogramGroup)*i)))->~G__TL2UpsilonMassHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (L2UpsilonMassHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((L2UpsilonMassHistogramGroup*) (soff))->~G__TL2UpsilonMassHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_624_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   L2UpsilonMassHistogramGroup* dest = (L2UpsilonMassHistogramGroup*) G__getstructoffset();
   *dest = *(L2UpsilonMassHistogramGroup*) libp->para[0].ref;
   const L2UpsilonMassHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* L2UpsilonTowersHistogramGroup */
static int G__OnlinePlots_Cint_625_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   L2UpsilonTowersHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonTowersHistogramGroup[n];
     } else {
       p = new((void*) gvp) L2UpsilonTowersHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonTowersHistogramGroup;
     } else {
       p = new((void*) gvp) L2UpsilonTowersHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonTowersHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_625_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   L2UpsilonTowersHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonTowersHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) L2UpsilonTowersHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonTowersHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) L2UpsilonTowersHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonTowersHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) L2UpsilonTowersHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new L2UpsilonTowersHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) L2UpsilonTowersHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonTowersHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_625_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) L2UpsilonTowersHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_625_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) L2UpsilonTowersHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_625_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) L2UpsilonTowersHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_625_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      L2UpsilonTowersHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_625_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((L2UpsilonTowersHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_625_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) L2UpsilonTowersHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_625_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) L2UpsilonTowersHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_625_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) L2UpsilonTowersHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_625_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) L2UpsilonTowersHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_625_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   L2UpsilonTowersHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new L2UpsilonTowersHistogramGroup(*(L2UpsilonTowersHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonTowersHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef L2UpsilonTowersHistogramGroup G__TL2UpsilonTowersHistogramGroup;
static int G__OnlinePlots_Cint_625_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (L2UpsilonTowersHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((L2UpsilonTowersHistogramGroup*) (soff+(sizeof(L2UpsilonTowersHistogramGroup)*i)))->~G__TL2UpsilonTowersHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (L2UpsilonTowersHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((L2UpsilonTowersHistogramGroup*) (soff))->~G__TL2UpsilonTowersHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_625_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   L2UpsilonTowersHistogramGroup* dest = (L2UpsilonTowersHistogramGroup*) G__getstructoffset();
   *dest = *(L2UpsilonTowersHistogramGroup*) libp->para[0].ref;
   const L2UpsilonTowersHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LaserDriftTimeHistogramGroup */
static int G__OnlinePlots_Cint_627_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LaserDriftTimeHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LaserDriftTimeHistogramGroup[n];
     } else {
       p = new((void*) gvp) LaserDriftTimeHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LaserDriftTimeHistogramGroup;
     } else {
       p = new((void*) gvp) LaserDriftTimeHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserDriftTimeHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_627_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LaserDriftTimeHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LaserDriftTimeHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) LaserDriftTimeHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LaserDriftTimeHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) LaserDriftTimeHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LaserDriftTimeHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) LaserDriftTimeHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LaserDriftTimeHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) LaserDriftTimeHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserDriftTimeHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_627_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LaserDriftTimeHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_627_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LaserDriftTimeHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_627_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LaserDriftTimeHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_627_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LaserDriftTimeHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_627_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LaserDriftTimeHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_627_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LaserDriftTimeHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_627_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LaserDriftTimeHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_627_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LaserDriftTimeHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_627_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LaserDriftTimeHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_627_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LaserDriftTimeHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LaserDriftTimeHistogramGroup(*(LaserDriftTimeHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserDriftTimeHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LaserDriftTimeHistogramGroup G__TLaserDriftTimeHistogramGroup;
static int G__OnlinePlots_Cint_627_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LaserDriftTimeHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LaserDriftTimeHistogramGroup*) (soff+(sizeof(LaserDriftTimeHistogramGroup)*i)))->~G__TLaserDriftTimeHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LaserDriftTimeHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LaserDriftTimeHistogramGroup*) (soff))->~G__TLaserDriftTimeHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_627_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LaserDriftTimeHistogramGroup* dest = (LaserDriftTimeHistogramGroup*) G__getstructoffset();
   *dest = *(LaserDriftTimeHistogramGroup*) libp->para[0].ref;
   const LaserDriftTimeHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LaserTpcPadChargeHistogramGroup */
static int G__OnlinePlots_Cint_628_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LaserTpcPadChargeHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LaserTpcPadChargeHistogramGroup[n];
     } else {
       p = new((void*) gvp) LaserTpcPadChargeHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LaserTpcPadChargeHistogramGroup;
     } else {
       p = new((void*) gvp) LaserTpcPadChargeHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserTpcPadChargeHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_628_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LaserTpcPadChargeHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LaserTpcPadChargeHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) LaserTpcPadChargeHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LaserTpcPadChargeHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) LaserTpcPadChargeHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LaserTpcPadChargeHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) LaserTpcPadChargeHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LaserTpcPadChargeHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) LaserTpcPadChargeHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserTpcPadChargeHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_628_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LaserTpcPadChargeHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_628_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LaserTpcPadChargeHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_628_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LaserTpcPadChargeHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_628_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LaserTpcPadChargeHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_628_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LaserTpcPadChargeHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_628_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LaserTpcPadChargeHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_628_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LaserTpcPadChargeHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_628_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LaserTpcPadChargeHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_628_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LaserTpcPadChargeHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_628_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LaserTpcPadChargeHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LaserTpcPadChargeHistogramGroup(*(LaserTpcPadChargeHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserTpcPadChargeHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LaserTpcPadChargeHistogramGroup G__TLaserTpcPadChargeHistogramGroup;
static int G__OnlinePlots_Cint_628_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LaserTpcPadChargeHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LaserTpcPadChargeHistogramGroup*) (soff+(sizeof(LaserTpcPadChargeHistogramGroup)*i)))->~G__TLaserTpcPadChargeHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LaserTpcPadChargeHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LaserTpcPadChargeHistogramGroup*) (soff))->~G__TLaserTpcPadChargeHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_628_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LaserTpcPadChargeHistogramGroup* dest = (LaserTpcPadChargeHistogramGroup*) G__getstructoffset();
   *dest = *(LaserTpcPadChargeHistogramGroup*) libp->para[0].ref;
   const LaserTpcPadChargeHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTDhitsHistogramGroup */
static int G__OnlinePlots_Cint_629_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTDhitsHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTDhitsHistogramGroup[n];
     } else {
       p = new((void*) gvp) MTDhitsHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTDhitsHistogramGroup;
     } else {
       p = new((void*) gvp) MTDhitsHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDhitsHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_629_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTDhitsHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTDhitsHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MTDhitsHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTDhitsHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MTDhitsHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTDhitsHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MTDhitsHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTDhitsHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MTDhitsHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDhitsHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_629_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTDhitsHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_629_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTDhitsHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_629_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTDhitsHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_629_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTDhitsHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_629_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTDhitsHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_629_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTDhitsHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_629_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTDhitsHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_629_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTDhitsHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_629_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTDhitsHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_629_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MTDhitsHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MTDhitsHistogramGroup(*(MTDhitsHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDhitsHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTDhitsHistogramGroup G__TMTDhitsHistogramGroup;
static int G__OnlinePlots_Cint_629_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTDhitsHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTDhitsHistogramGroup*) (soff+(sizeof(MTDhitsHistogramGroup)*i)))->~G__TMTDhitsHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTDhitsHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTDhitsHistogramGroup*) (soff))->~G__TMTDhitsHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_629_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTDhitsHistogramGroup* dest = (MTDhitsHistogramGroup*) G__getstructoffset();
   *dest = *(MTDhitsHistogramGroup*) libp->para[0].ref;
   const MTDhitsHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MTDtriggerinfoHistogramGroup */
static int G__OnlinePlots_Cint_630_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTDtriggerinfoHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTDtriggerinfoHistogramGroup[n];
     } else {
       p = new((void*) gvp) MTDtriggerinfoHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTDtriggerinfoHistogramGroup;
     } else {
       p = new((void*) gvp) MTDtriggerinfoHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDtriggerinfoHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_630_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTDtriggerinfoHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTDtriggerinfoHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) MTDtriggerinfoHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTDtriggerinfoHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) MTDtriggerinfoHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTDtriggerinfoHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) MTDtriggerinfoHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MTDtriggerinfoHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) MTDtriggerinfoHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDtriggerinfoHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_630_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MTDtriggerinfoHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_630_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTDtriggerinfoHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_630_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MTDtriggerinfoHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_630_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MTDtriggerinfoHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_630_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MTDtriggerinfoHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_630_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTDtriggerinfoHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_630_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTDtriggerinfoHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_630_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MTDtriggerinfoHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_630_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MTDtriggerinfoHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_630_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MTDtriggerinfoHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MTDtriggerinfoHistogramGroup(*(MTDtriggerinfoHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDtriggerinfoHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MTDtriggerinfoHistogramGroup G__TMTDtriggerinfoHistogramGroup;
static int G__OnlinePlots_Cint_630_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MTDtriggerinfoHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MTDtriggerinfoHistogramGroup*) (soff+(sizeof(MTDtriggerinfoHistogramGroup)*i)))->~G__TMTDtriggerinfoHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MTDtriggerinfoHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MTDtriggerinfoHistogramGroup*) (soff))->~G__TMTDtriggerinfoHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_630_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MTDtriggerinfoHistogramGroup* dest = (MTDtriggerinfoHistogramGroup*) G__getstructoffset();
   *dest = *(MTDtriggerinfoHistogramGroup*) libp->para[0].ref;
   const MTDtriggerinfoHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SVTAnodeHybridHistogramGroup */
static int G__OnlinePlots_Cint_631_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SVTAnodeHybridHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SVTAnodeHybridHistogramGroup[n];
     } else {
       p = new((void*) gvp) SVTAnodeHybridHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SVTAnodeHybridHistogramGroup;
     } else {
       p = new((void*) gvp) SVTAnodeHybridHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeHybridHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_631_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SVTAnodeHybridHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SVTAnodeHybridHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) SVTAnodeHybridHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SVTAnodeHybridHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) SVTAnodeHybridHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SVTAnodeHybridHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) SVTAnodeHybridHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SVTAnodeHybridHistogramGroup((unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) SVTAnodeHybridHistogramGroup((unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SVTAnodeHybridHistogramGroup((unsigned int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) SVTAnodeHybridHistogramGroup((unsigned int) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeHybridHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_631_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SVTAnodeHybridHistogramGroup::blwh2rma(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, *(int*) G__Intref(&libp->para[4]), *(int*) G__Intref(&libp->para[5])
, *(int*) G__Intref(&libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_631_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SVTAnodeHybridHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_631_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SVTAnodeHybridHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_631_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SVTAnodeHybridHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_631_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SVTAnodeHybridHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_631_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SVTAnodeHybridHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_631_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SVTAnodeHybridHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_631_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SVTAnodeHybridHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_631_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SVTAnodeHybridHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_631_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SVTAnodeHybridHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_631_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SVTAnodeHybridHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SVTAnodeHybridHistogramGroup(*(SVTAnodeHybridHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeHybridHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SVTAnodeHybridHistogramGroup G__TSVTAnodeHybridHistogramGroup;
static int G__OnlinePlots_Cint_631_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SVTAnodeHybridHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SVTAnodeHybridHistogramGroup*) (soff+(sizeof(SVTAnodeHybridHistogramGroup)*i)))->~G__TSVTAnodeHybridHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SVTAnodeHybridHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SVTAnodeHybridHistogramGroup*) (soff))->~G__TSVTAnodeHybridHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_631_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SVTAnodeHybridHistogramGroup* dest = (SVTAnodeHybridHistogramGroup*) G__getstructoffset();
   *dest = *(SVTAnodeHybridHistogramGroup*) libp->para[0].ref;
   const SVTAnodeHybridHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SVTAnodeSumHistogramGroup */
static int G__OnlinePlots_Cint_632_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SVTAnodeSumHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SVTAnodeSumHistogramGroup[n];
     } else {
       p = new((void*) gvp) SVTAnodeSumHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SVTAnodeSumHistogramGroup;
     } else {
       p = new((void*) gvp) SVTAnodeSumHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeSumHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_632_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SVTAnodeSumHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SVTAnodeSumHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) SVTAnodeSumHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SVTAnodeSumHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) SVTAnodeSumHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SVTAnodeSumHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) SVTAnodeSumHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SVTAnodeSumHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) SVTAnodeSumHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeSumHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_632_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SVTAnodeSumHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_632_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SVTAnodeSumHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_632_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SVTAnodeSumHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_632_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SVTAnodeSumHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_632_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SVTAnodeSumHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_632_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SVTAnodeSumHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_632_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SVTAnodeSumHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_632_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SVTAnodeSumHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_632_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SVTAnodeSumHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_632_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SVTAnodeSumHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SVTAnodeSumHistogramGroup(*(SVTAnodeSumHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeSumHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SVTAnodeSumHistogramGroup G__TSVTAnodeSumHistogramGroup;
static int G__OnlinePlots_Cint_632_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SVTAnodeSumHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SVTAnodeSumHistogramGroup*) (soff+(sizeof(SVTAnodeSumHistogramGroup)*i)))->~G__TSVTAnodeSumHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SVTAnodeSumHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SVTAnodeSumHistogramGroup*) (soff))->~G__TSVTAnodeSumHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_632_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SVTAnodeSumHistogramGroup* dest = (SVTAnodeSumHistogramGroup*) G__getstructoffset();
   *dest = *(SVTAnodeSumHistogramGroup*) libp->para[0].ref;
   const SVTAnodeSumHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SsdPedestalHistogramGroup */
static int G__OnlinePlots_Cint_633_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SsdPedestalHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SsdPedestalHistogramGroup[n];
     } else {
       p = new((void*) gvp) SsdPedestalHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SsdPedestalHistogramGroup;
     } else {
       p = new((void*) gvp) SsdPedestalHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_SsdPedestalHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_633_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SsdPedestalHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SsdPedestalHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) SsdPedestalHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SsdPedestalHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) SsdPedestalHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SsdPedestalHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) SsdPedestalHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SsdPedestalHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) SsdPedestalHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_SsdPedestalHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_633_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((SsdPedestalHistogramGroup*) G__getstructoffset())->SsdTH1Setup((TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((SsdPedestalHistogramGroup*) G__getstructoffset())->SsdTH1Setup((TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_633_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SsdPedestalHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_633_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SsdPedestalHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_633_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SsdPedestalHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_633_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SsdPedestalHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_633_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SsdPedestalHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_633_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SsdPedestalHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_633_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SsdPedestalHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_633_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SsdPedestalHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_633_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SsdPedestalHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_633_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SsdPedestalHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SsdPedestalHistogramGroup(*(SsdPedestalHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_SsdPedestalHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SsdPedestalHistogramGroup G__TSsdPedestalHistogramGroup;
static int G__OnlinePlots_Cint_633_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SsdPedestalHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SsdPedestalHistogramGroup*) (soff+(sizeof(SsdPedestalHistogramGroup)*i)))->~G__TSsdPedestalHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SsdPedestalHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SsdPedestalHistogramGroup*) (soff))->~G__TSsdPedestalHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_633_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SsdPedestalHistogramGroup* dest = (SsdPedestalHistogramGroup*) G__getstructoffset();
   *dest = *(SsdPedestalHistogramGroup*) libp->para[0].ref;
   const SsdPedestalHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TOFL0HistogramGroup */
static int G__OnlinePlots_Cint_634_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOFL0HistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFL0HistogramGroup[n];
     } else {
       p = new((void*) gvp) TOFL0HistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFL0HistogramGroup;
     } else {
       p = new((void*) gvp) TOFL0HistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL0HistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_634_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOFL0HistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFL0HistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TOFL0HistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFL0HistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TOFL0HistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFL0HistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TOFL0HistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFL0HistogramGroup((unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TOFL0HistogramGroup((unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL0HistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_634_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TOFL0HistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_634_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOFL0HistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_634_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TOFL0HistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_634_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOFL0HistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_634_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TOFL0HistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_634_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOFL0HistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_634_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TOFL0HistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_634_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOFL0HistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_634_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TOFL0HistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_634_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TOFL0HistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TOFL0HistogramGroup(*(TOFL0HistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL0HistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TOFL0HistogramGroup G__TTOFL0HistogramGroup;
static int G__OnlinePlots_Cint_634_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TOFL0HistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TOFL0HistogramGroup*) (soff+(sizeof(TOFL0HistogramGroup)*i)))->~G__TTOFL0HistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TOFL0HistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TOFL0HistogramGroup*) (soff))->~G__TTOFL0HistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_634_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOFL0HistogramGroup* dest = (TOFL0HistogramGroup*) G__getstructoffset();
   *dest = *(TOFL0HistogramGroup*) libp->para[0].ref;
   const TOFL0HistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TOFL1multHistogramGroup */
static int G__OnlinePlots_Cint_635_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOFL1multHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFL1multHistogramGroup[n];
     } else {
       p = new((void*) gvp) TOFL1multHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFL1multHistogramGroup;
     } else {
       p = new((void*) gvp) TOFL1multHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL1multHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_635_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOFL1multHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFL1multHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TOFL1multHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFL1multHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TOFL1multHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFL1multHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TOFL1multHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFL1multHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TOFL1multHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL1multHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_635_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TOFL1multHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_635_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOFL1multHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_635_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TOFL1multHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_635_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOFL1multHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_635_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TOFL1multHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_635_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOFL1multHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_635_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TOFL1multHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_635_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOFL1multHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_635_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TOFL1multHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_635_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TOFL1multHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TOFL1multHistogramGroup(*(TOFL1multHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL1multHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TOFL1multHistogramGroup G__TTOFL1multHistogramGroup;
static int G__OnlinePlots_Cint_635_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TOFL1multHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TOFL1multHistogramGroup*) (soff+(sizeof(TOFL1multHistogramGroup)*i)))->~G__TTOFL1multHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TOFL1multHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TOFL1multHistogramGroup*) (soff))->~G__TTOFL1multHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_635_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOFL1multHistogramGroup* dest = (TOFL1multHistogramGroup*) G__getstructoffset();
   *dest = *(TOFL1multHistogramGroup*) libp->para[0].ref;
   const TOFL1multHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TOFcheckHistogramGroup */
static int G__OnlinePlots_Cint_636_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOFcheckHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFcheckHistogramGroup[n];
     } else {
       p = new((void*) gvp) TOFcheckHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFcheckHistogramGroup;
     } else {
       p = new((void*) gvp) TOFcheckHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFcheckHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_636_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOFcheckHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFcheckHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TOFcheckHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFcheckHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TOFcheckHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFcheckHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TOFcheckHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFcheckHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TOFcheckHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFcheckHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_636_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TOFcheckHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_636_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOFcheckHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_636_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TOFcheckHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_636_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOFcheckHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_636_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TOFcheckHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_636_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOFcheckHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_636_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TOFcheckHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_636_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOFcheckHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_636_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TOFcheckHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_636_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TOFcheckHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TOFcheckHistogramGroup(*(TOFcheckHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFcheckHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TOFcheckHistogramGroup G__TTOFcheckHistogramGroup;
static int G__OnlinePlots_Cint_636_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TOFcheckHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TOFcheckHistogramGroup*) (soff+(sizeof(TOFcheckHistogramGroup)*i)))->~G__TTOFcheckHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TOFcheckHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TOFcheckHistogramGroup*) (soff))->~G__TTOFcheckHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_636_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOFcheckHistogramGroup* dest = (TOFcheckHistogramGroup*) G__getstructoffset();
   *dest = *(TOFcheckHistogramGroup*) libp->para[0].ref;
   const TOFcheckHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TOFtrayHistogramGroup */
static int G__OnlinePlots_Cint_637_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOFtrayHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFtrayHistogramGroup[n];
     } else {
       p = new((void*) gvp) TOFtrayHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFtrayHistogramGroup;
     } else {
       p = new((void*) gvp) TOFtrayHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFtrayHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_637_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOFtrayHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFtrayHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) TOFtrayHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFtrayHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TOFtrayHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFtrayHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TOFtrayHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFtrayHistogramGroup((unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TOFtrayHistogramGroup((unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFtrayHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_637_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TOFtrayHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_637_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOFtrayHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_637_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TOFtrayHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_637_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOFtrayHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_637_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TOFtrayHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_637_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOFtrayHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_637_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TOFtrayHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_637_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOFtrayHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_637_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TOFtrayHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_637_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TOFtrayHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TOFtrayHistogramGroup(*(TOFtrayHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFtrayHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TOFtrayHistogramGroup G__TTOFtrayHistogramGroup;
static int G__OnlinePlots_Cint_637_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TOFtrayHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TOFtrayHistogramGroup*) (soff+(sizeof(TOFtrayHistogramGroup)*i)))->~G__TTOFtrayHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TOFtrayHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TOFtrayHistogramGroup*) (soff))->~G__TTOFtrayHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_637_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOFtrayHistogramGroup* dest = (TOFtrayHistogramGroup*) G__getstructoffset();
   *dest = *(TOFtrayHistogramGroup*) libp->para[0].ref;
   const TOFtrayHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TOFupvpdHistogramGroup */
static int G__OnlinePlots_Cint_638_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOFupvpdHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFupvpdHistogramGroup[n];
     } else {
       p = new((void*) gvp) TOFupvpdHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFupvpdHistogramGroup;
     } else {
       p = new((void*) gvp) TOFupvpdHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFupvpdHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_638_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOFupvpdHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFupvpdHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TOFupvpdHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFupvpdHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TOFupvpdHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFupvpdHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TOFupvpdHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TOFupvpdHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TOFupvpdHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFupvpdHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_638_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TOFupvpdHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_638_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOFupvpdHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_638_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TOFupvpdHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_638_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TOFupvpdHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_638_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TOFupvpdHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_638_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOFupvpdHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_638_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TOFupvpdHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_638_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TOFupvpdHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_638_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TOFupvpdHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_638_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TOFupvpdHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TOFupvpdHistogramGroup(*(TOFupvpdHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFupvpdHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TOFupvpdHistogramGroup G__TTOFupvpdHistogramGroup;
static int G__OnlinePlots_Cint_638_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TOFupvpdHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TOFupvpdHistogramGroup*) (soff+(sizeof(TOFupvpdHistogramGroup)*i)))->~G__TTOFupvpdHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TOFupvpdHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TOFupvpdHistogramGroup*) (soff))->~G__TTOFupvpdHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_638_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TOFupvpdHistogramGroup* dest = (TOFupvpdHistogramGroup*) G__getstructoffset();
   *dest = *(TOFupvpdHistogramGroup*) libp->para[0].ref;
   const TOFupvpdHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* UPCHistogramCtbGroup */
static int G__OnlinePlots_Cint_639_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UPCHistogramCtbGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramCtbGroup[n];
     } else {
       p = new((void*) gvp) UPCHistogramCtbGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramCtbGroup;
     } else {
       p = new((void*) gvp) UPCHistogramCtbGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramCtbGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_639_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UPCHistogramCtbGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramCtbGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) UPCHistogramCtbGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramCtbGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) UPCHistogramCtbGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramCtbGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) UPCHistogramCtbGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramCtbGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) UPCHistogramCtbGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramCtbGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_639_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) UPCHistogramCtbGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_639_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UPCHistogramCtbGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_639_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) UPCHistogramCtbGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_639_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      UPCHistogramCtbGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_639_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UPCHistogramCtbGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_639_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UPCHistogramCtbGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_639_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) UPCHistogramCtbGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_639_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UPCHistogramCtbGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_639_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) UPCHistogramCtbGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_639_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   UPCHistogramCtbGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new UPCHistogramCtbGroup(*(UPCHistogramCtbGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramCtbGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef UPCHistogramCtbGroup G__TUPCHistogramCtbGroup;
static int G__OnlinePlots_Cint_639_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (UPCHistogramCtbGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((UPCHistogramCtbGroup*) (soff+(sizeof(UPCHistogramCtbGroup)*i)))->~G__TUPCHistogramCtbGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (UPCHistogramCtbGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((UPCHistogramCtbGroup*) (soff))->~G__TUPCHistogramCtbGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_639_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UPCHistogramCtbGroup* dest = (UPCHistogramCtbGroup*) G__getstructoffset();
   *dest = *(UPCHistogramCtbGroup*) libp->para[0].ref;
   const UPCHistogramCtbGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* UPCHistogramGroup */
static int G__OnlinePlots_Cint_640_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UPCHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramGroup[n];
     } else {
       p = new((void*) gvp) UPCHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramGroup;
     } else {
       p = new((void*) gvp) UPCHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_640_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UPCHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) UPCHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) UPCHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) UPCHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) UPCHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_640_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) UPCHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_640_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UPCHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_640_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) UPCHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_640_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      UPCHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_640_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UPCHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_640_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UPCHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_640_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) UPCHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_640_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UPCHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_640_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) UPCHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_640_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   UPCHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new UPCHistogramGroup(*(UPCHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef UPCHistogramGroup G__TUPCHistogramGroup;
static int G__OnlinePlots_Cint_640_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (UPCHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((UPCHistogramGroup*) (soff+(sizeof(UPCHistogramGroup)*i)))->~G__TUPCHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (UPCHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((UPCHistogramGroup*) (soff))->~G__TUPCHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_640_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UPCHistogramGroup* dest = (UPCHistogramGroup*) G__getstructoffset();
   *dest = *(UPCHistogramGroup*) libp->para[0].ref;
   const UPCHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* UPCHistogramZdcGroup */
static int G__OnlinePlots_Cint_641_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UPCHistogramZdcGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramZdcGroup[n];
     } else {
       p = new((void*) gvp) UPCHistogramZdcGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramZdcGroup;
     } else {
       p = new((void*) gvp) UPCHistogramZdcGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramZdcGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_641_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UPCHistogramZdcGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramZdcGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) UPCHistogramZdcGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramZdcGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) UPCHistogramZdcGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramZdcGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) UPCHistogramZdcGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new UPCHistogramZdcGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) UPCHistogramZdcGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramZdcGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_641_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) UPCHistogramZdcGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_641_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UPCHistogramZdcGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_641_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) UPCHistogramZdcGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_641_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      UPCHistogramZdcGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_641_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((UPCHistogramZdcGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_641_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UPCHistogramZdcGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_641_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) UPCHistogramZdcGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_641_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) UPCHistogramZdcGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_641_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) UPCHistogramZdcGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_641_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   UPCHistogramZdcGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new UPCHistogramZdcGroup(*(UPCHistogramZdcGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramZdcGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef UPCHistogramZdcGroup G__TUPCHistogramZdcGroup;
static int G__OnlinePlots_Cint_641_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (UPCHistogramZdcGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((UPCHistogramZdcGroup*) (soff+(sizeof(UPCHistogramZdcGroup)*i)))->~G__TUPCHistogramZdcGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (UPCHistogramZdcGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((UPCHistogramZdcGroup*) (soff))->~G__TUPCHistogramZdcGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_641_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   UPCHistogramZdcGroup* dest = (UPCHistogramZdcGroup*) G__getstructoffset();
   *dest = *(UPCHistogramZdcGroup*) libp->para[0].ref;
   const UPCHistogramZdcGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* VPDHiHistogramGroup */
static int G__OnlinePlots_Cint_642_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   VPDHiHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VPDHiHistogramGroup[n];
     } else {
       p = new((void*) gvp) VPDHiHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VPDHiHistogramGroup;
     } else {
       p = new((void*) gvp) VPDHiHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHiHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_642_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   VPDHiHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VPDHiHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) VPDHiHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VPDHiHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) VPDHiHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VPDHiHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) VPDHiHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VPDHiHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) VPDHiHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHiHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_642_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) VPDHiHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_642_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VPDHiHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_642_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) VPDHiHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_642_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      VPDHiHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_642_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VPDHiHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_642_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VPDHiHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_642_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) VPDHiHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_642_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VPDHiHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_642_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) VPDHiHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_642_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   VPDHiHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new VPDHiHistogramGroup(*(VPDHiHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHiHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef VPDHiHistogramGroup G__TVPDHiHistogramGroup;
static int G__OnlinePlots_Cint_642_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (VPDHiHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((VPDHiHistogramGroup*) (soff+(sizeof(VPDHiHistogramGroup)*i)))->~G__TVPDHiHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (VPDHiHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((VPDHiHistogramGroup*) (soff))->~G__TVPDHiHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_642_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   VPDHiHistogramGroup* dest = (VPDHiHistogramGroup*) G__getstructoffset();
   *dest = *(VPDHiHistogramGroup*) libp->para[0].ref;
   const VPDHiHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* VPDHistogramGroup */
static int G__OnlinePlots_Cint_643_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   VPDHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VPDHistogramGroup[n];
     } else {
       p = new((void*) gvp) VPDHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VPDHistogramGroup;
     } else {
       p = new((void*) gvp) VPDHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_643_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   VPDHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VPDHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) VPDHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VPDHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) VPDHistogramGroup(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VPDHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) VPDHistogramGroup((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new VPDHistogramGroup((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) VPDHistogramGroup((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_643_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) VPDHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_643_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VPDHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_643_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) VPDHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_643_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      VPDHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_643_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((VPDHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_643_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VPDHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_643_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) VPDHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_643_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) VPDHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_643_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) VPDHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_643_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   VPDHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new VPDHistogramGroup(*(VPDHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef VPDHistogramGroup G__TVPDHistogramGroup;
static int G__OnlinePlots_Cint_643_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (VPDHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((VPDHistogramGroup*) (soff+(sizeof(VPDHistogramGroup)*i)))->~G__TVPDHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (VPDHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((VPDHistogramGroup*) (soff))->~G__TVPDHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_643_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   VPDHistogramGroup* dest = (VPDHistogramGroup*) G__getstructoffset();
   *dest = *(VPDHistogramGroup*) libp->para[0].ref;
   const VPDHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pp2ppHistogramGroup */
static int G__OnlinePlots_Cint_644_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pp2ppHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pp2ppHistogramGroup[n];
     } else {
       p = new((void*) gvp) pp2ppHistogramGroup[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pp2ppHistogramGroup;
     } else {
       p = new((void*) gvp) pp2ppHistogramGroup;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_pp2ppHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_644_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pp2ppHistogramGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pp2ppHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) pp2ppHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pp2ppHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) pp2ppHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pp2ppHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) pp2ppHistogramGroup(
(unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pp2ppHistogramGroup((unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) pp2ppHistogramGroup((unsigned int) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pp2ppHistogramGroup((unsigned int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) pp2ppHistogramGroup((unsigned int) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_pp2ppHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_644_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) pp2ppHistogramGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_644_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) pp2ppHistogramGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_644_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) pp2ppHistogramGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_644_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pp2ppHistogramGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_644_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pp2ppHistogramGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_644_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) pp2ppHistogramGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_644_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) pp2ppHistogramGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_644_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) pp2ppHistogramGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_644_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) pp2ppHistogramGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_644_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pp2ppHistogramGroup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pp2ppHistogramGroup(*(pp2ppHistogramGroup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_pp2ppHistogramGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pp2ppHistogramGroup G__Tpp2ppHistogramGroup;
static int G__OnlinePlots_Cint_644_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pp2ppHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pp2ppHistogramGroup*) (soff+(sizeof(pp2ppHistogramGroup)*i)))->~G__Tpp2ppHistogramGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pp2ppHistogramGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pp2ppHistogramGroup*) (soff))->~G__Tpp2ppHistogramGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_644_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pp2ppHistogramGroup* dest = (pp2ppHistogramGroup*) G__getstructoffset();
   *dest = *(pp2ppHistogramGroup*) libp->para[0].ref;
   const pp2ppHistogramGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* DGHelp */
static int G__OnlinePlots_Cint_754_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const DGHelp*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((DGHelp*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((DGHelp*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((DGHelp*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((DGHelp*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((DGHelp*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__va_arg_buf G__va_arg_bufobj;
   G__va_arg_put(&G__va_arg_bufobj, libp, 2);
      ((DGHelp*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), G__va_arg_bufobj);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   DGHelp* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DGHelp(
(char*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (Pixel_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) DGHelp(
(char*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (Pixel_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DGHelp((char*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) DGHelp((char*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new DGHelp((char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) DGHelp((char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_DGHelp));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) DGHelp::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DGHelp::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) DGHelp::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      DGHelp::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((DGHelp*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DGHelp::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DGHelp::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) DGHelp::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_754_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) DGHelp::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef DGHelp G__TDGHelp;
static int G__OnlinePlots_Cint_754_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (DGHelp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((DGHelp*) (soff+(sizeof(DGHelp)*i)))->~G__TDGHelp();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (DGHelp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((DGHelp*) (soff))->~G__TDGHelp();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EvpServer */
static int G__OnlinePlots_Cint_864_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EvpServer* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EvpServer((bool) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) EvpServer((bool) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new EvpServer[n];
       } else {
         p = new((void*) gvp) EvpServer[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new EvpServer;
       } else {
         p = new((void*) gvp) EvpServer;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_EvpServer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->run();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EvpServer*) G__getstructoffset())->NextEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->MainLoop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->UpdateInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((EvpServer*) G__getstructoffset())->SetEnabled((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((EvpServer*) G__getstructoffset())->SetEnabled();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->SetNewTarget((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->SetLive();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->SetStopFlag();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->SetGoFlag();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->SetDefaults();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EvpServer*) G__getstructoffset())->GetGoFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((EvpServer*) G__getstructoffset())->GetTarget());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->SetMaxEventsPerRun((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->SetDoEndOfRun((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->SetDoEndOfRunQuit((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->SetDebugLevel((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EvpServer*) G__getstructoffset())->GetDebugLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->SetPhiAngleMap();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->Save((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->MakePS();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->Update();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->LaunchEndOfRunAction((long) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EvpServer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EvpServer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EvpServer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EvpServer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EvpServer*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EvpServer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EvpServer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EvpServer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EvpServer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_864_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EvpServer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_864_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EvpServer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EvpServer(*(EvpServer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_EvpServer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EvpServer G__TEvpServer;
static int G__OnlinePlots_Cint_864_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EvpServer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EvpServer*) (soff+(sizeof(EvpServer)*i)))->~G__TEvpServer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EvpServer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EvpServer*) (soff))->~G__TEvpServer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_864_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EvpServer* dest = (EvpServer*) G__getstructoffset();
   *dest = *(EvpServer*) libp->para[0].ref;
   const EvpServer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ServerGui */
static int G__OnlinePlots_Cint_866_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ServerGui*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ServerGui*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((ServerGui*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((ServerGui*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((ServerGui*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((ServerGui*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((ServerGui*) G__getstructoffset())->HighPriority((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((ServerGui*) G__getstructoffset())->HighPriority((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((ServerGui*) G__getstructoffset())->LowPriority((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((ServerGui*) G__getstructoffset())->LowPriority((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__va_arg_buf G__va_arg_bufobj;
   G__va_arg_put(&G__va_arg_bufobj, libp, 2);
      ((ServerGui*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), G__va_arg_bufobj);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Destroyed();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->ChangedBy((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->Message((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ServerGui* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ServerGui(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (EvpServer*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) ServerGui(
(TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (EvpServer*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerGui));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->SetTarget((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->SetServer((EvpServer*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->CloseWindow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->DoStartButton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->DoStopButton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->DoNextButton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->DoLiveButton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->DoFileButton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->DoHistoResetButton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->DoHistoSaveButton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->DoHistoSavePSButton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->DoHistoPrintButton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->DoHistoViewButton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->HandleMenu((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->SetDebugLevel((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ServerGui*) G__getstructoffset())->GetDebugLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->UpdateRunInfo((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->UpdateEventCountInfo((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->UpdateEventNumberInfo((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->UpdateTokenNumberInfo((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->UpdateRootFileInfo((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ServerGui*) G__getstructoffset())->ShowNext((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ServerGui*) G__getstructoffset())->ShowNext();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ServerGui*) G__getstructoffset())->ShowLiveRun((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ServerGui*) G__getstructoffset())->ShowLiveRun();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ServerGui*) G__getstructoffset())->ShowRunning((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ServerGui*) G__getstructoffset())->ShowRunning();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ServerGui*) G__getstructoffset())->ShowFileRun((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ServerGui*) G__getstructoffset())->ShowFileRun();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->ShowButton((TGButton*) G__int(libp->para[0]), (Pixel_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->ShowStatus((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ServerGui*) G__getstructoffset())->SetEnabled((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ServerGui*) G__getstructoffset())->SetEnabled();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ServerGui::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ServerGui::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ServerGui::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ServerGui::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerGui*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ServerGui::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ServerGui::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ServerGui::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_866_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ServerGui::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ServerGui G__TServerGui;
static int G__OnlinePlots_Cint_866_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ServerGui*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ServerGui*) (soff+(sizeof(ServerGui)*i)))->~G__TServerGui();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ServerGui*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ServerGui*) (soff))->~G__TServerGui();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RunStatus */
static int G__OnlinePlots_Cint_867_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RunStatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RunStatus[n];
     } else {
       p = new((void*) gvp) RunStatus[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RunStatus;
     } else {
       p = new((void*) gvp) RunStatus;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_RunStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunStatus*) G__getstructoffset())->getRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunStatus*) G__getstructoffset())->getEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunStatus*) G__getstructoffset())->getEventCounter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunStatus*) G__getstructoffset())->getEndOfRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunStatus*) G__getstructoffset())->getLiveSource());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunStatus*) G__getstructoffset())->getToken());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunStatus*) G__getstructoffset())->getEmpty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunStatus*) G__getstructoffset())->getType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunStatus*) G__getstructoffset())->getStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunStatus*) G__getstructoffset())->getTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunStatus*) G__getstructoffset())->getEndOfRunActionPerformed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((RunStatus*) G__getstructoffset())->getTriggerBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((RunStatus*) G__getstructoffset())->getDetectorBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((RunStatus*) G__getstructoffset())->getTriggerBitsRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((RunStatus*) G__getstructoffset())->getDetectorBitsRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->setRunNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->setEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->setEventCounter((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->setEndOfRun((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->setLiveSource((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->setToken((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->setEmpty((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->setType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->setStatus((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->setTime((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->setTriggerBits((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->setDetectorBits((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->setTriggerBitsRun((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->setDetectorBitsRun((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->setEndOfRunActionPerformed((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RunStatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RunStatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RunStatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RunStatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunStatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RunStatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RunStatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RunStatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_867_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RunStatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_867_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RunStatus* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RunStatus(*(RunStatus*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_RunStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RunStatus G__TRunStatus;
static int G__OnlinePlots_Cint_867_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RunStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RunStatus*) (soff+(sizeof(RunStatus)*i)))->~G__TRunStatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RunStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RunStatus*) (soff))->~G__TRunStatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_867_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RunStatus* dest = (RunStatus*) G__getstructoffset();
   *dest = *(RunStatus*) libp->para[0].ref;
   const RunStatus& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ServerStatus */
static int G__OnlinePlots_Cint_868_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ServerStatus* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ServerStatus[n];
     } else {
       p = new((void*) gvp) ServerStatus[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ServerStatus;
     } else {
       p = new((void*) gvp) ServerStatus;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((ServerStatus*) G__getstructoffset())->getReceiveTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((ServerStatus*) G__getstructoffset())->getRequestTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ServerStatus*) G__getstructoffset())->getReceiveType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ServerStatus*) G__getstructoffset())->getRequestType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerStatus*) G__getstructoffset())->setReceiveTime((time_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerStatus*) G__getstructoffset())->setRequestTime((time_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerStatus*) G__getstructoffset())->setReceiveType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerStatus*) G__getstructoffset())->setRequestType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ServerStatus*) G__getstructoffset())->diffTimeInSec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ServerStatus::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ServerStatus::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ServerStatus::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ServerStatus::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ServerStatus*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ServerStatus::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ServerStatus::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ServerStatus::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_868_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ServerStatus::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_868_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ServerStatus* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ServerStatus(*(ServerStatus*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ServerStatus G__TServerStatus;
static int G__OnlinePlots_Cint_868_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ServerStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ServerStatus*) (soff+(sizeof(ServerStatus)*i)))->~G__TServerStatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ServerStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ServerStatus*) (soff))->~G__TServerStatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_868_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ServerStatus* dest = (ServerStatus*) G__getstructoffset();
   *dest = *(ServerStatus*) libp->para[0].ref;
   const ServerStatus& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PGMessage */
static int G__OnlinePlots_Cint_911_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const PGMessage*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((PGMessage*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((PGMessage*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((PGMessage*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((PGMessage*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((PGMessage*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   G__va_arg_buf G__va_arg_bufobj;
   G__va_arg_put(&G__va_arg_bufobj, libp, 2);
      ((PGMessage*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), G__va_arg_bufobj);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PGMessage* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PGMessage(
(const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (Pixel_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) PGMessage(
(const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (Pixel_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PGMessage((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) PGMessage((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PGMessage((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) PGMessage((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_PGMessage));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->AddLine((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->Exit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PGMessage::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PGMessage::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PGMessage::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PGMessage::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PGMessage*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PGMessage::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PGMessage::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PGMessage::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_911_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PGMessage::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PGMessage G__TPGMessage;
static int G__OnlinePlots_Cint_911_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PGMessage*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PGMessage*) (soff+(sizeof(PGMessage)*i)))->~G__TPGMessage();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PGMessage*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PGMessage*) (soff))->~G__TPGMessage();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* endOfRunActionMain */
static int G__OnlinePlots_Cint_912_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) endOfRunActionMain::main((int) G__int(libp->para[0]), (const char**) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_912_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) endOfRunActionMain::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_912_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) endOfRunActionMain::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_912_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) endOfRunActionMain::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_912_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      endOfRunActionMain::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_912_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((endOfRunActionMain*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_912_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) endOfRunActionMain::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_912_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) endOfRunActionMain::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_912_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) endOfRunActionMain::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_912_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) endOfRunActionMain::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_912_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   endOfRunActionMain* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new endOfRunActionMain(*(endOfRunActionMain*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_endOfRunActionMain));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef endOfRunActionMain G__TendOfRunActionMain;
static int G__OnlinePlots_Cint_912_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (endOfRunActionMain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((endOfRunActionMain*) (soff+(sizeof(endOfRunActionMain)*i)))->~G__TendOfRunActionMain();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (endOfRunActionMain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((endOfRunActionMain*) (soff))->~G__TendOfRunActionMain();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_912_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   endOfRunActionMain* dest = (endOfRunActionMain*) G__getstructoffset();
   *dest = *(endOfRunActionMain*) libp->para[0].ref;
   const endOfRunActionMain& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* evpServerMain */
static int G__OnlinePlots_Cint_913_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   evpServerMain* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new evpServerMain[n];
     } else {
       p = new((void*) gvp) evpServerMain[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new evpServerMain;
     } else {
       p = new((void*) gvp) evpServerMain;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_evpServerMain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_913_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) evpServerMain::main((int) G__int(libp->para[0]), (const char**) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_913_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) evpServerMain::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_913_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) evpServerMain::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_913_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) evpServerMain::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_913_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      evpServerMain::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_913_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((evpServerMain*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_913_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) evpServerMain::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_913_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) evpServerMain::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_913_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) evpServerMain::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlinePlots_Cint_913_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) evpServerMain::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlinePlots_Cint_913_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   evpServerMain* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new evpServerMain(*(evpServerMain*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlinePlots_CintLN_evpServerMain));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef evpServerMain G__TevpServerMain;
static int G__OnlinePlots_Cint_913_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (evpServerMain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((evpServerMain*) (soff+(sizeof(evpServerMain)*i)))->~G__TevpServerMain();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (evpServerMain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((evpServerMain*) (soff))->~G__TevpServerMain();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlinePlots_Cint_913_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   evpServerMain* dest = (evpServerMain*) G__getstructoffset();
   *dest = *(evpServerMain*) libp->para[0].ref;
   const evpServerMain& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HistogramGroup */

/* BESHistogramGroup */

/* FMSHistogramGroup */

/* GroupStatisticsHistogramGroup */

/* L2UpsilonCountsHistogramGroup */

/* L2UpsilonMassHistogramGroup */

/* L2UpsilonTowersHistogramGroup */

/* LaserDriftTimeHistogramGroup */

/* LaserTpcPadChargeHistogramGroup */

/* MTDhitsHistogramGroup */

/* MTDtriggerinfoHistogramGroup */

/* SVTAnodeHybridHistogramGroup */

/* SVTAnodeSumHistogramGroup */

/* SsdPedestalHistogramGroup */

/* TOFL0HistogramGroup */

/* TOFL1multHistogramGroup */

/* TOFcheckHistogramGroup */

/* TOFtrayHistogramGroup */

/* TOFupvpdHistogramGroup */

/* UPCHistogramCtbGroup */

/* UPCHistogramGroup */

/* UPCHistogramZdcGroup */

/* VPDHiHistogramGroup */

/* VPDHistogramGroup */

/* pp2ppHistogramGroup */

/* DGHelp */

/* EvpServer */

/* ServerGui */

/* RunStatus */

/* ServerStatus */

/* PGMessage */

/* endOfRunActionMain */

/* evpServerMain */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncOnlinePlots_Cint {
 public:
  G__Sizep2memfuncOnlinePlots_Cint(): p(&G__Sizep2memfuncOnlinePlots_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncOnlinePlots_Cint::*p)();
};

size_t G__get_sizep2memfuncOnlinePlots_Cint()
{
  G__Sizep2memfuncOnlinePlots_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceOnlinePlots_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup))) {
     HistogramGroup *G__Lderived;
     G__Lderived=(HistogramGroup*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_BESHistogramGroup))) {
     BESHistogramGroup *G__Lderived;
     G__Lderived=(BESHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_BESHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_BESHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_BESHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_FMSHistogramGroup))) {
     FMSHistogramGroup *G__Lderived;
     G__Lderived=(FMSHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_FMSHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_FMSHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_FMSHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_GroupStatisticsHistogramGroup))) {
     GroupStatisticsHistogramGroup *G__Lderived;
     G__Lderived=(GroupStatisticsHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_GroupStatisticsHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_GroupStatisticsHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_GroupStatisticsHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonCountsHistogramGroup))) {
     L2UpsilonCountsHistogramGroup *G__Lderived;
     G__Lderived=(L2UpsilonCountsHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonCountsHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonCountsHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonCountsHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonMassHistogramGroup))) {
     L2UpsilonMassHistogramGroup *G__Lderived;
     G__Lderived=(L2UpsilonMassHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonMassHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonMassHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonMassHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonTowersHistogramGroup))) {
     L2UpsilonTowersHistogramGroup *G__Lderived;
     G__Lderived=(L2UpsilonTowersHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonTowersHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonTowersHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonTowersHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserDriftTimeHistogramGroup))) {
     LaserDriftTimeHistogramGroup *G__Lderived;
     G__Lderived=(LaserDriftTimeHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserDriftTimeHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserDriftTimeHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserDriftTimeHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserTpcPadChargeHistogramGroup))) {
     LaserTpcPadChargeHistogramGroup *G__Lderived;
     G__Lderived=(LaserTpcPadChargeHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserTpcPadChargeHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserTpcPadChargeHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserTpcPadChargeHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDhitsHistogramGroup))) {
     MTDhitsHistogramGroup *G__Lderived;
     G__Lderived=(MTDhitsHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDhitsHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDhitsHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDhitsHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDtriggerinfoHistogramGroup))) {
     MTDtriggerinfoHistogramGroup *G__Lderived;
     G__Lderived=(MTDtriggerinfoHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDtriggerinfoHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDtriggerinfoHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDtriggerinfoHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeHybridHistogramGroup))) {
     SVTAnodeHybridHistogramGroup *G__Lderived;
     G__Lderived=(SVTAnodeHybridHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeHybridHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeHybridHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeHybridHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeSumHistogramGroup))) {
     SVTAnodeSumHistogramGroup *G__Lderived;
     G__Lderived=(SVTAnodeSumHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeSumHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeSumHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeSumHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SsdPedestalHistogramGroup))) {
     SsdPedestalHistogramGroup *G__Lderived;
     G__Lderived=(SsdPedestalHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SsdPedestalHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SsdPedestalHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SsdPedestalHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL0HistogramGroup))) {
     TOFL0HistogramGroup *G__Lderived;
     G__Lderived=(TOFL0HistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL0HistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL0HistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL0HistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL1multHistogramGroup))) {
     TOFL1multHistogramGroup *G__Lderived;
     G__Lderived=(TOFL1multHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL1multHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL1multHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL1multHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFcheckHistogramGroup))) {
     TOFcheckHistogramGroup *G__Lderived;
     G__Lderived=(TOFcheckHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFcheckHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFcheckHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFcheckHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFtrayHistogramGroup))) {
     TOFtrayHistogramGroup *G__Lderived;
     G__Lderived=(TOFtrayHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFtrayHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFtrayHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFtrayHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFupvpdHistogramGroup))) {
     TOFupvpdHistogramGroup *G__Lderived;
     G__Lderived=(TOFupvpdHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFupvpdHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFupvpdHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFupvpdHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramCtbGroup))) {
     UPCHistogramCtbGroup *G__Lderived;
     G__Lderived=(UPCHistogramCtbGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramCtbGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramCtbGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramCtbGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramGroup))) {
     UPCHistogramGroup *G__Lderived;
     G__Lderived=(UPCHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramZdcGroup))) {
     UPCHistogramZdcGroup *G__Lderived;
     G__Lderived=(UPCHistogramZdcGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramZdcGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramZdcGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramZdcGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHiHistogramGroup))) {
     VPDHiHistogramGroup *G__Lderived;
     G__Lderived=(VPDHiHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHiHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHiHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHiHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHistogramGroup))) {
     VPDHistogramGroup *G__Lderived;
     G__Lderived=(VPDHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_pp2ppHistogramGroup))) {
     pp2ppHistogramGroup *G__Lderived;
     G__Lderived=(pp2ppHistogramGroup*)0x1000;
     {
       HistogramGroup *G__Lpbase=(HistogramGroup*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_pp2ppHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_pp2ppHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_pp2ppHistogramGroup),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_DGHelp))) {
     DGHelp *G__Lderived;
     G__Lderived=(DGHelp*)0x1000;
     {
       TGTransientFrame *G__Lpbase=(TGTransientFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_DGHelp),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTransientFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_DGHelp),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_DGHelp),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_DGHelp),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_DGHelp),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_DGHelp),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_DGHelp),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_DGHelp),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerGui))) {
     ServerGui *G__Lderived;
     G__Lderived=(ServerGui*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerGui),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_RunStatus))) {
     RunStatus *G__Lderived;
     G__Lderived=(RunStatus*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_RunStatus),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerStatus))) {
     ServerStatus *G__Lderived;
     G__Lderived=(ServerStatus*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerStatus),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_PGMessage))) {
     PGMessage *G__Lderived;
     G__Lderived=(PGMessage*)0x1000;
     {
       TGTransientFrame *G__Lpbase=(TGTransientFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_PGMessage),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTransientFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_PGMessage),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_PGMessage),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_PGMessage),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_PGMessage),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_PGMessage),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_PGMessage),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_PGMessage),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_endOfRunActionMain))) {
     endOfRunActionMain *G__Lderived;
     G__Lderived=(endOfRunActionMain*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_endOfRunActionMain),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlinePlots_CintLN_evpServerMain))) {
     evpServerMain *G__Lderived;
     G__Lderived=(evpServerMain*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_evpServerMain),G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableOnlinePlots_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 4 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 4 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Pixel_t",107,-1,0,-1);
   G__setnewtype(-1,"Pixel value",0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH1*>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<HistogramGroup*,Alpha>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_setlEHistogramGroupmUcOAlphacOallocatorlEHistogramGroupmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<HistogramGroup*>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_setlEHistogramGroupmUcOAlphacOallocatorlEHistogramGroupmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,GroupCollection>",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_maplEstringcOGroupCollectioncOlesslEstringgRcOallocatorlEpairlEconstsPstringcOGroupCollectiongRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,GroupCollection,less<string> >",117,G__get_linked_tagnum(&G__OnlinePlots_CintLN_maplEstringcOGroupCollectioncOlesslEstringgRcOallocatorlEpairlEconstsPstringcOGroupCollectiongRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HistogramGroup */
static void G__setup_memvarHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup));
   { HistogramGroup *p; p=(HistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TString),-1,-1,2,"mGroupName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TString),-1,-1,2,"mSubGroupName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TString),-1,-1,2,"mTriggerName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TString),-1,-1,2,"mDetectorName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TString),-1,-1,2,"mId=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"mTriggerBits=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"mDetectorBits=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"mActive=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"mPrinted=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BESHistogramGroup */
static void G__setup_memvarBESHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_BESHistogramGroup));
   { BESHistogramGroup *p; p=(BESHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_bbc_adc_west_vs_east=",0,"bbc adc west vs adc east");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_bemc_energy_west_vs_east=",0,"bemc energy west vs bemc energy east");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_bemc_adc_west_vs_east=",0,"bemc adc west vs bemc adc east");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_bbc_adc_east=",0,"bbc adc east");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_bbc_adc_west=",0,"bbc adc west");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_bemc_adc_east=",0,"bemc adc east");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_bemc_adc_west=",0,"bemc adc west");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_event_type=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_bemc_adc_all=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"bemcStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"towerPed[4800]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"towerGain[4800]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"towerUnmask[4800]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"towerUnmaskHT[4800]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TLatex),-1,-1,4,"text1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TLatex),-1,-1,4,"text2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TLatex),-1,-1,4,"text3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TLatex),-1,-1,4,"text4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TLatex),-1,-1,4,"text5=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TLatex),-1,-1,4,"text6=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TLine),-1,-1,4,"line1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TLine),-1,-1,4,"line2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TLine),-1,-1,4,"line3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TLine),-1,-1,4,"line4=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TLine),-1,-1,4,"line5=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TLine),-1,-1,4,"line6=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TLine),-1,-1,4,"line7=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TLine),-1,-1,4,"line8=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TLine),-1,-1,4,"line9=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TLine),-1,-1,4,"lin10=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FMSHistogramGroup */
static void G__setup_memvarFMSHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_FMSHistogramGroup));
   { FMSHistogramGroup *p; p=(FMSHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_fms_quad_sum[4]=",0,"# of QT quadrant sum  ");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__OnlinePlots_CintLN_FMSHistogramGroupcLcLdA),-1,-2,4,"mMaxCrate=4LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__OnlinePlots_CintLN_FMSHistogramGroupcLcLdA),-1,-2,4,"mMaxAddr=11LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__OnlinePlots_CintLN_FMSHistogramGroupcLcLdA),-1,-2,4,"mMaxCh=32LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GroupStatisticsHistogramGroup */
static void G__setup_memvarGroupStatisticsHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_GroupStatisticsHistogramGroup));
   { GroupStatisticsHistogramGroup *p; p=(GroupStatisticsHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hEventGroups=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hDetectorGroups=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* L2UpsilonCountsHistogramGroup */
static void G__setup_memvarL2UpsilonCountsHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonCountsHistogramGroup));
   { L2UpsilonCountsHistogramGroup *p; p=(L2UpsilonCountsHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hTag=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hNumberOfHotTowers=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hAbordRate=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hAbordRateCurrent=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mNumberOfHotTowers=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mHotTowerChanges=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* L2UpsilonMassHistogramGroup */
static void G__setup_memvarL2UpsilonMassHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonMassHistogramGroup));
   { L2UpsilonMassHistogramGroup *p; p=(L2UpsilonMassHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hEnergyL0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hEnergyL2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hCosTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* L2UpsilonTowersHistogramGroup */
static void G__setup_memvarL2UpsilonTowersHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonTowersHistogramGroup));
   { L2UpsilonTowersHistogramGroup *p; p=(L2UpsilonTowersHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hTriggerTowerIdL0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hTriggerTowerIdL2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hNumberOfTowersL0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hNumberOfTowersL2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"hEtaPhiL0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"hEtaPhiL2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LaserDriftTimeHistogramGroup */
static void G__setup_memvarLaserDriftTimeHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserDriftTimeHistogramGroup));
   { LaserDriftTimeHistogramGroup *p; p=(LaserDriftTimeHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"hDriftTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_StReadLaserEvent),-1,-1,4,"mLaser=",0,"! don't create a streamer for this");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LaserTpcPadChargeHistogramGroup */
static void G__setup_memvarLaserTpcPadChargeHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserTpcPadChargeHistogramGroup));
   { LaserTpcPadChargeHistogramGroup *p; p=(LaserTpcPadChargeHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-2,4,"mSec[6]=",0,"sector indices start at 0");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"hTpcSec[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTDhitsHistogramGroup */
static void G__setup_memvarMTDhitsHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDhitsHistogramGroup));
   { MTDhitsHistogramGroup *p; p=(MTDhitsHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"MTD26E_hitmap[2][2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"MTD26C_hitmap[2][2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"MTD26W_hitmap[2][2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"MTD1_hitmap[2][2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"MTD_ToT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"MTD_eastT_vs_westT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"MTD_eastT_westT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"MTD_hits_vs_TOF_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"numberforsort=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"leadinghits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"trailinghits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MTDtriggerinfoHistogramGroup */
static void G__setup_memvarMTDtriggerinfoHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDtriggerinfoHistogramGroup));
   { MTDtriggerinfoHistogramGroup *p; p=(MTDtriggerinfoHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"MTD_adc[3][2]=",0,"3 trays; 0 east, 1 west");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"MTD_tac[3][2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SVTAnodeHybridHistogramGroup */
static void G__setup_memvarSVTAnodeHybridHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeHybridHistogramGroup));
   { SVTAnodeHybridHistogramGroup *p; p=(SVTAnodeHybridHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hSVT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2D),-1,-1,1,"hSVT[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mEvents)-(long)(p)),104,0,0,-1,-1,-1,1,"mEvents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mBoard)-(long)(p)),104,0,0,-1,-1,-1,1,"mBoard=",0,(char*)NULL);
   G__memvar_setup((void*)(&SVTAnodeHybridHistogramGroup::mFirstHybrid),104,0,0,-1,-1,-2,1,"mFirstHybrid[15]=",0,(char*)NULL);
   G__memvar_setup((void*)(&SVTAnodeHybridHistogramGroup::mNames),67,0,1,-1,-1,-2,1,"mNames[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SVTAnodeSumHistogramGroup */
static void G__setup_memvarSVTAnodeSumHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeSumHistogramGroup));
   { SVTAnodeSumHistogramGroup *p; p=(SVTAnodeSumHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hSVT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,1,"hSVT[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mEvents)-(long)(p)),104,0,0,-1,-1,-1,1,"mEvents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mRunNumber)-(long)(p)),104,0,0,-1,-1,-1,1,"mRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SsdPedestalHistogramGroup */
static void G__setup_memvarSsdPedestalHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SsdPedestalHistogramGroup));
   { SsdPedestalHistogramGroup *p; p=(SsdPedestalHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->h1SsdMeanPedestal)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,1,"h1SsdMeanPedestal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h1SsdMeanNoise)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,1,"h1SsdMeanNoise=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->good_ssd)-(long)(p)),105,0,0,-1,-1,-1,1,"good_ssd=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TOFL0HistogramGroup */
static void G__setup_memvarTOFL0HistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL0HistogramGroup));
   { TOFL0HistogramGroup *p; p=(TOFL0HistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"TOF_L0_hit[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"TOF_L0_trg[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mPart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mNtray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"actualTrayNum[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"NotActiveTray[128]=",0,"Highest TOF tray  number is MTD: 124, leave some rooms here. ");
   G__memvar_setup((void*)0,67,0,0,-1,-1,-2,4,"mTrayList=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"MaskoutTray[128]=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,0,-1,-1,-2,4,"mTraymaskoutList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TOFL1multHistogramGroup */
static void G__setup_memvarTOFL1multHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL1multHistogramGroup));
   { TOFL1multHistogramGroup *p; p=(TOFL1multHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"TOF_L1mult_vs_ZDCadcsum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"TOF_L1mult_vs_sumL0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TOFcheckHistogramGroup */
static void G__setup_memvarTOFcheckHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFcheckHistogramGroup));
   { TOFcheckHistogramGroup *p; p=(TOFcheckHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"TOF_Error1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"TOF_Error2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"TOF_Error3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"TOF_EventCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1F),-1,-1,4,"TOF_Tray_hits1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1F),-1,-1,4,"TOF_Tray_hits2=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"NotActiveTray[128]=",0,"Highest TOF tray  number is MTD: 124, leave some room here. ");
   G__memvar_setup((void*)0,67,0,0,-1,-1,-2,4,"mTrayList=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,0,-1,-1,-2,4,"mBunchShiftList=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mReferenceTray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mValidShiftTray[2][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mValidShift121[2][2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mValidShift122[2][2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TOFtrayHistogramGroup */
static void G__setup_memvarTOFtrayHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFtrayHistogramGroup));
   { TOFtrayHistogramGroup *p; p=(TOFtrayHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"TOF_Tray_LEhitmap[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"TOF_Tray_TEhitmap[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mPart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mNtray=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"actualTrayNum[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"NotActiveTray[128]=",0,"Highest TOF tray  number is MTD: 124, leave some rooms here. ");
   G__memvar_setup((void*)0,67,0,0,-1,-1,-2,4,"mTrayList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TOFupvpdHistogramGroup */
static void G__setup_memvarTOFupvpdHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFupvpdHistogramGroup));
   { TOFupvpdHistogramGroup *p; p=(TOFupvpdHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"upvpd_hitmap[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"upvpd_ToT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"upvpd_eastT_vs_westT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"numberforsort=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"leadinghits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"trailinghits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* UPCHistogramCtbGroup */
static void G__setup_memvarUPCHistogramCtbGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramCtbGroup));
   { UPCHistogramCtbGroup *p; p=(UPCHistogramCtbGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,98,0,1,-1,-1,-2,4,"mCtbMap[2][120]=",0,"CTB byte mapping");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_ctb_adc_sum=",0,"ADC sum spectrum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_ctb_count_vs_tray=",0,"number of counts in (trays, slats)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_ctb_cdb=",0,"ADC spectra of the 16 CDBs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_ctb_cdb_zoom=",0,"ADC spectra of the 16 CDBs (zoomed)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* UPCHistogramGroup */
static void G__setup_memvarUPCHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramGroup));
   { UPCHistogramGroup *p; p=(UPCHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_zdc_time_east=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_zdc_time_west=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_zdc_timediff_east_west=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_zdc_time_east_vs_west=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_zdc_unatt_east=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_zdc_unatt_west=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* UPCHistogramZdcGroup */
static void G__setup_memvarUPCHistogramZdcGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramZdcGroup));
   { UPCHistogramZdcGroup *p; p=(UPCHistogramZdcGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_zdce_sum=",0,"spectrum of ZDCE unattanuated sum ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1),-1,-1,4,"h_zdcw_sum=",0,"spectrum of ZDCW unattanuated sum ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_zdce_sum_vs_ctb_sum=",0,"ZDCE unattanuated sum vs. CTB ADC sum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_zdcw_sum_vs_ctb_sum=",0,"ZDCW unattanuated sum vs. CTB ADC sum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* VPDHiHistogramGroup */
static void G__setup_memvarVPDHiHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHiHistogramGroup));
   { VPDHiHistogramGroup *p; p=(VPDHiHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_vpd_cdb[4]=",0,"ADC spectra of the 4 CDBs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_vpd_tac_east_vs_tac_west=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_vpd_vertex_vs_l3_vertex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_vpd_earliestTAC_vs_eastchan=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_vpd_earliestTAC_vs_westchan=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* VPDHistogramGroup */
static void G__setup_memvarVPDHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHistogramGroup));
   { VPDHistogramGroup *p; p=(VPDHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_vpd_cdb[4]=",0,"ADC spectra of the 4 CDBs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_vpd_tac_east_vs_tac_west=",0,"east vs. west TAC value");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_vpd_vertex_vs_l3_vertex=",0,"TAC difference vs. L3 vertex z-position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_vpd_earliestTAC_vs_eastchan=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH2),-1,-1,4,"h_vpd_earliestTAC_vs_westchan=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pp2ppHistogramGroup */
static void G__setup_memvarpp2ppHistogramGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_pp2ppHistogramGroup));
   { pp2ppHistogramGroup *p; p=(pp2ppHistogramGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mRunNumber)-(long)(p)),104,0,0,-1,-1,-1,1,"mRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__OnlinePlots_CintLN_pp2ppHistogramGroupcLcLdA),-1,-2,4,"mMaxBits=16LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TH1D),-1,-1,4,"h_P2P[16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"mswitch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* DGHelp */
static void G__setup_memvarDGHelp(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_DGHelp));
   { DGHelp *p; p=(DGHelp*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObjArray),-1,-1,4,"fMemList=",0,"list containing all members");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextView),-1,-1,4,"fTextView=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fL0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fL1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextButton),-1,-1,4,"fCloseButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EvpServer */
static void G__setup_memvarEvpServer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_EvpServer));
   { EvpServer *p; p=(EvpServer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mGoFlag=",0,"flag = 0 - \"pause\"");
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"mTarget[1024]=",0,"File or directory name to pass to event reader");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mDebugLevel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mHistoSaved=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mDoEndOfRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mDoEndOfRunQuit=",0,"quit after end of run");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"mQuit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mMaxEventsPerRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_evpReader),-1,-1,4,"evp=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_GroupCollection),-1,-1,4,"mGroups=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mHistoHandler)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistoHandler),-1,-1,1,"mHistoHandler=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TMapFile),-1,-1,1,"mFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mRS)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_RunStatus),-1,-1,1,"mRS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mSS)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerStatus),-1,-1,1,"mSS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mGui)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerGui),-1,-1,1,"mGui=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ServerGui */
static void G__setup_memvarServerGui(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerGui));
   { ServerGui *p; p=(ServerGui*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGMainFrame),-1,-1,4,"fMain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGCompositeFrame),-1,-1,4,"fMain1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGVerticalFrame),-1,-1,4,"fConnectionFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGVerticalFrame),-1,-1,4,"fControlFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGHorizontalFrame),-1,-1,4,"fRunFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGHorizontalFrame),-1,-1,4,"fHistoFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGHorizontalFrame),-1,-1,4,"fMessagesFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGVerticalFrame),-1,-1,4,"fRunLoopFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGVerticalFrame),-1,-1,4,"fRunInfoFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGCompositeFrame),-1,-1,4,"fRunIDFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLabel),-1,-1,4,"fRunLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextEntry),-1,-1,4,"fRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextBuffer),-1,-1,4,"mRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGCompositeFrame),-1,-1,4,"fEventCountFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLabel),-1,-1,4,"fEventCountLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextEntry),-1,-1,4,"fEventCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextBuffer),-1,-1,4,"mEventCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGCompositeFrame),-1,-1,4,"fEventNumberFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLabel),-1,-1,4,"fEventNumberLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextEntry),-1,-1,4,"fEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextBuffer),-1,-1,4,"mEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGCompositeFrame),-1,-1,4,"fTokenNumberFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLabel),-1,-1,4,"fTokenNumberLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextEntry),-1,-1,4,"fTokenNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextBuffer),-1,-1,4,"mTokenNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGCompositeFrame),-1,-1,4,"fSourceFileFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLabel),-1,-1,4,"fSourceFileLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextEntry),-1,-1,4,"fSourceFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextBuffer),-1,-1,4,"mSourceFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGCompositeFrame),-1,-1,4,"fRunStatusFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLabel),-1,-1,4,"fRunStatusLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextEntry),-1,-1,4,"fRunStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextBuffer),-1,-1,4,"mRunStatusName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGHorizontalFrame),-1,-1,4,"fButtonFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGButton),-1,-1,4,"fStartButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGButton),-1,-1,4,"fStopButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGButton),-1,-1,4,"fNextButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGButton),-1,-1,4,"fLiveButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGButton),-1,-1,4,"fFileButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGVerticalFrame),-1,-1,4,"fHistoControlFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGVerticalFrame),-1,-1,4,"fHistoInfoFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGGroupFrame),-1,-1,4,"fDummyConnectionFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGGroupFrame),-1,-1,4,"fDummyRunLoopFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGGroupFrame),-1,-1,4,"fDummyHistoFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGGroupFrame),-1,-1,4,"fDummyRunInfoFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGCompositeFrame),-1,-1,4,"fHistoFileFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLabel),-1,-1,4,"fHistoFileLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextEntry),-1,-1,4,"fHistoFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextBuffer),-1,-1,4,"mHistoOutFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGHorizontalFrame),-1,-1,4,"fHistoButtonFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGButton),-1,-1,4,"fHistoResetButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGButton),-1,-1,4,"fHistoSaveButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGButton),-1,-1,4,"fHistoSavePSButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGButton),-1,-1,4,"fHistoPrintButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGButton),-1,-1,4,"fHistoViewButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGPictureButton),-1,-1,4,"fStarLogo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGMenuBar),-1,-1,4,"fMenuBar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGPopupMenu),-1,-1,4,"fMenuFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGPopupMenu),-1,-1,4,"fMenuHelp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fL0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fL1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fL101=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fL102=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fL2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fL3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fL200=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fL201=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fL203=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fL204=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fLDir=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fButtonFrameLayout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fL5=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fL6=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TList),-1,-1,4,"fCleanUp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_EvpServer),-1,-1,4,"mEvpServer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mDebugLevel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->green)-(long)(p)),107,0,0,-1,G__defined_typename("Pixel_t"),-1,1,"green=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->blue)-(long)(p)),107,0,0,-1,G__defined_typename("Pixel_t"),-1,1,"blue=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->grey)-(long)(p)),107,0,0,-1,G__defined_typename("Pixel_t"),-1,1,"grey=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->red)-(long)(p)),107,0,0,-1,G__defined_typename("Pixel_t"),-1,1,"red=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->black)-(long)(p)),107,0,0,-1,G__defined_typename("Pixel_t"),-1,1,"black=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RunStatus */
static void G__setup_memvarRunStatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_RunStatus));
   { RunStatus *p; p=(RunStatus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mLive=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mToken=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mEmpty=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mEndOfRunActionPerformed=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"mTriggerBits=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"mDetectorBits=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"mTriggerBitsRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"mDetectorBitsRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ServerStatus */
static void G__setup_memvarServerStatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerStatus));
   { ServerStatus *p; p=(ServerStatus*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("time_t"),-1,4,"mReceiveTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("time_t"),-1,4,"mRequestTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mReceiveType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mRequestType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PGMessage */
static void G__setup_memvarPGMessage(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_PGMessage));
   { PGMessage *p; p=(PGMessage*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TObjArray),-1,-1,4,"fMemList=",0,"list containing all members");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextView),-1,-1,4,"fTextView=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fL0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGLayoutHints),-1,-1,4,"fL1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TGTextButton),-1,-1,4,"fCloseButton=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* endOfRunActionMain */
static void G__setup_memvarendOfRunActionMain(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_endOfRunActionMain));
   { endOfRunActionMain *p; p=(endOfRunActionMain*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* evpServerMain */
static void G__setup_memvarevpServerMain(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_evpServerMain));
   { evpServerMain *p; p=(evpServerMain*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_EvpServer),-1,-2,4,"mEvpServer=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarOnlinePlots_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHistogramGroup(void) {
   /* HistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup));
   G__memfunc_setup("HistogramGroup",1467,G__OnlinePlots_Cint_605_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HistogramGroup",1467,G__OnlinePlots_Cint_605_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 - subGroup "
"C - - 10 '\"any\"' trigger C - - 10 '\"any\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__OnlinePlots_Cint_605_0_3, 103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,G__OnlinePlots_Cint_605_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reset",547,G__OnlinePlots_Cint_605_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("beginRun",826,G__OnlinePlots_Cint_605_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("endRun",620,G__OnlinePlots_Cint_605_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finish",641,G__OnlinePlots_Cint_605_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("groupName",942,G__OnlinePlots_Cint_605_0_9, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("subGroupName",1240,G__OnlinePlots_Cint_605_0_10, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("triggerName",1141,G__OnlinePlots_Cint_605_0_11, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("detectorName",1243,G__OnlinePlots_Cint_605_0_12, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id",205,G__OnlinePlots_Cint_605_0_13, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__OnlinePlots_Cint_605_0_14, 103, -1, -1, 0, 1, 1, 1, 8, "u 'HistogramGroup' - 11 - hg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("testBits",850,G__OnlinePlots_Cint_605_0_15, 103, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - trigger h - - 0 - detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setActive",936,G__OnlinePlots_Cint_605_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("active",636,G__OnlinePlots_Cint_605_0_17, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPrinted",1058,G__OnlinePlots_Cint_605_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printed",758,G__OnlinePlots_Cint_605_0_19, 103, -1, -1, 0, 0, 1, 1, 0, "", "Used to avoid duplicated with the main tabs", (void*) NULL, 0);
   G__memfunc_setup("pre",327,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 1, 1, 2, 0, "C - - 10 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pre",327,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'vector<TH1*,allocator<TH1*> >' 'vector<TH1*>' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_605_0_22, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_605_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_605_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_605_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_605_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_605_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_605_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_605_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_605_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HistogramGroup", 1467, G__OnlinePlots_Cint_605_0_34, (int) ('i'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup), -1, 0, 1, 1, 1, 0, "u 'HistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HistogramGroup", 1593, G__OnlinePlots_Cint_605_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_605_0_36, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_HistogramGroup), -1, 1, 1, 1, 1, 0, "u 'HistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBESHistogramGroup(void) {
   /* BESHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_BESHistogramGroup));
   G__memfunc_setup("BESHistogramGroup",1685,G__OnlinePlots_Cint_619_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_BESHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BESHistogramGroup",1685,G__OnlinePlots_Cint_619_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_BESHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"vpd\"' subGroup "
"C - - 10 '\"any\"' trigger C - - 10 '\"vpd\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_619_0_6, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BESHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_619_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BESHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_619_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BESHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_619_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BESHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_619_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_619_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BESHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_619_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BESHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_619_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BESHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_619_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BESHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BESHistogramGroup", 1685, G__OnlinePlots_Cint_619_0_18, (int) ('i'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_BESHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'BESHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BESHistogramGroup", 1811, G__OnlinePlots_Cint_619_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFMSHistogramGroup(void) {
   /* FMSHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_FMSHistogramGroup));
   G__memfunc_setup("FMSHistogramGroup",1697,G__OnlinePlots_Cint_620_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_FMSHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FMSHistogramGroup",1697,G__OnlinePlots_Cint_620_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_FMSHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"fms\"' subGroup "
"C - - 10 '\"any\"' trigger C - - 10 '\"fms\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("createHistos",1262,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deleteHistos",1261,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_620_0_8, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FMSHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_620_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_620_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FMSHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_620_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FMSHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_620_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_620_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_620_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FMSHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_620_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FMSHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_620_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FMSHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FMSHistogramGroup", 1697, G__OnlinePlots_Cint_620_0_20, (int) ('i'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_FMSHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'FMSHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FMSHistogramGroup", 1823, G__OnlinePlots_Cint_620_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_620_0_22, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_FMSHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'FMSHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGroupStatisticsHistogramGroup(void) {
   /* GroupStatisticsHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_GroupStatisticsHistogramGroup));
   G__memfunc_setup("GroupStatisticsHistogramGroup",3059,G__OnlinePlots_Cint_622_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_GroupStatisticsHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GroupStatisticsHistogramGroup",3059,G__OnlinePlots_Cint_622_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_GroupStatisticsHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"event and trigger groups\"' subGroup "
"C - - 10 '\"any\"' trigger C - - 10 '\"any\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("drawEvpGroupLabels",1849,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawDetectorLabels",1851,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_622_0_8, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GroupStatisticsHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_622_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GroupStatisticsHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_622_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GroupStatisticsHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_622_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GroupStatisticsHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_622_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_622_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GroupStatisticsHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_622_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GroupStatisticsHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_622_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GroupStatisticsHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_622_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GroupStatisticsHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GroupStatisticsHistogramGroup", 3059, G__OnlinePlots_Cint_622_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__OnlinePlots_CintLN_GroupStatisticsHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'GroupStatisticsHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GroupStatisticsHistogramGroup", 3185, G__OnlinePlots_Cint_622_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_622_0_22, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_GroupStatisticsHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'GroupStatisticsHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncL2UpsilonCountsHistogramGroup(void) {
   /* L2UpsilonCountsHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonCountsHistogramGroup));
   G__memfunc_setup("L2UpsilonCountsHistogramGroup",2975,G__OnlinePlots_Cint_623_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonCountsHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("L2UpsilonCountsHistogramGroup",2975,G__OnlinePlots_Cint_623_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonCountsHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"counts\"' subGroup "
"C - - 10 '\"ups\"' trigger C - - 10 '\"any\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_623_0_6, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&L2UpsilonCountsHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_623_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&L2UpsilonCountsHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_623_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&L2UpsilonCountsHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_623_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&L2UpsilonCountsHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_623_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_623_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&L2UpsilonCountsHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_623_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&L2UpsilonCountsHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_623_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&L2UpsilonCountsHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_623_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&L2UpsilonCountsHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("L2UpsilonCountsHistogramGroup", 2975, G__OnlinePlots_Cint_623_0_18, (int) ('i'), 
G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonCountsHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'L2UpsilonCountsHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~L2UpsilonCountsHistogramGroup", 3101, G__OnlinePlots_Cint_623_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_623_0_20, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonCountsHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'L2UpsilonCountsHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncL2UpsilonMassHistogramGroup(void) {
   /* L2UpsilonMassHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonMassHistogramGroup));
   G__memfunc_setup("L2UpsilonMassHistogramGroup",2743,G__OnlinePlots_Cint_624_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonMassHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("L2UpsilonMassHistogramGroup",2743,G__OnlinePlots_Cint_624_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonMassHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"mass\"' subGroup "
"C - - 10 '\"ups\"' trigger C - - 10 '\"any\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_624_0_6, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&L2UpsilonMassHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_624_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&L2UpsilonMassHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_624_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&L2UpsilonMassHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_624_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&L2UpsilonMassHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_624_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_624_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&L2UpsilonMassHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_624_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&L2UpsilonMassHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_624_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&L2UpsilonMassHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_624_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&L2UpsilonMassHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("L2UpsilonMassHistogramGroup", 2743, G__OnlinePlots_Cint_624_0_18, (int) ('i'), 
G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonMassHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'L2UpsilonMassHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~L2UpsilonMassHistogramGroup", 2869, G__OnlinePlots_Cint_624_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_624_0_20, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonMassHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'L2UpsilonMassHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncL2UpsilonTowersHistogramGroup(void) {
   /* L2UpsilonTowersHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonTowersHistogramGroup));
   G__memfunc_setup("L2UpsilonTowersHistogramGroup",2983,G__OnlinePlots_Cint_625_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonTowersHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("L2UpsilonTowersHistogramGroup",2983,G__OnlinePlots_Cint_625_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonTowersHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"mass\"' subGroup "
"C - - 10 '\"ups\"' trigger C - - 10 '\"any\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_625_0_6, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&L2UpsilonTowersHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_625_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&L2UpsilonTowersHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_625_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&L2UpsilonTowersHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_625_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&L2UpsilonTowersHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_625_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_625_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&L2UpsilonTowersHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_625_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&L2UpsilonTowersHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_625_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&L2UpsilonTowersHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_625_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&L2UpsilonTowersHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("L2UpsilonTowersHistogramGroup", 2983, G__OnlinePlots_Cint_625_0_18, (int) ('i'), 
G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonTowersHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'L2UpsilonTowersHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~L2UpsilonTowersHistogramGroup", 3109, G__OnlinePlots_Cint_625_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_625_0_20, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_L2UpsilonTowersHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'L2UpsilonTowersHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLaserDriftTimeHistogramGroup(void) {
   /* LaserDriftTimeHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserDriftTimeHistogramGroup));
   G__memfunc_setup("LaserDriftTimeHistogramGroup",2874,G__OnlinePlots_Cint_627_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserDriftTimeHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LaserDriftTimeHistogramGroup",2874,G__OnlinePlots_Cint_627_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserDriftTimeHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"drift time\"' subGroup "
"C - - 10 '\"laser\"' trigger C - - 10 '\"tpc\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_627_0_6, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LaserDriftTimeHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_627_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LaserDriftTimeHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_627_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LaserDriftTimeHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_627_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LaserDriftTimeHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_627_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_627_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LaserDriftTimeHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_627_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LaserDriftTimeHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_627_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LaserDriftTimeHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_627_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LaserDriftTimeHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LaserDriftTimeHistogramGroup", 2874, G__OnlinePlots_Cint_627_0_18, (int) ('i'), 
G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserDriftTimeHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'LaserDriftTimeHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LaserDriftTimeHistogramGroup", 3000, G__OnlinePlots_Cint_627_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_627_0_20, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserDriftTimeHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'LaserDriftTimeHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLaserTpcPadChargeHistogramGroup(void) {
   /* LaserTpcPadChargeHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserTpcPadChargeHistogramGroup));
   G__memfunc_setup("LaserTpcPadChargeHistogramGroup",3128,G__OnlinePlots_Cint_628_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserTpcPadChargeHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LaserTpcPadChargeHistogramGroup",3128,G__OnlinePlots_Cint_628_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserTpcPadChargeHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"pad charge\"' subGroup "
"C - - 10 '\"laser\"' trigger C - - 10 '\"tpc\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_628_0_6, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LaserTpcPadChargeHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_628_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LaserTpcPadChargeHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_628_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LaserTpcPadChargeHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_628_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LaserTpcPadChargeHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_628_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_628_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LaserTpcPadChargeHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_628_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LaserTpcPadChargeHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_628_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LaserTpcPadChargeHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_628_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LaserTpcPadChargeHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LaserTpcPadChargeHistogramGroup", 3128, G__OnlinePlots_Cint_628_0_18, (int) ('i'), 
G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserTpcPadChargeHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'LaserTpcPadChargeHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LaserTpcPadChargeHistogramGroup", 3254, G__OnlinePlots_Cint_628_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_628_0_20, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_LaserTpcPadChargeHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'LaserTpcPadChargeHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTDhitsHistogramGroup(void) {
   /* MTDhitsHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDhitsHistogramGroup));
   G__memfunc_setup("MTDhitsHistogramGroup",2136,G__OnlinePlots_Cint_629_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDhitsHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MTDhitsHistogramGroup",2136,G__OnlinePlots_Cint_629_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDhitsHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"hits\"' subGroup "
"C - - 10 '\"any\"' trigger C - - 10 '\"MTD\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("tdcchan2globalstrip",1962,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 4, 1, 4, 0, 
"i - - 0 - - i - - 0 - - "
"i - - 0 - - i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tdcchan2mrpcchan",1619,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_629_0_8, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTDhitsHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_629_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTDhitsHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_629_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTDhitsHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_629_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTDhitsHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_629_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_629_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTDhitsHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_629_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTDhitsHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_629_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTDhitsHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_629_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTDhitsHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MTDhitsHistogramGroup", 2136, G__OnlinePlots_Cint_629_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDhitsHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'MTDhitsHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MTDhitsHistogramGroup", 2262, G__OnlinePlots_Cint_629_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_629_0_22, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDhitsHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'MTDhitsHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMTDtriggerinfoHistogramGroup(void) {
   /* MTDtriggerinfoHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDtriggerinfoHistogramGroup));
   G__memfunc_setup("MTDtriggerinfoHistogramGroup",2880,G__OnlinePlots_Cint_630_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDtriggerinfoHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MTDtriggerinfoHistogramGroup",2880,G__OnlinePlots_Cint_630_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDtriggerinfoHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"MTDtrigger\"' subGroup "
"C - - 10 '\"any\"' trigger C - - 10 '\"MTD\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_630_0_6, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MTDtriggerinfoHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_630_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTDtriggerinfoHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_630_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MTDtriggerinfoHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_630_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MTDtriggerinfoHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_630_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_630_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTDtriggerinfoHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_630_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTDtriggerinfoHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_630_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MTDtriggerinfoHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_630_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MTDtriggerinfoHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MTDtriggerinfoHistogramGroup", 2880, G__OnlinePlots_Cint_630_0_18, (int) ('i'), 
G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDtriggerinfoHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'MTDtriggerinfoHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MTDtriggerinfoHistogramGroup", 3006, G__OnlinePlots_Cint_630_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_630_0_20, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_MTDtriggerinfoHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'MTDtriggerinfoHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSVTAnodeHybridHistogramGroup(void) {
   /* SVTAnodeHybridHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeHybridHistogramGroup));
   G__memfunc_setup("SVTAnodeHybridHistogramGroup",2817,G__OnlinePlots_Cint_631_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeHybridHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVTAnodeHybridHistogramGroup",2817,G__OnlinePlots_Cint_631_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeHybridHistogramGroup), -1, 0, 5, 1, 1, 0, 
"h - - 0 - board C - - 10 '\"SVT\"' group "
"C - - 10 '\"Anode vs Hybrid\"' subGroup C - - 10 '\"any\"' trigger "
"C - - 10 '\"svt\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("blwh2rma",799,G__OnlinePlots_Cint_631_0_6, 121, -1, -1, 0, 7, 3, 1, 0, 
"i - - 0 - b i - - 0 - l "
"i - - 0 - w i - - 0 - h "
"i - - 1 - recBoard i - - 1 - mezz "
"i - - 1 - mz_hyb", (char*)NULL, (void*) G__func2void( (void (*)(int, int, int, int, int&, int&, int&))(&SVTAnodeHybridHistogramGroup::blwh2rma) ), 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_631_0_7, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SVTAnodeHybridHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_631_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SVTAnodeHybridHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_631_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SVTAnodeHybridHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_631_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SVTAnodeHybridHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_631_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_631_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SVTAnodeHybridHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_631_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SVTAnodeHybridHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_631_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SVTAnodeHybridHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_631_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SVTAnodeHybridHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SVTAnodeHybridHistogramGroup", 2817, G__OnlinePlots_Cint_631_0_19, (int) ('i'), 
G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeHybridHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'SVTAnodeHybridHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVTAnodeHybridHistogramGroup", 2943, G__OnlinePlots_Cint_631_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_631_0_21, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeHybridHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'SVTAnodeHybridHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSVTAnodeSumHistogramGroup(void) {
   /* SVTAnodeSumHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeSumHistogramGroup));
   G__memfunc_setup("SVTAnodeSumHistogramGroup",2516,G__OnlinePlots_Cint_632_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeSumHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SVTAnodeSumHistogramGroup",2516,G__OnlinePlots_Cint_632_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeSumHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"Anode Sum\"' subGroup "
"C - - 10 '\"any\"' trigger C - - 10 '\"svt\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("beginRun",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("endRun",620,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_632_0_8, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SVTAnodeSumHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_632_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SVTAnodeSumHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_632_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SVTAnodeSumHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_632_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SVTAnodeSumHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_632_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_632_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SVTAnodeSumHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_632_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SVTAnodeSumHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_632_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SVTAnodeSumHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_632_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SVTAnodeSumHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SVTAnodeSumHistogramGroup", 2516, G__OnlinePlots_Cint_632_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeSumHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'SVTAnodeSumHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SVTAnodeSumHistogramGroup", 2642, G__OnlinePlots_Cint_632_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_632_0_22, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_SVTAnodeSumHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'SVTAnodeSumHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSsdPedestalHistogramGroup(void) {
   /* SsdPedestalHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_SsdPedestalHistogramGroup));
   G__memfunc_setup("SsdPedestalHistogramGroup",2583,G__OnlinePlots_Cint_633_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_SsdPedestalHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SsdPedestalHistogramGroup",2583,G__OnlinePlots_Cint_633_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_SsdPedestalHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"Pedestal\"' subGroup "
"C - - 10 '\"pedestal\"' trigger C - - 10 '\"ssd\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("beginRun",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("endRun",620,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SsdTH1Setup",1032,G__OnlinePlots_Cint_633_0_8, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'TH1' - 0 - rHisto C - - 10 - rTitleX "
"C - - 10 - rTitleY i - - 0 - rMax "
"i - - 0 - rFillColor i - - 0 '0' rLineColor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_633_0_9, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SsdPedestalHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_633_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SsdPedestalHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_633_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SsdPedestalHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_633_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SsdPedestalHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_633_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_633_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SsdPedestalHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_633_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SsdPedestalHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_633_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SsdPedestalHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_633_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SsdPedestalHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SsdPedestalHistogramGroup", 2583, G__OnlinePlots_Cint_633_0_21, (int) ('i'), 
G__get_linked_tagnum(&G__OnlinePlots_CintLN_SsdPedestalHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'SsdPedestalHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SsdPedestalHistogramGroup", 2709, G__OnlinePlots_Cint_633_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_633_0_23, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_SsdPedestalHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'SsdPedestalHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTOFL0HistogramGroup(void) {
   /* TOFL0HistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL0HistogramGroup));
   G__memfunc_setup("TOFL0HistogramGroup",1824,G__OnlinePlots_Cint_634_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL0HistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOFL0HistogramGroup",1824,G__OnlinePlots_Cint_634_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL0HistogramGroup), -1, 0, 5, 1, 1, 0, 
"h - - 0 - ipart C - - 10 - group "
"C - - 10 '\"TOF L0\"' subGroup C - - 10 '\"any\"' trigger "
"C - - 10 '\"trg\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadTrayList",1208,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTraymaskoutList",1980,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_634_0_8, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TOFL0HistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_634_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOFL0HistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_634_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TOFL0HistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_634_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TOFL0HistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_634_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_634_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOFL0HistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_634_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TOFL0HistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_634_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOFL0HistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_634_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TOFL0HistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TOFL0HistogramGroup", 1824, G__OnlinePlots_Cint_634_0_20, (int) ('i'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL0HistogramGroup), -1, 0, 1, 1, 1, 0, "u 'TOFL0HistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TOFL0HistogramGroup", 1950, G__OnlinePlots_Cint_634_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_634_0_22, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL0HistogramGroup), -1, 1, 1, 1, 1, 0, "u 'TOFL0HistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTOFL1multHistogramGroup(void) {
   /* TOFL1multHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL1multHistogramGroup));
   G__memfunc_setup("TOFL1multHistogramGroup",2275,G__OnlinePlots_Cint_635_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL1multHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOFL1multHistogramGroup",2275,G__OnlinePlots_Cint_635_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL1multHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"TOF trigger\"' subGroup "
"C - - 10 '\"any\"' trigger C - - 10 '\"trg\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TDIGChan2TINOChan",1416,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - - i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get_TOFTHUB",923,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_635_0_8, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TOFL1multHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_635_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOFL1multHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_635_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TOFL1multHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_635_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TOFL1multHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_635_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_635_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOFL1multHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_635_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TOFL1multHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_635_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOFL1multHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_635_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TOFL1multHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TOFL1multHistogramGroup", 2275, G__OnlinePlots_Cint_635_0_20, (int) ('i'), 
G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL1multHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'TOFL1multHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TOFL1multHistogramGroup", 2401, G__OnlinePlots_Cint_635_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_635_0_22, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFL1multHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'TOFL1multHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTOFcheckHistogramGroup(void) {
   /* TOFcheckHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFcheckHistogramGroup));
   G__memfunc_setup("TOFcheckHistogramGroup",2210,G__OnlinePlots_Cint_636_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFcheckHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOFcheckHistogramGroup",2210,G__OnlinePlots_Cint_636_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFcheckHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"Error check\"' subGroup "
"C - - 10 '\"any\"' trigger C - - 10 '\"TOF\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ValidDataword",1318,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValidBunchid",1197,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 4, 1, 4, 0, 
"i - - 0 - - i - - 0 - - "
"i - - 0 - - i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTrayList",1208,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadValidBunchidPhase",2074,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_636_0_10, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TOFcheckHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_636_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOFcheckHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_636_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TOFcheckHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_636_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TOFcheckHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_636_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_636_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOFcheckHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_636_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TOFcheckHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_636_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOFcheckHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_636_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TOFcheckHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TOFcheckHistogramGroup", 2210, G__OnlinePlots_Cint_636_0_22, (int) ('i'), 
G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFcheckHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'TOFcheckHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TOFcheckHistogramGroup", 2336, G__OnlinePlots_Cint_636_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_636_0_24, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFcheckHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'TOFcheckHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTOFtrayHistogramGroup(void) {
   /* TOFtrayHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFtrayHistogramGroup));
   G__memfunc_setup("TOFtrayHistogramGroup",2148,G__OnlinePlots_Cint_637_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFtrayHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOFtrayHistogramGroup",2148,G__OnlinePlots_Cint_637_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFtrayHistogramGroup), -1, 0, 5, 1, 1, 0, 
"h - - 0 - ipart C - - 10 - group "
"C - - 10 '\"Tray\"' subGroup C - - 10 '\"any\"' trigger "
"C - - 10 '\"TOF\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadTrayList",1208,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_637_0_7, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TOFtrayHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_637_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOFtrayHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_637_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TOFtrayHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_637_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TOFtrayHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_637_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_637_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOFtrayHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_637_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TOFtrayHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_637_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOFtrayHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_637_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TOFtrayHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TOFtrayHistogramGroup", 2148, G__OnlinePlots_Cint_637_0_19, (int) ('i'), 
G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFtrayHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'TOFtrayHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TOFtrayHistogramGroup", 2274, G__OnlinePlots_Cint_637_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_637_0_21, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFtrayHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'TOFtrayHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTOFupvpdHistogramGroup(void) {
   /* TOFupvpdHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFupvpdHistogramGroup));
   G__memfunc_setup("TOFupvpdHistogramGroup",2259,G__OnlinePlots_Cint_638_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFupvpdHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOFupvpdHistogramGroup",2259,G__OnlinePlots_Cint_638_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFupvpdHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"upvpd\"' subGroup "
"C - - 10 '\"any\"' trigger C - - 10 '\"TOF\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("tdcchan2upvpdPMTchan",1985,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 3, 1, 4, 0, 
"i - - 0 - - i - - 0 - - "
"i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_638_0_7, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TOFupvpdHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_638_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOFupvpdHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_638_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TOFupvpdHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_638_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TOFupvpdHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_638_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_638_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOFupvpdHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_638_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TOFupvpdHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_638_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TOFupvpdHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_638_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TOFupvpdHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TOFupvpdHistogramGroup", 2259, G__OnlinePlots_Cint_638_0_19, (int) ('i'), 
G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFupvpdHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'TOFupvpdHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TOFupvpdHistogramGroup", 2385, G__OnlinePlots_Cint_638_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_638_0_21, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_TOFupvpdHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'TOFupvpdHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUPCHistogramCtbGroup(void) {
   /* UPCHistogramCtbGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramCtbGroup));
   G__memfunc_setup("UPCHistogramCtbGroup",1980,G__OnlinePlots_Cint_639_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramCtbGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UPCHistogramCtbGroup",1980,G__OnlinePlots_Cint_639_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramCtbGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"ctb\"' subGroup "
"C - - 10 '\"upc\"' trigger C - - 10 '\"ctb\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("putCdbLabels",1205,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TH1' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_639_0_7, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&UPCHistogramCtbGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_639_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UPCHistogramCtbGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_639_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&UPCHistogramCtbGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_639_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&UPCHistogramCtbGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_639_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_639_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UPCHistogramCtbGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_639_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&UPCHistogramCtbGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_639_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UPCHistogramCtbGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_639_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&UPCHistogramCtbGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("UPCHistogramCtbGroup", 1980, G__OnlinePlots_Cint_639_0_19, (int) ('i'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramCtbGroup), -1, 0, 1, 1, 1, 0, "u 'UPCHistogramCtbGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~UPCHistogramCtbGroup", 2106, G__OnlinePlots_Cint_639_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_639_0_21, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramCtbGroup), -1, 1, 1, 1, 1, 0, "u 'UPCHistogramCtbGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUPCHistogramGroup(void) {
   /* UPCHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramGroup));
   G__memfunc_setup("UPCHistogramGroup",1699,G__OnlinePlots_Cint_640_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UPCHistogramGroup",1699,G__OnlinePlots_Cint_640_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"first\"' subGroup "
"C - - 10 '\"upc\"' trigger C - - 10 '\"any\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_640_0_6, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&UPCHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_640_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UPCHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_640_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&UPCHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_640_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&UPCHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_640_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_640_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UPCHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_640_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&UPCHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_640_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UPCHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_640_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&UPCHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("UPCHistogramGroup", 1699, G__OnlinePlots_Cint_640_0_18, (int) ('i'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'UPCHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~UPCHistogramGroup", 1825, G__OnlinePlots_Cint_640_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_640_0_20, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'UPCHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncUPCHistogramZdcGroup(void) {
   /* UPCHistogramZdcGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramZdcGroup));
   G__memfunc_setup("UPCHistogramZdcGroup",1988,G__OnlinePlots_Cint_641_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramZdcGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UPCHistogramZdcGroup",1988,G__OnlinePlots_Cint_641_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramZdcGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"zdc\"' subGroup "
"C - - 10 '\"upc\"' trigger C - - 10 '\"zdc\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_641_0_6, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&UPCHistogramZdcGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_641_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UPCHistogramZdcGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_641_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&UPCHistogramZdcGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_641_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&UPCHistogramZdcGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_641_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_641_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UPCHistogramZdcGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_641_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&UPCHistogramZdcGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_641_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&UPCHistogramZdcGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_641_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&UPCHistogramZdcGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("UPCHistogramZdcGroup", 1988, G__OnlinePlots_Cint_641_0_18, (int) ('i'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramZdcGroup), -1, 0, 1, 1, 1, 0, "u 'UPCHistogramZdcGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~UPCHistogramZdcGroup", 2114, G__OnlinePlots_Cint_641_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_641_0_20, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_UPCHistogramZdcGroup), -1, 1, 1, 1, 1, 0, "u 'UPCHistogramZdcGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncVPDHiHistogramGroup(void) {
   /* VPDHiHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHiHistogramGroup));
   G__memfunc_setup("VPDHiHistogramGroup",1878,G__OnlinePlots_Cint_642_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHiHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VPDHiHistogramGroup",1878,G__OnlinePlots_Cint_642_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHiHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"vpdHi\"' subGroup "
"C - - 10 '\"any\"' trigger C - - 10 '\"vpd\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_642_0_6, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&VPDHiHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_642_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VPDHiHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_642_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&VPDHiHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_642_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&VPDHiHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_642_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_642_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VPDHiHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_642_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&VPDHiHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_642_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VPDHiHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_642_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&VPDHiHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("VPDHiHistogramGroup", 1878, G__OnlinePlots_Cint_642_0_18, (int) ('i'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHiHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'VPDHiHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~VPDHiHistogramGroup", 2004, G__OnlinePlots_Cint_642_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_642_0_20, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHiHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'VPDHiHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncVPDHistogramGroup(void) {
   /* VPDHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHistogramGroup));
   G__memfunc_setup("VPDHistogramGroup",1701,G__OnlinePlots_Cint_643_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VPDHistogramGroup",1701,G__OnlinePlots_Cint_643_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHistogramGroup), -1, 0, 4, 1, 1, 0, 
"C - - 10 - group C - - 10 '\"vpd\"' subGroup "
"C - - 10 '\"any\"' trigger C - - 10 '\"vpd\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_643_0_6, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&VPDHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_643_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VPDHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_643_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&VPDHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_643_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&VPDHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_643_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_643_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VPDHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_643_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&VPDHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_643_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&VPDHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_643_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&VPDHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("VPDHistogramGroup", 1701, G__OnlinePlots_Cint_643_0_18, (int) ('i'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'VPDHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~VPDHistogramGroup", 1827, G__OnlinePlots_Cint_643_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_643_0_20, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_VPDHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'VPDHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpp2ppHistogramGroup(void) {
   /* pp2ppHistogramGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_pp2ppHistogramGroup));
   G__memfunc_setup("pp2ppHistogramGroup",1965,G__OnlinePlots_Cint_644_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_pp2ppHistogramGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pp2ppHistogramGroup",1965,G__OnlinePlots_Cint_644_0_2, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_pp2ppHistogramGroup), -1, 0, 5, 1, 1, 0, 
"h - - 0 - iswitch C - - 10 '\"P2P\"' group "
"C - - 10 '\"pp2pp\"' subGroup C - - 10 '\"any\"' trigger "
"C - - 10 '\"pp2pp\"' detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,103, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - cc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("beginRun",826,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'evpReader' - 0 - evp C - - 0 - datap", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_644_0_7, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&pp2ppHistogramGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_644_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&pp2ppHistogramGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_644_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&pp2ppHistogramGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_644_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&pp2ppHistogramGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_644_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_644_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&pp2ppHistogramGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_644_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&pp2ppHistogramGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_644_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&pp2ppHistogramGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_644_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&pp2ppHistogramGroup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("pp2ppHistogramGroup", 1965, G__OnlinePlots_Cint_644_0_19, (int) ('i'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_pp2ppHistogramGroup), -1, 0, 1, 1, 1, 0, "u 'pp2ppHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pp2ppHistogramGroup", 2091, G__OnlinePlots_Cint_644_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_644_0_21, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_pp2ppHistogramGroup), -1, 1, 1, 1, 1, 0, "u 'pp2ppHistogramGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncDGHelp(void) {
   /* DGHelp */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_DGHelp));
   G__memfunc_setup("GetListOfSignals",1602,G__OnlinePlots_Cint_754_0_1, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__OnlinePlots_Cint_754_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__OnlinePlots_Cint_754_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LowPriority",1172,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EmitVA",550,G__OnlinePlots_Cint_754_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_754_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_754_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_754_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_754_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_754_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_754_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_754_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_754_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_754_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_754_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_754_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_754_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_754_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_754_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_754_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_754_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChangedBy",869,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Message",709,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Exit",410,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DGHelp",532,G__OnlinePlots_Cint_754_0_27, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_DGHelp), -1, 0, 3, 1, 1, 0, 
"C - - 0 - filename g - - 0 'false' exitOnClose "
"k - 'Pixel_t' 0 '(Pixel_t)(-1)' color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessMessage",1444,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_754_0_29, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&DGHelp::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_754_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DGHelp::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_754_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&DGHelp::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_754_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&DGHelp::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_754_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_754_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DGHelp::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_754_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DGHelp::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_754_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&DGHelp::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_754_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&DGHelp::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~DGHelp", 658, G__OnlinePlots_Cint_754_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEvpServer(void) {
   /* EvpServer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_EvpServer));
   G__memfunc_setup("EvpServer",930,G__OnlinePlots_Cint_864_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_EvpServer), -1, 0, 1, 1, 1, 0, "g - - 0 'true' gui", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("run",341,G__OnlinePlots_Cint_864_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NextEvent",929,G__OnlinePlots_Cint_864_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MainLoop",799,G__OnlinePlots_Cint_864_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateInfo",1007,G__OnlinePlots_Cint_864_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnabled",983,G__OnlinePlots_Cint_864_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNewTarget",1213,G__OnlinePlots_Cint_864_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLive",700,G__OnlinePlots_Cint_864_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStopFlag",1100,G__OnlinePlots_Cint_864_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGoFlag",860,G__OnlinePlots_Cint_864_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDefaults",1124,G__OnlinePlots_Cint_864_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGoFlag",848,G__OnlinePlots_Cint_864_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTarget",903,G__OnlinePlots_Cint_864_0_13, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxEventsPerRun",1827,G__OnlinePlots_Cint_864_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDoEndOfRun",1248,G__OnlinePlots_Cint_864_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDoEndOfRunQuit",1667,G__OnlinePlots_Cint_864_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDebugLevel",1291,G__OnlinePlots_Cint_864_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - lDebugLevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDebugLevel",1279,G__OnlinePlots_Cint_864_0_18, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhiAngleMap",1362,G__OnlinePlots_Cint_864_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__OnlinePlots_Cint_864_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__OnlinePlots_Cint_864_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Save",399,G__OnlinePlots_Cint_864_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakePS",545,G__OnlinePlots_Cint_864_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__OnlinePlots_Cint_864_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LaunchEndOfRunAction",1978,G__OnlinePlots_Cint_864_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "l - - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_864_0_26, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EvpServer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_864_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EvpServer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_864_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EvpServer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_864_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EvpServer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__OnlinePlots_Cint_864_0_30, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__OnlinePlots_Cint_864_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__OnlinePlots_Cint_864_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_864_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_864_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EvpServer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_864_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EvpServer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_864_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EvpServer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_864_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EvpServer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EvpServer", 930, G__OnlinePlots_Cint_864_0_38, (int) ('i'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_EvpServer), -1, 0, 1, 1, 1, 0, "u 'EvpServer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EvpServer", 1056, G__OnlinePlots_Cint_864_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_864_0_40, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_EvpServer), -1, 1, 1, 1, 1, 0, "u 'EvpServer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncServerGui(void) {
   /* ServerGui */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerGui));
   G__memfunc_setup("GetListOfSignals",1602,G__OnlinePlots_Cint_866_0_1, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__OnlinePlots_Cint_866_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__OnlinePlots_Cint_866_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,G__OnlinePlots_Cint_866_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LowPriority",1172,G__OnlinePlots_Cint_866_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EmitVA",550,G__OnlinePlots_Cint_866_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_866_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_866_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_866_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_866_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_866_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_866_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_866_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_866_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_866_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_866_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_866_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_866_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_866_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_866_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_866_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_866_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,G__OnlinePlots_Cint_866_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangedBy",869,G__OnlinePlots_Cint_866_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Message",709,G__OnlinePlots_Cint_866_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ServerGui",924,G__OnlinePlots_Cint_866_0_26, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerGui), -1, 0, 4, 1, 1, 0, 
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h U 'EvpServer' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTarget",915,G__OnlinePlots_Cint_866_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetServer",931,G__OnlinePlots_Cint_866_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "U 'EvpServer' - 0 - server", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseWindow",1134,G__OnlinePlots_Cint_866_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoStartButton",1341,G__OnlinePlots_Cint_866_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoStopButton",1237,G__OnlinePlots_Cint_866_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoNextButton",1230,G__OnlinePlots_Cint_866_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoLiveButton",1215,G__OnlinePlots_Cint_866_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoFileButton",1199,G__OnlinePlots_Cint_866_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoHistoResetButton",1849,G__OnlinePlots_Cint_866_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoHistoSaveButton",1733,G__OnlinePlots_Cint_866_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoHistoSavePSButton",1896,G__OnlinePlots_Cint_866_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoHistoPrintButton",1859,G__OnlinePlots_Cint_866_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoHistoViewButton",1745,G__OnlinePlots_Cint_866_0_39, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleMenu",993,G__OnlinePlots_Cint_866_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDebugLevel",1291,G__OnlinePlots_Cint_866_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDebugLevel",1279,G__OnlinePlots_Cint_866_0_42, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateRunInfo",1316,G__OnlinePlots_Cint_866_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateEventCountInfo",2042,G__OnlinePlots_Cint_866_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateEventNumberInfo",2138,G__OnlinePlots_Cint_866_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateTokenNumberInfo",2137,G__OnlinePlots_Cint_866_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateRootFileInfo",1811,G__OnlinePlots_Cint_866_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowNext",832,G__OnlinePlots_Cint_866_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' live", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowLiveRun",1126,G__OnlinePlots_Cint_866_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' live", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowRunning",1154,G__OnlinePlots_Cint_866_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowFileRun",1110,G__OnlinePlots_Cint_866_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowButton",1053,G__OnlinePlots_Cint_866_0_52, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TGButton' - 0 - b k - 'Pixel_t' 0 - color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowStatus",1061,G__OnlinePlots_Cint_866_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnabled",983,G__OnlinePlots_Cint_866_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_866_0_55, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ServerGui::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_866_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ServerGui::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_866_0_57, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ServerGui::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_866_0_58, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ServerGui::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_866_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_866_0_63, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ServerGui::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_866_0_64, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ServerGui::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_866_0_65, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ServerGui::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_866_0_66, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ServerGui::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ServerGui", 1050, G__OnlinePlots_Cint_866_0_67, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRunStatus(void) {
   /* RunStatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_RunStatus));
   G__memfunc_setup("RunStatus",953,G__OnlinePlots_Cint_867_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_RunStatus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRunNumber",1246,G__OnlinePlots_Cint_867_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventNumber",1451,G__OnlinePlots_Cint_867_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventCounter",1570,G__OnlinePlots_Cint_867_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEndOfRun",1089,G__OnlinePlots_Cint_867_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLiveSource",1345,G__OnlinePlots_Cint_867_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getToken",833,G__OnlinePlots_Cint_867_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEmpty",847,G__OnlinePlots_Cint_867_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getType",738,G__OnlinePlots_Cint_867_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStatus",964,G__OnlinePlots_Cint_867_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTime",719,G__OnlinePlots_Cint_867_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEndOfRunActionPerformed",2627,G__OnlinePlots_Cint_867_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTriggerBits",1446,G__OnlinePlots_Cint_867_0_13, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDetectorBits",1548,G__OnlinePlots_Cint_867_0_14, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTriggerBitsRun",1755,G__OnlinePlots_Cint_867_0_15, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDetectorBitsRun",1857,G__OnlinePlots_Cint_867_0_16, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunNumber",1258,G__OnlinePlots_Cint_867_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventNumber",1463,G__OnlinePlots_Cint_867_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", "endOfRun event has run==0 ; I don't want this event to reset the run#", (void*) NULL, 0);
   G__memfunc_setup("setEventCounter",1582,G__OnlinePlots_Cint_867_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEndOfRun",1101,G__OnlinePlots_Cint_867_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLiveSource",1357,G__OnlinePlots_Cint_867_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setToken",845,G__OnlinePlots_Cint_867_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEmpty",859,G__OnlinePlots_Cint_867_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setType",750,G__OnlinePlots_Cint_867_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStatus",976,G__OnlinePlots_Cint_867_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTime",731,G__OnlinePlots_Cint_867_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTriggerBits",1458,G__OnlinePlots_Cint_867_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDetectorBits",1560,G__OnlinePlots_Cint_867_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTriggerBitsRun",1767,G__OnlinePlots_Cint_867_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDetectorBitsRun",1869,G__OnlinePlots_Cint_867_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEndOfRunActionPerformed",2639,G__OnlinePlots_Cint_867_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_867_0_32, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RunStatus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_867_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RunStatus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_867_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RunStatus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_867_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RunStatus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_867_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_867_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RunStatus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_867_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RunStatus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_867_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RunStatus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_867_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RunStatus::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RunStatus", 953, G__OnlinePlots_Cint_867_0_44, (int) ('i'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_RunStatus), -1, 0, 1, 1, 1, 0, "u 'RunStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RunStatus", 1079, G__OnlinePlots_Cint_867_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_867_0_46, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_RunStatus), -1, 1, 1, 1, 1, 0, "u 'RunStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncServerStatus(void) {
   /* ServerStatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerStatus));
   G__memfunc_setup("ServerStatus",1275,G__OnlinePlots_Cint_868_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerStatus), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getReceiveTime",1426,G__OnlinePlots_Cint_868_0_2, 108, -1, G__defined_typename("time_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRequestTime",1464,G__OnlinePlots_Cint_868_0_3, 108, -1, G__defined_typename("time_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getReceiveType",1445,G__OnlinePlots_Cint_868_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRequestType",1483,G__OnlinePlots_Cint_868_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setReceiveTime",1438,G__OnlinePlots_Cint_868_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'time_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRequestTime",1476,G__OnlinePlots_Cint_868_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'time_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setReceiveType",1457,G__OnlinePlots_Cint_868_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRequestType",1495,G__OnlinePlots_Cint_868_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("diffTimeInSec",1274,G__OnlinePlots_Cint_868_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_868_0_11, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ServerStatus::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_868_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ServerStatus::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_868_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ServerStatus::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_868_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ServerStatus::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_868_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_868_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ServerStatus::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_868_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ServerStatus::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_868_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ServerStatus::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_868_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ServerStatus::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ServerStatus", 1275, G__OnlinePlots_Cint_868_0_23, (int) ('i'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerStatus), -1, 0, 1, 1, 1, 0, "u 'ServerStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ServerStatus", 1401, G__OnlinePlots_Cint_868_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_868_0_25, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_ServerStatus), -1, 1, 1, 1, 1, 0, "u 'ServerStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPGMessage(void) {
   /* PGMessage */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_PGMessage));
   G__memfunc_setup("GetListOfSignals",1602,G__OnlinePlots_Cint_911_0_1, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__OnlinePlots_Cint_911_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__OnlinePlots_Cint_911_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LowPriority",1172,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EmitVA",550,G__OnlinePlots_Cint_911_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_911_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_911_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_911_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_911_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_911_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_911_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_911_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_911_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_911_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_911_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_911_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_911_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_911_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_911_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_911_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__OnlinePlots_Cint_911_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChangedBy",869,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Message",709,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PGMessage",860,G__OnlinePlots_Cint_911_0_26, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_PGMessage), -1, 0, 3, 1, 1, 0, 
"C - - 10 - - g - - 0 'false' exitOnClose "
"k - 'Pixel_t' 0 'Pixel_t(-1)' color", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddLine",657,G__OnlinePlots_Cint_911_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - line", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exit",410,G__OnlinePlots_Cint_911_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessMessage",1444,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"l - 'Long_t' 0 - msg l - 'Long_t' 0 - parm1 "
"l - 'Long_t' 0 - parm2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_911_0_30, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PGMessage::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_911_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PGMessage::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_911_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PGMessage::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_911_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PGMessage::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_911_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_911_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PGMessage::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_911_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PGMessage::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_911_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PGMessage::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_911_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PGMessage::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~PGMessage", 986, G__OnlinePlots_Cint_911_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncendOfRunActionMain(void) {
   /* endOfRunActionMain */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_endOfRunActionMain));
   G__memfunc_setup("endOfRunActionMain",1796,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_endOfRunActionMain), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("main",421,G__OnlinePlots_Cint_912_0_2, 105, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 12 - argv", (char*)NULL, (void*) G__func2void( (int (*)(int, const char**))(&endOfRunActionMain::main) ), 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_912_0_3, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&endOfRunActionMain::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_912_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&endOfRunActionMain::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_912_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&endOfRunActionMain::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_912_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&endOfRunActionMain::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_912_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_912_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&endOfRunActionMain::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_912_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&endOfRunActionMain::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_912_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&endOfRunActionMain::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_912_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&endOfRunActionMain::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("endOfRunActionMain", 1796, G__OnlinePlots_Cint_912_0_15, (int) ('i'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_endOfRunActionMain), -1, 0, 1, 1, 1, 0, "u 'endOfRunActionMain' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~endOfRunActionMain", 1922, G__OnlinePlots_Cint_912_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_912_0_17, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_endOfRunActionMain), -1, 1, 1, 1, 1, 0, "u 'endOfRunActionMain' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncevpServerMain(void) {
   /* evpServerMain */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlinePlots_CintLN_evpServerMain));
   G__memfunc_setup("evpServerMain",1351,G__OnlinePlots_Cint_913_0_1, 105, G__get_linked_tagnum(&G__OnlinePlots_CintLN_evpServerMain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("main",421,G__OnlinePlots_Cint_913_0_2, 105, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - argc C - - 12 - argv", (char*)NULL, (void*) G__func2void( (int (*)(int, const char**))(&evpServerMain::main) ), 0);
   G__memfunc_setup("Class",502,G__OnlinePlots_Cint_913_0_3, 85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&evpServerMain::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlinePlots_Cint_913_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&evpServerMain::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlinePlots_Cint_913_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&evpServerMain::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlinePlots_Cint_913_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&evpServerMain::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlinePlots_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlinePlots_Cint_913_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlinePlots_Cint_913_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&evpServerMain::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlinePlots_Cint_913_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&evpServerMain::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlinePlots_Cint_913_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&evpServerMain::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlinePlots_Cint_913_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&evpServerMain::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("evpServerMain", 1351, G__OnlinePlots_Cint_913_0_15, (int) ('i'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_evpServerMain), -1, 0, 1, 1, 1, 0, "u 'evpServerMain' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~evpServerMain", 1477, G__OnlinePlots_Cint_913_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlinePlots_Cint_913_0_17, (int) ('u'), G__get_linked_tagnum(&G__OnlinePlots_CintLN_evpServerMain), -1, 1, 1, 1, 1, 0, "u 'evpServerMain' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncOnlinePlots_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {
}

static void G__cpp_setup_global9() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalOnlinePlots_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
  G__cpp_setup_global9();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcOnlinePlots_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__OnlinePlots_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TQObjSender = { "TQObjSender" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_evpReader = { "evpReader" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TMapFile = { "TMapFile" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_HistogramGroup = { "HistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR = { "vector<TH1*,allocator<TH1*> >" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH1*,allocator<TH1*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TLine = { "TLine" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TLatex = { "TLatex" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_BESHistogramGroup = { "BESHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_FMSHistogramGroup = { "FMSHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_FMSHistogramGroupcLcLdA = { "FMSHistogramGroup::$" , 101 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_GroupStatisticsHistogramGroup = { "GroupStatisticsHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_L2UpsilonCountsHistogramGroup = { "L2UpsilonCountsHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_L2UpsilonMassHistogramGroup = { "L2UpsilonMassHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_L2UpsilonTowersHistogramGroup = { "L2UpsilonTowersHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_StReadLaserEvent = { "StReadLaserEvent" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_LaserDriftTimeHistogramGroup = { "LaserDriftTimeHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_LaserTpcPadChargeHistogramGroup = { "LaserTpcPadChargeHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_MTDhitsHistogramGroup = { "MTDhitsHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_MTDtriggerinfoHistogramGroup = { "MTDtriggerinfoHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_SVTAnodeHybridHistogramGroup = { "SVTAnodeHybridHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_SVTAnodeSumHistogramGroup = { "SVTAnodeSumHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_SsdPedestalHistogramGroup = { "SsdPedestalHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TOFL0HistogramGroup = { "TOFL0HistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TOFL1multHistogramGroup = { "TOFL1multHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TOFcheckHistogramGroup = { "TOFcheckHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TOFtrayHistogramGroup = { "TOFtrayHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TOFupvpdHistogramGroup = { "TOFupvpdHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_UPCHistogramCtbGroup = { "UPCHistogramCtbGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_UPCHistogramGroup = { "UPCHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_UPCHistogramZdcGroup = { "UPCHistogramZdcGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_VPDHiHistogramGroup = { "VPDHiHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_VPDHistogramGroup = { "VPDHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_pp2ppHistogramGroup = { "pp2ppHistogramGroup" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_pp2ppHistogramGroupcLcLdA = { "pp2ppHistogramGroup::$" , 101 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGLayoutHints = { "TGLayoutHints" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGTextButton = { "TGTextButton" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGVerticalFrame = { "TGVerticalFrame" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGHorizontalFrame = { "TGHorizontalFrame" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGTransientFrame = { "TGTransientFrame" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGGroupFrame = { "TGGroupFrame" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGTextView = { "TGTextView" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGPopupMenu = { "TGPopupMenu" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGButton = { "TGButton" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGPictureButton = { "TGPictureButton" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_DGHelp = { "DGHelp" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGTextBuffer = { "TGTextBuffer" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGTextEntry = { "TGTextEntry" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGLabel = { "TGLabel" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_TGMenuBar = { "TGMenuBar" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_HistoHandler = { "HistoHandler" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_EvpServer = { "EvpServer" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_ServerGui = { "ServerGui" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_RunStatus = { "RunStatus" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_ServerStatus = { "ServerStatus" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_GroupCollection = { "GroupCollection" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_setlEHistogramGroupmUcOAlphacOallocatorlEHistogramGroupmUgRsPgR = { "set<HistogramGroup*,Alpha,allocator<HistogramGroup*> >" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_maplEstringcOGroupCollectioncOlesslEstringgRcOallocatorlEpairlEconstsPstringcOGroupCollectiongRsPgRsPgR = { "map<string,GroupCollection,less<string>,allocator<pair<const string,GroupCollection> > >" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_PGMessage = { "PGMessage" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_endOfRunActionMain = { "endOfRunActionMain" , 99 , -1 };
G__linked_taginfo G__OnlinePlots_CintLN_evpServerMain = { "evpServerMain" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableOnlinePlots_Cint() {
  G__OnlinePlots_CintLN_TClass.tagnum = -1 ;
  G__OnlinePlots_CintLN_TBuffer.tagnum = -1 ;
  G__OnlinePlots_CintLN_TMemberInspector.tagnum = -1 ;
  G__OnlinePlots_CintLN_TObject.tagnum = -1 ;
  G__OnlinePlots_CintLN_TNamed.tagnum = -1 ;
  G__OnlinePlots_CintLN_TString.tagnum = -1 ;
  G__OnlinePlots_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_TList.tagnum = -1 ;
  G__OnlinePlots_CintLN_TObjArray.tagnum = -1 ;
  G__OnlinePlots_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__OnlinePlots_CintLN_TH1D.tagnum = -1 ;
  G__OnlinePlots_CintLN_TH1.tagnum = -1 ;
  G__OnlinePlots_CintLN_TH1F.tagnum = -1 ;
  G__OnlinePlots_CintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__OnlinePlots_CintLN_TH2.tagnum = -1 ;
  G__OnlinePlots_CintLN_TH2D.tagnum = -1 ;
  G__OnlinePlots_CintLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_TQObject.tagnum = -1 ;
  G__OnlinePlots_CintLN_TQObjSender.tagnum = -1 ;
  G__OnlinePlots_CintLN_TCanvas.tagnum = -1 ;
  G__OnlinePlots_CintLN_evpReader.tagnum = -1 ;
  G__OnlinePlots_CintLN_TMapFile.tagnum = -1 ;
  G__OnlinePlots_CintLN_HistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_TLine.tagnum = -1 ;
  G__OnlinePlots_CintLN_TLatex.tagnum = -1 ;
  G__OnlinePlots_CintLN_BESHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_FMSHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_FMSHistogramGroupcLcLdA.tagnum = -1 ;
  G__OnlinePlots_CintLN_GroupStatisticsHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_L2UpsilonCountsHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_L2UpsilonMassHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_L2UpsilonTowersHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_StReadLaserEvent.tagnum = -1 ;
  G__OnlinePlots_CintLN_LaserDriftTimeHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_LaserTpcPadChargeHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_MTDhitsHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_MTDtriggerinfoHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_SVTAnodeHybridHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_SVTAnodeSumHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_SsdPedestalHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_TOFL0HistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_TOFL1multHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_TOFcheckHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_TOFtrayHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_TOFupvpdHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_UPCHistogramCtbGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_UPCHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_UPCHistogramZdcGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_VPDHiHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_VPDHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_pp2ppHistogramGroup.tagnum = -1 ;
  G__OnlinePlots_CintLN_pp2ppHistogramGroupcLcLdA.tagnum = -1 ;
  G__OnlinePlots_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGObject.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGWindow.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGFrame.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGCompositeFrame.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGLayoutHints.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGTextButton.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGVerticalFrame.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGHorizontalFrame.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGMainFrame.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGTransientFrame.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGGroupFrame.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGTextView.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGPopupMenu.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGButton.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGPictureButton.tagnum = -1 ;
  G__OnlinePlots_CintLN_DGHelp.tagnum = -1 ;
  G__OnlinePlots_CintLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGTextBuffer.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGTextEntry.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGLabel.tagnum = -1 ;
  G__OnlinePlots_CintLN_TGMenuBar.tagnum = -1 ;
  G__OnlinePlots_CintLN_HistoHandler.tagnum = -1 ;
  G__OnlinePlots_CintLN_EvpServer.tagnum = -1 ;
  G__OnlinePlots_CintLN_ServerGui.tagnum = -1 ;
  G__OnlinePlots_CintLN_RunStatus.tagnum = -1 ;
  G__OnlinePlots_CintLN_ServerStatus.tagnum = -1 ;
  G__OnlinePlots_CintLN_GroupCollection.tagnum = -1 ;
  G__OnlinePlots_CintLN_setlEHistogramGroupmUcOAlphacOallocatorlEHistogramGroupmUgRsPgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_maplEstringcOGroupCollectioncOlesslEstringgRcOallocatorlEpairlEconstsPstringcOGroupCollectiongRsPgRsPgR.tagnum = -1 ;
  G__OnlinePlots_CintLN_PGMessage.tagnum = -1 ;
  G__OnlinePlots_CintLN_endOfRunActionMain.tagnum = -1 ;
  G__OnlinePlots_CintLN_evpServerMain.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableOnlinePlots_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TString);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TList);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TH1D);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TH1);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TH2);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TH2D);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TQObject);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TQObjSender);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_evpReader);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TMapFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_HistogramGroup),sizeof(HistogramGroup),-1,324864,(char*)NULL,G__setup_memvarHistogramGroup,G__setup_memfuncHistogramGroup);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TLine);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TLatex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_BESHistogramGroup),sizeof(BESHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarBESHistogramGroup,G__setup_memfuncBESHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_FMSHistogramGroup),sizeof(FMSHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarFMSHistogramGroup,G__setup_memfuncFMSHistogramGroup);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_FMSHistogramGroupcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_GroupStatisticsHistogramGroup),sizeof(GroupStatisticsHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarGroupStatisticsHistogramGroup,G__setup_memfuncGroupStatisticsHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_L2UpsilonCountsHistogramGroup),sizeof(L2UpsilonCountsHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarL2UpsilonCountsHistogramGroup,G__setup_memfuncL2UpsilonCountsHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_L2UpsilonMassHistogramGroup),sizeof(L2UpsilonMassHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarL2UpsilonMassHistogramGroup,G__setup_memfuncL2UpsilonMassHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_L2UpsilonTowersHistogramGroup),sizeof(L2UpsilonTowersHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarL2UpsilonTowersHistogramGroup,G__setup_memfuncL2UpsilonTowersHistogramGroup);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_StReadLaserEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_LaserDriftTimeHistogramGroup),sizeof(LaserDriftTimeHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarLaserDriftTimeHistogramGroup,G__setup_memfuncLaserDriftTimeHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_LaserTpcPadChargeHistogramGroup),sizeof(LaserTpcPadChargeHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarLaserTpcPadChargeHistogramGroup,G__setup_memfuncLaserTpcPadChargeHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_MTDhitsHistogramGroup),sizeof(MTDhitsHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarMTDhitsHistogramGroup,G__setup_memfuncMTDhitsHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_MTDtriggerinfoHistogramGroup),sizeof(MTDtriggerinfoHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarMTDtriggerinfoHistogramGroup,G__setup_memfuncMTDtriggerinfoHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_SVTAnodeHybridHistogramGroup),sizeof(SVTAnodeHybridHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarSVTAnodeHybridHistogramGroup,G__setup_memfuncSVTAnodeHybridHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_SVTAnodeSumHistogramGroup),sizeof(SVTAnodeSumHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarSVTAnodeSumHistogramGroup,G__setup_memfuncSVTAnodeSumHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_SsdPedestalHistogramGroup),sizeof(SsdPedestalHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarSsdPedestalHistogramGroup,G__setup_memfuncSsdPedestalHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TOFL0HistogramGroup),sizeof(TOFL0HistogramGroup),-1,324864,(char*)NULL,G__setup_memvarTOFL0HistogramGroup,G__setup_memfuncTOFL0HistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TOFL1multHistogramGroup),sizeof(TOFL1multHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarTOFL1multHistogramGroup,G__setup_memfuncTOFL1multHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TOFcheckHistogramGroup),sizeof(TOFcheckHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarTOFcheckHistogramGroup,G__setup_memfuncTOFcheckHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TOFtrayHistogramGroup),sizeof(TOFtrayHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarTOFtrayHistogramGroup,G__setup_memfuncTOFtrayHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TOFupvpdHistogramGroup),sizeof(TOFupvpdHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarTOFupvpdHistogramGroup,G__setup_memfuncTOFupvpdHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_UPCHistogramCtbGroup),sizeof(UPCHistogramCtbGroup),-1,324864,(char*)NULL,G__setup_memvarUPCHistogramCtbGroup,G__setup_memfuncUPCHistogramCtbGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_UPCHistogramGroup),sizeof(UPCHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarUPCHistogramGroup,G__setup_memfuncUPCHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_UPCHistogramZdcGroup),sizeof(UPCHistogramZdcGroup),-1,324864,(char*)NULL,G__setup_memvarUPCHistogramZdcGroup,G__setup_memfuncUPCHistogramZdcGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_VPDHiHistogramGroup),sizeof(VPDHiHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarVPDHiHistogramGroup,G__setup_memfuncVPDHiHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_VPDHistogramGroup),sizeof(VPDHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarVPDHistogramGroup,G__setup_memfuncVPDHistogramGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_pp2ppHistogramGroup),sizeof(pp2ppHistogramGroup),-1,324864,(char*)NULL,G__setup_memvarpp2ppHistogramGroup,G__setup_memfuncpp2ppHistogramGroup);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_pp2ppHistogramGroupcLcLdA);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGObject);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGLayoutHints);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGTextButton);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGVerticalFrame);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGHorizontalFrame);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGTransientFrame);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGGroupFrame);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGTextView);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGPopupMenu);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGButton);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGPictureButton);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_DGHelp),sizeof(DGHelp),-1,324608,(char*)NULL,G__setup_memvarDGHelp,G__setup_memfuncDGHelp);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGTextBuffer);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGTextEntry);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGLabel);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_TGMenuBar);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_HistoHandler);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_EvpServer),sizeof(EvpServer),-1,263424,(char*)NULL,G__setup_memvarEvpServer,G__setup_memfuncEvpServer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_ServerGui),sizeof(ServerGui),-1,324608,(char*)NULL,G__setup_memvarServerGui,G__setup_memfuncServerGui);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_RunStatus),sizeof(RunStatus),-1,291072,(char*)NULL,G__setup_memvarRunStatus,G__setup_memfuncRunStatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_ServerStatus),sizeof(ServerStatus),-1,291072,(char*)NULL,G__setup_memvarServerStatus,G__setup_memfuncServerStatus);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_GroupCollection);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_setlEHistogramGroupmUcOAlphacOallocatorlEHistogramGroupmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_maplEstringcOGroupCollectioncOlesslEstringgRcOallocatorlEpairlEconstsPstringcOGroupCollectiongRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_PGMessage),sizeof(PGMessage),-1,324608,(char*)NULL,G__setup_memvarPGMessage,G__setup_memfuncPGMessage);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_endOfRunActionMain),sizeof(endOfRunActionMain),-1,292096,(char*)NULL,G__setup_memvarendOfRunActionMain,G__setup_memfuncendOfRunActionMain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlinePlots_CintLN_evpServerMain),sizeof(evpServerMain),-1,292096,(char*)NULL,G__setup_memvarevpServerMain,G__setup_memfuncevpServerMain);
}
extern "C" void G__cpp_setupOnlinePlots_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupOnlinePlots_Cint()");
  G__set_cpp_environmentOnlinePlots_Cint();
  G__cpp_setup_tagtableOnlinePlots_Cint();

  G__cpp_setup_inheritanceOnlinePlots_Cint();

  G__cpp_setup_typetableOnlinePlots_Cint();

  G__cpp_setup_memvarOnlinePlots_Cint();

  G__cpp_setup_memfuncOnlinePlots_Cint();
  G__cpp_setup_globalOnlinePlots_Cint();
  G__cpp_setup_funcOnlinePlots_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncOnlinePlots_Cint();
  return;
}
class G__cpp_setup_initOnlinePlots_Cint {
  public:
    G__cpp_setup_initOnlinePlots_Cint() { G__add_setup_func("OnlinePlots_Cint",(G__incsetup)(&G__cpp_setupOnlinePlots_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initOnlinePlots_Cint() { G__remove_setup_func("OnlinePlots_Cint"); }
};
G__cpp_setup_initOnlinePlots_Cint G__cpp_setup_initializerOnlinePlots_Cint;

